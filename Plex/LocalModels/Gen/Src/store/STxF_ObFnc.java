// ***************************************************************************
// 
// Order.CreateOrderUI : STxF
// 
// ***************************************************************************
// 
// Generated by : CA Plex r7.2.1   (Build 24.004)
// Date - Time  : Saturday, April 22, 2023 - 5:55 PM
// Group Model  : 
// Local Model  : C:\Conference 2023\Web Technology Workshop\webTechConf2023\Plex\LocalModels\store.mdl
// User         : Admin
// Version      : Base
// Level        : Base
// Variant      : Base
// Language     : Base
// 
// ***************************************************************************
// 
// Make Processing Support:
/*
@OBJ_SURROGATE=0x1C0001F5
@FUNCTION=Order.CreateOrderUI
@FNCLNGSYS=Java
@IMPLEMENTATION_NAME=STxF
@TYPE=EXTERNAL
@GENVRL=721
*/

package store;

import ObRun.ObRTTypes.*;
import ObRun.ObComms.*;
import ObRun.ObFunction.*;
import ObRun.ObPanel.ObCtrlData.*;
import java.lang.reflect.*;
import java.util.*;
import java.awt.event.*;

// ***************************************************************************
// Order.CreateOrderUI Function Class
// ***************************************************************************

public final class STxF_ObFnc extends ObFunction
{
    ////////////////////////////////////////////////////////////////////////////////
    // Construction Methods:

    //Default constructor - called by class loader
    //when class gets loaded and 'newInstance()' gets called
    public STxF_ObFnc(ObCallMgr obcallmgr)
    {
        super(obcallmgr);
        STxF_ObDat varObDat = new STxF_ObDat( this);
        super.setLocalVariable( varObDat);
        setFunctionName("Order.CreateOrderUI");
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Variable Access Methods:

    public ObVariableGroup getInVariable()
    {
        if( m_in == null)
            m_in  = new STxF_ObIn( this);
          return m_in;
    }
    public ObVariableGroup getOutVariable()
    {
        if( m_out == null)
            m_out  = new STxF_ObOut( this);
          return m_out;
    }
    public ObVariableGroup getDatVariable()
    {
        if( m_locVariable == null)
            m_locVariable  = new STxF_ObDat( this);
          return m_locVariable;
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Environment variable access methods:

    public void setReturnedStatus(ObCharFld returned)
    {
        ((STxF_ObDat)getDatVariable()).getVariable(m_strVarSTxF_Environment).getField(m_strFldSqmx0r6).assign(returned);
    }

    public void setReturningStatus(ObCharFld returning)
    {
        ((STxF_ObDat)getDatVariable()).getVariable(m_strVarSTxF_Environment).getField(m_strFldSqmx0r8).assign(returning);
    }

    public ObCharFld getReturningStatus()
    {
        return (ObCharFld)(((STxF_ObDat)getDatVariable()).getVariable(m_strVarSTxF_Environment).getField(m_strFldSqmx0r8));
    }

    public void setCallStatus(ObCharFld status)
    {
        ((STxF_ObDat)getDatVariable()).getVariable(m_strVarSTxF_Environment).getField(m_strFldSqmx0rg).assign(status);
    }


// ***************************************************************************
// Function:	Order.CreateOrderUI
// ***************************************************************************

    public void ObRun()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = new STxF_ObPnl(this);
        ObCtrlData.setMenuitem_response(false);
        panel.getPanelData().getGuiCtrl().getPanel().setBusyCursor();
        setPanel(panel);
        panel.setUniqueName("store.STxF");
        panel.start();
        panel.init();

        ObCtrlData.setMenuitem_response(true);
        panel.getPanelData().getGuiCtrl().getPanel().setNotBusyCursor();

// Comment  Copyright 2004 Computer Associates International, Inc. All Rights Reserved.

// ***************************************************************************
// Description
// ***************************************************************************

// Seq 
        {
// Pre Point Description
            {
// Call  UIBASIC/Meta.Options
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Define meta variables for possible function options
// Comment  Not all of these options are used by the pattern library functions
            }
// Edit Point  Description
            {
            }
// Post Point Description
            {
// Comment  WebPlex Initialization
// Comment  Inform the runtime of our inheritance path
// API Call  Source code: WEBCLI60/JAVAStartMeta
                try {
                	panel.getClass().getMethod("getInhPath", new Class[] { })
                		.invoke(panel, new Object[] { });
                try {
                	panel.getClass().getMethod("startMeta", new Class[] { })
                		.invoke(panel, new Object[] { });
                } catch (Exception ex) {
                	throw new RuntimeException("WebClient version error.");
                }
                 
                } catch (RuntimeException e) {
                    throw e;
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("getInhPath", new Class[] { })
// 		.invoke(panel, new Object[] { });
// try {
// 	panel.getClass().getMethod("startMeta", new Class[] { })
// 		.invoke(panel, new Object[] { });
// } catch (Exception ex) {
// 	throw new RuntimeException("WebClient version error.");
// }
//  
// } catch (RuntimeException e) {
//     throw e;
// } catch (Exception ex) {
// }

// ***************************************************************************
// 			// <*Object>	Environment<*Object>
// ***************************************************************************

// Set  Environment<*Object> = Name of WebLogMessages
                v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("WebLogMessages");
// API Call  Source code: WEBCLI60/JAVASetInhPath
                try {
                	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
                		.invoke(panel, new Object[] { v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString() });
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
// 		.invoke(panel, new Object[] { &(1:).toString() });
// } catch (Exception ex) {
// }

// ***************************************************************************
// 			// <*Object>	Environment<*Object>
// ***************************************************************************

// Set  Environment<*Object> = Name of WebShell
                v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("WebShell");
// API Call  Source code: WEBCLI60/JAVASetInhPath
                try {
                	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
                		.invoke(panel, new Object[] { v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString() });
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
// 		.invoke(panel, new Object[] { &(1:).toString() });
// } catch (Exception ex) {
// }
// API Call  Source code: WEBCLI60/JAVAEndMeta
                try {
                	panel.getClass().getMethod("endMeta", new Class[] { })
                		.invoke(panel, new Object[] { });
                } catch (InvocationTargetException ex) {
                	throw new RuntimeException(ex.getTargetException());
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("endMeta", new Class[] { })
// 		.invoke(panel, new Object[] { });
// } catch (InvocationTargetException ex) {
// 	throw new RuntimeException(ex.getTargetException());
// } catch (Exception ex) {
// }
            }

// ***************************************************************************
// Modification history
// ***************************************************************************

// Seq 
            {
// Comment  07-Apr-1999	AGS	Define User meta variable for use in the message meta.#10087644
// Comment  28-Oct-1999	AGS	Define +Terminate meta variable for use in the Terminate meta.#10140727
// Comment  13-Oct-2005	CDC	Edit Point 'Terminate Processing' added to Subroutine Terminate. #12668997;02  #14346413.
// Pre Point Modification history
                {
// Comment  23-Mar-1999	AGS	Move Go Sub show insert outside of meta loop.#10085923
// Comment  30-Mar-1999	AGS	Move Set Focus after Put for the InsertP region.#10087241
// Comment  18-Nov-1999	AGS	Set External values during Initialize Insert.#10142752
                }
// Edit Point  Modification history
                {
// Comment  31-Oct-2003 PauloCD issue star 12832186 - For Java, panel caption is now set through Java runtime
// Comment  09-Mar-2004 PauloCD issue star 12832186 - Undo previous check in to bring the old behaviour back.
// Comment  16-Jly-2010 TERKI02 Implemented support for C# Generator
                }
// Post Point Modification history
                {
                }
            }
        }
// Go Sub  Initialize
        ObSbr_STxF1();
        if(hasReturned())
            return;

// Pre Point Execute
        {
        }
// Edit Point  Execute
        {
// Events Handler
        panel.startPanel();
        if(hasReturned())
            return;
        }
// Post Point Execute
        {
        }
// Sub  Initialize
// Sub  Terminate
// Sub  Send message
// Pre Point Subroutines
        {
// Sub  Close
// Sub  Set panel caption
// Sub  Prompt request
// Sub  Initialize Insert
// Sub  Process Insert
// Sub  Show Insert
// Sub  Insert get panel data
// Sub  Validate Insert
// Sub  Insert process prompt request
        }
// Edit Point  Subroutines
        {
        }
// Post Point Subroutines
        {
// Sub  Get Product Name
// Sub  Get Customer Name
        }


        panel.postProcess();
        if(true)
            return;
    }

    ////////////////////////////////////////////////////////////////////////////////
    // ObPnl class

    final class STxF_ObPnl extends ObPanel
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        // Control Declarations
        ObStaticData m_ObStaticData3151 = null; /* InsertP */
        ObLabelData m_ObLabelData3153 = null; /* ProductID */
        ObEditData m_ObEditData3154 = null; /*  */
        ObLabelData m_ObLabelData3156 = null; /* CustomerID */
        ObEditData m_ObEditData3157 = null; /*  */
        ObLabelData m_ObLabelData3159 = null; /* OrderQty */
        ObEditData m_ObEditData3160 = null; /*  */
        ObLabelData m_ObLabelData3162 = null; /* OrderID */
        ObEditData m_ObEditData3163 = null; /*  */
        ObLabelData m_ObLabelData3165 = null; /* ProductName */
        ObEditData m_ObEditData3166 = null; /*  */
        ObLabelData m_ObLabelData3168 = null; /* CustomerName */
        ObEditData m_ObEditData3169 = null; /*  */
        ObPushbuttonData m_ObPushbuttonData3171 = null; /* &Apply */
        ObPushbuttonData m_ObPushbuttonData3172 = null; /* X */


        public STxF_ObPnl(ObFunction fnc)
        {
            super(fnc, "STxF", 150, "Panel");

//  Initialise the standard set of context variables
            v	= (STxF_ObDat)fnc.getDatVariable();
            in	= (STxF_ObIn)fnc.getInVariable();
            out	= (STxF_ObOut)fnc.getOutVariable();

        }

        public void clearReferences()
        {
            if(m_ObStaticData3151 != null) m_ObStaticData3151.clearReferences();
            m_ObStaticData3151 = null; /* InsertP */
            if(m_ObLabelData3153 != null) m_ObLabelData3153.clearReferences();
            m_ObLabelData3153 = null; /* ProductID */
            if(m_ObEditData3154 != null) m_ObEditData3154.clearReferences();
            m_ObEditData3154 = null; /*  */
            if(m_ObLabelData3156 != null) m_ObLabelData3156.clearReferences();
            m_ObLabelData3156 = null; /* CustomerID */
            if(m_ObEditData3157 != null) m_ObEditData3157.clearReferences();
            m_ObEditData3157 = null; /*  */
            if(m_ObLabelData3159 != null) m_ObLabelData3159.clearReferences();
            m_ObLabelData3159 = null; /* OrderQty */
            if(m_ObEditData3160 != null) m_ObEditData3160.clearReferences();
            m_ObEditData3160 = null; /*  */
            if(m_ObLabelData3162 != null) m_ObLabelData3162.clearReferences();
            m_ObLabelData3162 = null; /* OrderID */
            if(m_ObEditData3163 != null) m_ObEditData3163.clearReferences();
            m_ObEditData3163 = null; /*  */
            if(m_ObLabelData3165 != null) m_ObLabelData3165.clearReferences();
            m_ObLabelData3165 = null; /* ProductName */
            if(m_ObEditData3166 != null) m_ObEditData3166.clearReferences();
            m_ObEditData3166 = null; /*  */
            if(m_ObLabelData3168 != null) m_ObLabelData3168.clearReferences();
            m_ObLabelData3168 = null; /* CustomerName */
            if(m_ObEditData3169 != null) m_ObEditData3169.clearReferences();
            m_ObEditData3169 = null; /*  */
            if(m_ObPushbuttonData3171 != null) m_ObPushbuttonData3171.clearReferences();
            m_ObPushbuttonData3171 = null; /* &Apply */
            if(m_ObPushbuttonData3172 != null) m_ObPushbuttonData3172.clearReferences();
            m_ObPushbuttonData3172 = null; /* X */

            v = null;
            in = null;
            out = null;
            super.clearReferences();
        }

        public void init()
        {
            setState(12288); /* Panel */
            load();

            m_ObStaticData3151 = (ObStaticData)bindControl(3151,12289); /* InsertP */
            m_ObStaticData3151.setUniqueName("m_ObStaticData3151");
            m_ObLabelData3153 = (ObLabelData)bindControl(3153,12290); /* ProductID */
            m_ObLabelData3153.setUniqueName("m_ObLabelData3153");
            m_ObEditData3154 = (ObEditData)bindControl(3154,12291); /*  */
            m_ObEditData3154.setUniqueName("m_ObEditData3154");
// Event:  -> UpdateProduct 
            m_ObEditData3154.registerEvent(ObCtrlData.UPDATED, 3175, "UpdateProduct");

// Event:  -> Prompt 
            m_ObEditData3154.registerEvent(ObCtrlData.DOUBLECLICK, 3177, "Prompt");

            m_ObLabelData3156 = (ObLabelData)bindControl(3156,12292); /* CustomerID */
            m_ObLabelData3156.setUniqueName("m_ObLabelData3156");
            m_ObEditData3157 = (ObEditData)bindControl(3157,12293); /*  */
            m_ObEditData3157.setUniqueName("m_ObEditData3157");
// Event:  -> UpdateCustomer 
            m_ObEditData3157.registerEvent(ObCtrlData.UPDATED, 3180, "UpdateCustomer");

// Event:  -> Prompt 
            m_ObEditData3157.registerEvent(ObCtrlData.DOUBLECLICK, 3177, "Prompt");

            m_ObLabelData3159 = (ObLabelData)bindControl(3159,12294); /* OrderQty */
            m_ObLabelData3159.setUniqueName("m_ObLabelData3159");
            m_ObEditData3160 = (ObEditData)bindControl(3160,12295); /*  */
            m_ObEditData3160.setUniqueName("m_ObEditData3160");
// Event:  -> Prompt 
            m_ObEditData3160.registerEvent(ObCtrlData.DOUBLECLICK, 3177, "Prompt");

            m_ObLabelData3162 = (ObLabelData)bindControl(3162,12296); /* OrderID */
            m_ObLabelData3162.setUniqueName("m_ObLabelData3162");
            m_ObEditData3163 = (ObEditData)bindControl(3163,12297); /*  */
            m_ObEditData3163.setUniqueName("m_ObEditData3163");
// Event:  -> Prompt 
            m_ObEditData3163.registerEvent(ObCtrlData.DOUBLECLICK, 3177, "Prompt");

            m_ObLabelData3165 = (ObLabelData)bindControl(3165,12298); /* ProductName */
            m_ObLabelData3165.setUniqueName("m_ObLabelData3165");
            m_ObEditData3166 = (ObEditData)bindControl(3166,12299); /*  */
            m_ObEditData3166.setUniqueName("m_ObEditData3166");
// Event:  -> Prompt 
            m_ObEditData3166.registerEvent(ObCtrlData.DOUBLECLICK, 3177, "Prompt");

            m_ObLabelData3168 = (ObLabelData)bindControl(3168,12300); /* CustomerName */
            m_ObLabelData3168.setUniqueName("m_ObLabelData3168");
            m_ObEditData3169 = (ObEditData)bindControl(3169,12301); /*  */
            m_ObEditData3169.setUniqueName("m_ObEditData3169");
// Event:  -> Prompt 
            m_ObEditData3169.registerEvent(ObCtrlData.DOUBLECLICK, 3177, "Prompt");

            m_ObPushbuttonData3171 = (ObPushbuttonData)bindControl(3171,12302); /* &Apply */
            m_ObPushbuttonData3171.setUniqueName("m_ObPushbuttonData3171");
// Event: &Apply -> Insert 
            m_ObPushbuttonData3171.registerEvent(ObCtrlData.PRESSED, 3182, "Insert");

            m_ObPushbuttonData3172 = (ObPushbuttonData)bindControl(3172,12303); /* X */
            m_ObPushbuttonData3172.setUniqueName("m_ObPushbuttonData3172");
// Event: X -> Close 
            m_ObPushbuttonData3172.registerEvent(ObCtrlData.PRESSED, 3184, "Close");


            accessPanel(ObCtrlData.WRITE);
            layoutWindow();

            getPanelData().registerLogicalEvent(3180, "UpdateCustomer");
            getPanelData().registerLogicalEvent(3175, "UpdateProduct");
            getPanelData().registerLogicalEvent(3182, "Insert");
            getPanelData().registerLogicalEvent(3177, "Prompt");
            getPanelData().registerLogicalEvent(3184, "Close");
// KeyBoard Event: Prompt 
            getPanelData().registerKeyboardEvent("F4", 3177);
// Event:  -> Close 
            getPanelData().registerEvent(ObCtrlData.QUERYCLOSE, 3184, "Close");

        }

        public void startPanel()
        {
            show();
        }

// ***************************************************************************
// The panel action handler
// ***************************************************************************


        public void eventsHandler()
        {
            ObFunction fnc = getFunction();

// Events Handler
// Event 
            if( true /*In any event*/ )
            {
// Comment  Processing when any event is triggered
// Pre Point Any event
                {
                }
// Edit Point  Any event
                {
                }
// Post Point Any event
                {
                }
            }
// Event  Event: Close
            if( getCurrentAction() == 3184 /* Close */ )
            {
// Go Sub  Close
                ObSbr_STxF4();
                if(hasReturned())
                    return;

            }
// Pre Point Events
            {
// Event  Event: Prompt
                if( getCurrentAction() == 3177 /* Prompt */ )
                {
// Go Sub  Prompt request
                    ObSbr_STxF6();
                    if(hasReturned())
                        return;

                }
// Event  Event: Insert
                if( getCurrentAction() == 3182 /* Insert */ )
                {
// Go Sub  Process Insert
                    ObSbr_STxF8();
                    if(hasReturned())
                        return;

                }
// Event  Event: UpdateProduct
                if( getCurrentAction() == 3175 /* UpdateProduct */ )
                {
// Go Sub  Get Product Name
                    ObSbr_STxF13();
                    if(hasReturned())
                        return;

                }
// Event  Event: UpdateCustomer
                if( getCurrentAction() == 3180 /* UpdateCustomer */ )
                {
// Go Sub  Get Customer Name
                    ObSbr_STxF14();
                    if(hasReturned())
                        return;

                }
            }
// Edit Point  Events
            {
            }
// Post Point Events
            {
            }
        }

        ////////////////////////////////////////////////////////////////////////////////
        // Access Methods

        protected boolean accessPanel(byte accessMode)
        {
            boolean result = false;
            result |= accessRegionv2egetVariable28m_strVarSTxFPanel_InsertP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarSTxFPanel_InsertButtonP29(accessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for region: InsertP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarSTxFPanel_InsertP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;

            result |= accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdName2918(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustName2919(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObLongFldField28m_strVarOrderID2920(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdID2921(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustID2922(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObIntFldField28m_strVarOrderQty2923(fieldAccessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for field: InsertP/InsertP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdName2918(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3166.exchangeData(accessMode, v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdName));

            return result;
        }

// ***************************************************************************
// The read/write function for field: InsertP/InsertP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustName2919(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3169.exchangeData(accessMode, v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustName));

            return result;
        }

// ***************************************************************************
// The read/write function for field: InsertP/InsertP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObLongFldField28m_strVarOrderID2920(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3163.exchangeData(accessMode, v.getVariable(m_strVarSTxFPanel_InsertP).getAsObLongFldField(m_strVarOrderID));

            return result;
        }

// ***************************************************************************
// The read/write function for field: InsertP/InsertP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdID2921(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3154.exchangeData(accessMode, v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdID));

            return result;
        }

// ***************************************************************************
// The read/write function for field: InsertP/InsertP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustID2922(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3157.exchangeData(accessMode, v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustID));

            return result;
        }

// ***************************************************************************
// The read/write function for field: InsertP/InsertP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObIntFldField28m_strVarOrderQty2923(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3160.exchangeData(accessMode, v.getVariable(m_strVarSTxFPanel_InsertP).getAsObIntFldField(m_strVarOrderQty));

            return result;
        }

// ***************************************************************************
// The read/write function for region: InsertButtonP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarSTxFPanel_InsertButtonP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;


            return result;
        }

    }


// ***************************************************************************
// Subroutine:	Initialize
// ***************************************************************************

    void ObSbr_STxF1()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Initialize
// Pre Point Start initialize
        {
        }
// Edit Point  Start initialize
        {
        }
// Post Point Start initialize
        {
        }

// ***************************************************************************
// Message handling & termination setup
// ***************************************************************************

// Seq 
        {
// Set  Environment<*Message delivery> = <*Message delivery.*Dialog>
            v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eq).assign(m_obvalfld_0);

        }
// Pre Point End initialize
        {
// Go Sub  Set panel caption
            ObSbr_STxF5();
            if(hasReturned())
                return;

// Call  UIBASIC/Meta.Options
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Define meta variables for possible function options
// Comment  Not all of these options are used by the pattern library functions
// Pre Point Process options
            {
            }
// Edit Point  Process options
            {
            }
// Post Point Process options
            {
            }
// Go Sub  Initialize Insert
            ObSbr_STxF7();
            if(hasReturned())
                return;

        }
// Edit Point  End initialize
        {
        }
// Post Point End initialize
        {
        }
    }

// ***************************************************************************
// Subroutine:	Terminate
// ***************************************************************************

    void ObSbr_STxF2()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Terminate
// Pre Point Start terminate
        {
        }
// Edit Point  Start terminate
        {
        }
// Post Point Start terminate
        {
        }
// Comment  Terminate if the option is specified, otherwise Return
// Return
        setReturn();
        if(true) return; /* solves unreachable code compilation errors */

    }

// ***************************************************************************
// Subroutine:	Send message
// ***************************************************************************

    void ObSbr_STxF3()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Send message
// Pre Point Start send message
        {
        }
// Edit Point  Start send message
        {
        }
// Post Point Start send message
        {
        }
// Comment  No message handling if *Message delivery undefined
// Case
        // Start of CASE block
        {
// When  Environment<*Message delivery> == <*Message delivery.*Dialog>
            if( v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_0) )
            {
// Dialog Message  Message: OBJECTS/Message
                {
                    Object[] msgParms = new Object[1];
                    msgParms[0] = new String(v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                    getApp().logx(getLocalisationProperty("String.100"), msgParms, ObApplication.DIALOG);
                }

// Comment  &(1:)
            }
// When  Environment<*Message delivery> == <*Message delivery.*Status>
            else
            {
                if( v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_1) )
                {
// Status Message  Message: OBJECTS/Message
                    {
                        Object[] msgParms = new Object[1];
                        msgParms[0] = new String(v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                        getApp().logx(getLocalisationProperty("String.101"), msgParms, ObApplication.STATUS);
                    }

// Comment  &(1:)
                }
// When  Environment<*Message delivery> == <*Message delivery.*Log>
                else
                {
                    if( v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_2) )
                    {
// Log Message  Message: OBJECTS/Message
                        {
                            Object[] msgParms = new Object[1];
                            msgParms[0] = new String(v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                            getApp().logx(getLocalisationProperty("String.102"), msgParms, ObApplication.LOG);
                        }

// Comment  &(1:)
                    }
// When  Environment<*Message delivery> == <*Message delivery.*None>
                    else
                    {
                        if( v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_3) )
                        {
                        }
// Otherwise
                        else
                        {
// Pre Point Handle message
                            {
                            }
// Edit Point  Handle message
                            {
                            }
// Post Point Handle message
                            {
                            }
                        }
                    }
                }
            }
        }
        // End of CASE block
// Set  Environment<*Message ID> = <*Message ID.Null>
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1g5).assign(m_obvalfld_4);

// Set  Environment<*Message text> = <*Message text.*Blank>
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1ed).assign(m_obvalfld_5);

// Pre Point End send message
        {
        }
// Edit Point  End send message
        {
        }
// Post Point End send message
        {
        }
    }

// ***************************************************************************
// Subroutine:	Close
// ***************************************************************************

    void ObSbr_STxF4()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Close
// Comment  Process the Close event
// Pre Point Start Close
        {
        }
// Edit Point  Start Close
        {
        }
// Post Point Start Close
        {
        }
// Go Sub  Terminate
        ObSbr_STxF2();
        if(hasReturned())
            return;

// Pre Point End Close
        {
        }
// Edit Point  End Close
        {
        }
// Post Point End Close
        {
        }
    }

// ***************************************************************************
// Subroutine:	Set panel caption
// ***************************************************************************

    void ObSbr_STxF5()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Set panel caption
// Pre Point Start set panel caption
        {
        }
// Edit Point  Start set panel caption
        {
        }
// Post Point Start set panel caption
        {
        }
// Comment  Set the panel caption from the scoped message text
// Name  Function: Order.CreateOrderUI, Environment<*Object>, .Language
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("CreateOrderUI");

// Format Message  Message: Order.CreateOrderUI.Caption, Environment<*Message text>
        {
            v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.103"));
        }

// Comment  Create Order
// Pre Point Set panel caption text
        {
        }
// Edit Point  Set panel caption text
        {
        }
// Post Point Set panel caption text
        {
        }
// API Call  Source code: JAVAAPI/SetCaption
        ObUserAPI.setWindowTitle(getFunction(), v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString());

// Comment  ObUserAPI.setWindowTitle(getFunction(), &(1:).toString());
// Comment  16-Jly-2010 TERKI02 Implemented support for C# Generator
// Pre Point End set panel caption
        {
        }
// Edit Point  End set panel caption
        {
        }
// Post Point End set panel caption
        {
        }
    }

// ***************************************************************************
// Subroutine:	Prompt request
// ***************************************************************************

    void ObSbr_STxF6()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Prompt request
// Pre Point Start prompt processing
        {
        }
// Edit Point  Start prompt processing
        {
        }
// Post Point Start prompt processing
        {
// Go Sub  Insert process prompt request
            ObSbr_STxF12();
            if(hasReturned())
                return;

        }
// Pre Point End prompt processing
        {
// Go Sub  Get Product Name
            ObSbr_STxF13();
            if(hasReturned())
                return;

// Go Sub  Get Customer Name
            ObSbr_STxF14();
            if(hasReturned())
                return;

        }
// Edit Point  End prompt processing
        {
        }
// Post Point End prompt processing
        {
        }
    }

// ***************************************************************************
// Subroutine:	Initialize Insert
// ***************************************************************************

    void ObSbr_STxF7()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Initialize Insert
// Pre Point Start initialize Insert
        {
        }
// Edit Point  Start initialize Insert
        {
        }
// Post Point Start initialize Insert
        {
        }
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  InsertP<ProductName> to empty
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdName).setEmpty();

// Set  InsertP<ProductName> state (1)
        panel.m_ObLabelData3165.setState(12298); /* ProductName */
        panel.m_ObEditData3166.setState(12299); /*  */
// Comment  Any data in RepeatData fields is initialized on the panel for ach insert
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  InsertP<CustomerName> to empty
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustName).setEmpty();

// Set  InsertP<CustomerName> state (1)
        panel.m_ObLabelData3168.setState(12300); /* CustomerName */
        panel.m_ObEditData3169.setState(12301); /*  */
// Comment  Any data in RepeatData fields is initialized on the panel for ach insert
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  InsertP<OrderID> to empty
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObLongFldField(m_strVarOrderID).setEmpty();

// Set  InsertP<OrderID> state (1)
        panel.m_ObLabelData3162.setState(12296); /* OrderID */
        panel.m_ObEditData3163.setState(12297); /*  */
// Comment  Any data in RepeatData fields is initialized on the panel for ach insert
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  InsertP<ProductID> to empty
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdID).setEmpty();

// Set  InsertP<ProductID> state (1)
        panel.m_ObLabelData3153.setState(12290); /* ProductID */
        panel.m_ObEditData3154.setState(12291); /*  */
// Comment  Any data in RepeatData fields is initialized on the panel for ach insert
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  InsertP<CustomerID> to empty
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustID).setEmpty();

// Set  InsertP<CustomerID> state (1)
        panel.m_ObLabelData3156.setState(12292); /* CustomerID */
        panel.m_ObEditData3157.setState(12293); /*  */
// Comment  Any data in RepeatData fields is initialized on the panel for ach insert
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  InsertP<OrderQty> to empty
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObIntFldField(m_strVarOrderQty).setEmpty();

// Set  InsertP<OrderQty> state (1)
        panel.m_ObLabelData3159.setState(12294); /* OrderQty */
        panel.m_ObEditData3160.setState(12295); /*  */
// Comment  Any data in RepeatData fields is initialized on the panel for ach insert
// Call  UIBASIC/Meta.SetExternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set calculated and displayed field values
// Comment  Enclose this in a view defining meta loop.
// Call  UIBASIC/Meta.SetExternalNonViewValues
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set calculated and displayed field values
// Comment  Enclose this in a 'For each non-view' meta loop.
// Call  UIBASIC/Meta.SetExternalNonViewValues
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set calculated and displayed field values
// Comment  Enclose this in a 'For each non-view' meta loop.
// Go Sub  Show Insert
        ObSbr_STxF9();
        if(hasReturned())
            return;

// Pre Point End initialize Insert
        {
        }
// Edit Point  End initialize Insert
        {
        }
// Post Point End initialize Insert
        {
        }
    }

// ***************************************************************************
// Subroutine:	Process Insert
// ***************************************************************************

    void ObSbr_STxF8()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Process Insert
// Pre Point Start process Insert
        {
        }
// Edit Point  Start process Insert
        {
        }
// Post Point Start process Insert
        {
// Get  InsertP
            panel.accessRegionv2egetVariable28m_strVarSTxFPanel_InsertP29(ObCtrlData.READ);

// Call  Order.CreateOrder

            getObVariableGroupX("store.ST18F_ObIn").getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarProdID).assign(v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdID));
            getObVariableGroupX("store.ST18F_ObIn").getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustID));
            getObVariableGroupX("store.ST18F_ObIn").getVariable(m_strVarST18F_Order).getAsObIntFldField(m_strVarOrderQty).assign(v.getVariable(m_strVarSTxFPanel_InsertP).getAsObIntFldField(m_strVarOrderQty));
            getObVariableGroupX("store.ST18F_ObIn").getVariable(m_strVarST18F_Order).getAsObLongFldField(m_strVarOrderID).assign(v.getVariable(m_strVarSTxFPanel_InsertP).getAsObLongFldField(m_strVarOrderID));

            {
                ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.ST18F_ObIn"), getObVariableGroupX("store.ST18F_ObOut"), "store.ST18F_ObFnc","External", "Java", "DefaultMisc" );
                if(obrun != null)
                {
                    obrun.ObRun();
                    obrun.ObPostRun();
                }
            }

// If  Environment<*Returned status> IS <State: OBJECTS/*Returned status.*Abnormal>
            if( ((v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0r6).isNotEqual(m_obvalfld_6))) )
            {
// Cast  Environment<*Message text>, Order.CreateOrder/Output<*Message>
                v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1ed).castFrom(getObVariableGroupX("store.ST18F_ObOut").getVariable(m_strVarST18F_Output).getAsObCharFldField(m_strVarSqmx1c9));

            }
// Else
            else
            {
// Format Message  Message: Order.Order created, Environment<*Message text>
                {
                    v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.104"));
                }

// Comment  The order was created successfully.
            }
// Go Sub  Send message
            ObSbr_STxF3();
            if(hasReturned())
                return;

        }
// Pre Point End process Insert
        {
        }
// Edit Point  End process Insert
        {
        }
// Post Point End process Insert
        {
        }
    }

// ***************************************************************************
// Subroutine:	Show Insert
// ***************************************************************************

    void ObSbr_STxF9()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Show Insert
// Pre Point Start show Insert
        {
        }
// Edit Point  Start show Insert
        {
        }
// Post Point Start show Insert
        {
        }
// Set  InsertP = Restrict

// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectVirtuals
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set the keys of the view to read-only.
// Comment  Enclose this function in a view defining meta loop.
// Put  InsertP
        panel.accessRegionv2egetVariable28m_strVarSTxFPanel_InsertP29(ObCtrlData.WRITE);

// Set Focus  InsertP

// Set focus to InsertP.<All>
        panel.getPanelData().startFocusProcess();
        panel.accessRegionv2egetVariable28m_strVarSTxFPanel_InsertP29(ObCtrlData.SETFOCUS);

// Pre Point End show Insert
        {
        }
// Edit Point  End show Insert
        {
        }
// Post Point End show Insert
        {
        }
    }

// ***************************************************************************
// Subroutine:	Insert get panel data
// ***************************************************************************

    void ObSbr_STxF10()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Insert get panel data
// Pre Point Start Insert get panel data
        {
        }
// Edit Point  Start Insert get panel data
        {
        }
// Post Point Start Insert get panel data
        {
        }
// Get  InsertP
        panel.accessRegionv2egetVariable28m_strVarSTxFPanel_InsertP29(ObCtrlData.READ);

// Call  UIBASIC/Meta.SetInternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set internal values for panel fields.
// Comment  Enclose this in a view defining meta loop.
// Call  UIBASIC/Meta.SetInternalNonViewValues
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set internal values for panel fields.
// Comment  Enclose this in a '+for each non-view field' meta loop.
// Call  UIBASIC/Meta.SetInternalNonViewValues
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set internal values for panel fields.
// Comment  Enclose this in a '+for each non-view field' meta loop.
// Pre Point End Insert get panel data
        {
        }
// Edit Point  End Insert get panel data
        {
        }
// Post Point End Insert get panel data
        {
        }
    }

// ***************************************************************************
// Subroutine:	Validate Insert
// ***************************************************************************

    void ObSbr_STxF11()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Validate Insert
// Pre Point Start validate Insert
        {
        }
// Edit Point  Start validate Insert
        {
        }
// Post Point Start validate Insert
        {
        }
// Pre Point End validate Insert
        {
        }
// Edit Point  End validate Insert
        {
        }
// Post Point End validate Insert
        {
        }
    }

// ***************************************************************************
// Subroutine:	Insert process prompt request
// ***************************************************************************

    void ObSbr_STxF12()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Insert process prompt request
// Pre Point Start Insert process prompt request
        {
        }
// Edit Point  Start Insert process prompt request
        {
        }
// Post Point Start Insert process prompt request
        {
        }
// Go Sub  Insert get panel data
        ObSbr_STxF10();
        if(hasReturned())
            return;

// Call  UIBASIC/Meta.CallSelector
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Date		By	Description
// 29-Jan-1998	AGS	Create.
// Comment  Find and call the selector function for a field with focus
// Comment  Enclose this function in a variable defining meta loop.
// Set  Environment<*System> = <*System.Null>
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1bo).assign(m_obvalfld_4);

// Set  Environment<*Object name> = <*Object name.Null>
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh).assign(m_obvalfld_4);

// Set  Environment<*Panel status> = <*Panel status.*Normal>
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0rc).assign(m_obvalfld_6);


// If InsertP.InsertP is input capable
        if( panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdName2918(ObCtrlData.IFEDITABLE) )
        {

// If InsertP.InsertP has focus
                panel.getPanelData().startFocusProcess();
                panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdName2918(ObCtrlData.IFFOCUS);
                if( panel.getPanelData().whoHasFocus() > 0 )
                {
// Comment  Store the name of the field with focus
// Set  Environment<*Object name> = Name of ProductName
                        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh).fromString("ProductName");
                }

        }


// If InsertP.InsertP is input capable
        if( panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustName2919(ObCtrlData.IFEDITABLE) )
        {

// If InsertP.InsertP has focus
                panel.getPanelData().startFocusProcess();
                panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustName2919(ObCtrlData.IFFOCUS);
                if( panel.getPanelData().whoHasFocus() > 0 )
                {
// Comment  Store the name of the field with focus
// Set  Environment<*Object name> = Name of CustomerName
                        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh).fromString("CustomerName");
                }

        }


// If InsertP.InsertP is input capable
        if( panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObLongFldField28m_strVarOrderID2920(ObCtrlData.IFEDITABLE) )
        {

// If InsertP.InsertP has focus
                panel.getPanelData().startFocusProcess();
                panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObLongFldField28m_strVarOrderID2920(ObCtrlData.IFFOCUS);
                if( panel.getPanelData().whoHasFocus() > 0 )
                {
// Comment  Store the name of the field with focus
// Set  Environment<*Object name> = Name of OrderID
                        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh).fromString("OrderID");
                }

        }


// If InsertP.InsertP is input capable
        if( panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdID2921(ObCtrlData.IFEDITABLE) )
        {

// If InsertP.InsertP has focus
                panel.getPanelData().startFocusProcess();
                panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdID2921(ObCtrlData.IFFOCUS);
                if( panel.getPanelData().whoHasFocus() > 0 )
                {
// Comment  Store the name of the field with focus
// Set  Environment<*Object name> = Name of ProductID
                        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh).fromString("ProductID");
                }

        }


// If InsertP.InsertP is input capable
        if( panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustID2922(ObCtrlData.IFEDITABLE) )
        {

// If InsertP.InsertP has focus
                panel.getPanelData().startFocusProcess();
                panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustID2922(ObCtrlData.IFFOCUS);
                if( panel.getPanelData().whoHasFocus() > 0 )
                {
// Comment  Store the name of the field with focus
// Set  Environment<*Object name> = Name of CustomerID
                        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh).fromString("CustomerID");
                }

        }


// If InsertP.InsertP is input capable
        if( panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObIntFldField28m_strVarOrderQty2923(ObCtrlData.IFEDITABLE) )
        {

// If InsertP.InsertP has focus
                panel.getPanelData().startFocusProcess();
                panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObIntFldField28m_strVarOrderQty2923(ObCtrlData.IFFOCUS);
                if( panel.getPanelData().whoHasFocus() > 0 )
                {
// Comment  Store the name of the field with focus
// Set  Environment<*Object name> = Name of OrderQty
                        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh).fromString("OrderQty");
                }

        }

// Set  Environment<*Boolean> = <*Boolean.*False>
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0s3).assign(m_obvalfld_7);

// Comment  Check for generic entity prompt function
// Set  Environment<*System> = Name of ProductID
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1bo).fromString("ProductID");
// If  Environment<*System> == Environment<*Object name>
        if( v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1bo).isEqual(v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh)) )
        {
// Set  Environment<*Boolean> = <*Boolean.*True>
            v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0s3).assign(m_obvalfld_8);

        }
// If  Environment<*Boolean> == <*Boolean.*True> AND Environment<*Panel status> == <*Panel status.*Normal>
        if( (v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0s3).isEqual(m_obvalfld_8)) && (v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0rc).isEqual(m_obvalfld_6)) )
        {
            v.getVariable(m_strVarSTxF_TargetRelations).getAsObCharFldField(m_strVarProdID).castFrom(v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdID));

// Call Product.Selector


            getObVariableGroupX("store.STnF_ObIn").getVariable(m_strVarSTnF_PromptKey).getAsObCharFldField(m_strVarProdID).assign(v.getVariable(m_strVarSTxF_TargetRelations).getAsObCharFldField(m_strVarProdID));

            {
                ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STnF_ObIn"), getObVariableGroupX("store.STnF_ObOut"), "store.STnF_ObFnc","External", "Java", "" );
                if(obrun != null)
                {
                    obrun.ObRun();
                    obrun.ObPostRun();
                }
            }
            v.getVariable(m_strVarSTxF_TargetRelations).getAsObCharFldField(m_strVarProdID).assign(getObVariableGroupX("store.STnF_ObIn").getVariable(m_strVarSTnF_PromptKey).getAsObCharFldField(m_strVarProdID));

// Set  Environment<*Panel status> = <*Panel status.*Prompted>
            v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0rc).assign(m_obvalfld_9);

            v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdID).castFrom(v.getVariable(m_strVarSTxF_TargetRelations).getAsObCharFldField(m_strVarProdID));
        }
// Comment  Check for generic entity prompt function
// Set  Environment<*System> = Name of CustomerID
        v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1bo).fromString("CustomerID");
// If  Environment<*System> == Environment<*Object name>
        if( v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx1bo).isEqual(v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0xh)) )
        {
// Set  Environment<*Boolean> = <*Boolean.*True>
            v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0s3).assign(m_obvalfld_8);

        }
// If  Environment<*Boolean> == <*Boolean.*True> AND Environment<*Panel status> == <*Panel status.*Normal>
        if( (v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0s3).isEqual(m_obvalfld_8)) && (v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0rc).isEqual(m_obvalfld_6)) )
        {
            v.getVariable(m_strVarSTxF_TargetRelations).getAsObCharFldField(m_strVarCustID).castFrom(v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustID));

// Call Customer.Selector


            getObVariableGroupX("store.SToF_ObIn").getVariable(m_strVarSToF_PromptKey).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarSTxF_TargetRelations).getAsObCharFldField(m_strVarCustID));

            {
                ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.SToF_ObIn"), getObVariableGroupX("store.SToF_ObOut"), "store.SToF_ObFnc","External", "Java", "" );
                if(obrun != null)
                {
                    obrun.ObRun();
                    obrun.ObPostRun();
                }
            }
            v.getVariable(m_strVarSTxF_TargetRelations).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.SToF_ObIn").getVariable(m_strVarSToF_PromptKey).getAsObCharFldField(m_strVarCustID));

// Set  Environment<*Panel status> = <*Panel status.*Prompted>
            v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0rc).assign(m_obvalfld_9);

            v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustID).castFrom(v.getVariable(m_strVarSTxF_TargetRelations).getAsObCharFldField(m_strVarCustID));
        }
// Pre Point Insert post prompt processing
        {
        }
// Edit Point  Insert post prompt processing
        {
        }
// Post Point Insert post prompt processing
        {
        }
// If  Environment<*Panel status> == <*Panel status.*Prompted>
        if( v.getVariable(m_strVarSTxF_Environment).getAsObCharFldField(m_strVarSqmx0rc).isEqual(m_obvalfld_9) )
        {
// Go Sub  Show Insert
            ObSbr_STxF9();
            if(hasReturned())
                return;

        }
// Pre Point End Insert process prompt request
        {
        }
// Edit Point  End Insert process prompt request
        {
        }
// Post Point End Insert process prompt request
        {
        }
    }

// ***************************************************************************
// Subroutine:	Get Product Name
// ***************************************************************************

    void ObSbr_STxF13()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Get Product Name
// Get  InsertP<ProductID>
        panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdID2921(ObCtrlData.READ);

// Call  Product.Fetch.SingleFetch

        getObVariableGroupX("store.STgF_ObIn").getVariable(m_strVarSTgF_FetchKey).getAsObCharFldField(m_strVarProdID).assign(v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdID));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STgF_ObIn"), getObVariableGroupX("store.STgF_ObOut"), "store.STgF_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdID).assign(getObVariableGroupX("store.STgF_ObIn").getVariable(m_strVarSTgF_FetchKey).getAsObCharFldField(m_strVarProdID));

// Set  InsertP<ProductName> = Product.Fetch.SingleFetch/FetchedData<ProductName>
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarProdName).assign(getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObCharFldField(m_strVarProdName));

// Put  InsertP<ProductName>
        panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarProdName2918(ObCtrlData.WRITE);

    }

// ***************************************************************************
// Subroutine:	Get Customer Name
// ***************************************************************************

    void ObSbr_STxF14()
    {
//  The standard set of context variables
        STxF_ObDat	v;
        STxF_ObIn	in;
        STxF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STxF_ObDat)fnc.getDatVariable();
        in	= (STxF_ObIn)fnc.getInVariable();
        out	= (STxF_ObOut)fnc.getOutVariable();

        STxF_ObPnl panel = (STxF_ObPnl)getPanel();

// Sub  Get Customer Name
// Get  InsertP<CustomerID>
        panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustID2922(ObCtrlData.READ);

// Call  Customer.Fetch.SingleFetch

        getObVariableGroupX("store.STpF_ObIn").getVariable(m_strVarSTpF_FetchKey).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustID));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STpF_ObIn"), getObVariableGroupX("store.STpF_ObOut"), "store.STpF_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.STpF_ObIn").getVariable(m_strVarSTpF_FetchKey).getAsObCharFldField(m_strVarCustID));

// Set  InsertP<CustomerName> = Customer.Fetch.SingleFetch/FetchedData<CustomerName>
        v.getVariable(m_strVarSTxFPanel_InsertP).getAsObCharFldField(m_strVarCustName).assign(getObVariableGroupX("store.STpF_ObOut").getVariable(m_strVarSTpF_FetchedData).getAsObCharFldField(m_strVarCustName));

// Put  InsertP<CustomerName>
        panel.accessFieldv2egetVariable28m_strVarSTxFPanel_InsertP292egetAsObCharFldField28m_strVarCustName2919(ObCtrlData.WRITE);

    }

// ***************************************************************************
// The variables used by: Order.CreateOrderUI
// ***************************************************************************

    ////////////////////////////////////////////////////////////////
    // ObDat Variable Group
    final class STxF_ObDat extends ObVariableGroupX
    {
        ////////////////////////////////////////////////////////////////
        // Members

        ////////////////////////////////////////////////////////////////
        // Constructors
        public STxF_ObDat(ObFunction fnc)
        {
            super(ObVariableGroup.VT_LOCAL, fnc);
            addVariable("STxF_Restrict", initvarSTxF_STxF_Restrict());
            addVariable("STxF_InsertL", initvarSTxF_STxF_InsertL());
            addVariable("STxF_RepeatData", initvarSTxF_STxF_RepeatData());
            addVariable("STxF_TargetRelations", initvarSTxF_STxF_TargetRelations());
            addVariable("STxFPanel_InsertP", initvarSTxF_STxFPanel_InsertP());
            addVariable("STxFPanel_InsertButtonP", initvarSTxF_STxFPanel_InsertButtonP());
            addVariable("STxF_Environment", initvarSTxF_STxF_Environment());
        }

        public STxF_ObDat(ObApplication obapp)
        {
            super(obapp, ObVariableGroup.VT_LOCAL);
            addVariable("STxF_Restrict", initvarSTxF_STxF_Restrict());
            addVariable("STxF_InsertL", initvarSTxF_STxF_InsertL());
            addVariable("STxF_RepeatData", initvarSTxF_STxF_RepeatData());
            addVariable("STxF_TargetRelations", initvarSTxF_STxF_TargetRelations());
            addVariable("STxFPanel_InsertP", initvarSTxF_STxFPanel_InsertP());
            addVariable("STxFPanel_InsertButtonP", initvarSTxF_STxFPanel_InsertButtonP());
            addVariable("STxF_Environment", initvarSTxF_STxF_Environment());
        }

        public STxF_ObDat()
        {
            super(ObVariableGroup.VT_LOCAL, null);
            addVariable("STxF_Restrict", initvarSTxF_STxF_Restrict());
            addVariable("STxF_InsertL", initvarSTxF_STxF_InsertL());
            addVariable("STxF_RepeatData", initvarSTxF_STxF_RepeatData());
            addVariable("STxF_TargetRelations", initvarSTxF_STxF_TargetRelations());
            addVariable("STxFPanel_InsertP", initvarSTxF_STxFPanel_InsertP());
            addVariable("STxFPanel_InsertButtonP", initvarSTxF_STxFPanel_InsertButtonP());
            addVariable("STxF_Environment", initvarSTxF_STxF_Environment());
        }






        ////////////////////////////////////////////////////////////////
        // Restrict Variable
        public ObVariableX initvarSTxF_STxF_Restrict()
        {
            ObVariableX var = new ObVariableX(this, "varSTxF_STxF_Restrict");


            return var;
        } 

        // End of Restrict Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // InsertL Variable
        public ObVariableX initvarSTxF_STxF_InsertL()
        {
            ObVariableX var = new ObVariableX(this, "varSTxF_STxF_InsertL");


            return var;
        } 

        // End of InsertL Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // RepeatData Variable
        public ObVariableX initvarSTxF_STxF_RepeatData()
        {
            ObVariableX var = new ObVariableX(this, "varSTxF_STxF_RepeatData");


            return var;
        } 

        // End of RepeatData Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // TargetRelations Variable
        public ObVariableX initvarSTxF_STxF_TargetRelations()
        {
            ObVariableX var = new ObVariableX(this, "varSTxF_STxF_TargetRelations");

            var.addField("ProdID", new ObCharFld(ObField.LOCAL, 10, 'c', "ProdID", false, false, false, "", m_obapp, false)); /* ProductID */
            var.addField("CustID", new ObCharFld(ObField.LOCAL, 10, 'c', "CustID", false, false, false, "", m_obapp, false)); /* CustomerID */

            return var;
        } 

        // End of TargetRelations Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // InsertP Variable
        public ObVariableX initvarSTxF_STxFPanel_InsertP()
        {
            ObVariableX var = new ObVariableX(this, "varSTxF_STxFPanel_InsertP");

            var.addField("ProdName", new ObCharFld(ObField.PANEL, 40, 'c', "ProdName", false, false, false, "", m_obapp, false)); /* ProductName */
            var.addField("CustName", new ObCharFld(ObField.PANEL, 40, 'c', "CustName", false, false, false, "", m_obapp, false)); /* CustomerName */
            var.addField("OrderID", new ObLongFld(ObField.PANEL, 9, 0, 'p', "OrderID", "", m_obapp)); /* OrderID */
            var.addField("ProdID", new ObCharFld(ObField.PANEL, 10, 'c', "ProdID", false, false, false, "", m_obapp, false)); /* ProductID */
            var.addField("CustID", new ObCharFld(ObField.PANEL, 10, 'c', "CustID", false, false, false, "", m_obapp, false)); /* CustomerID */
            var.addField("OrderQty", new ObIntFld(ObField.PANEL, 4, 0, 'p', "OrderQty", "", m_obapp)); /* OrderQty */

            return var;
        } 

        // End of InsertP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // InsertButtonP Variable
        public ObVariableX initvarSTxF_STxFPanel_InsertButtonP()
        {
            ObVariableX var = new ObVariableX(this, "varSTxF_STxFPanel_InsertButtonP");


            return var;
        } 

        // End of InsertButtonP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // Environment Variable
        public ObVariableX initvarSTxF_STxF_Environment()
        {
            ObVariableX var = new ObVariableX(this, "varSTxF_STxF_Environment");

            var.addField("Sqmx1ac", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1ac", false, false, false, "", m_obapp, false)); /* *Focus set */
            var.addField("Sqmx1bm", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bm", false, false, false, "", m_obapp, false)); /* *Database */
            var.addField("Sqmx1bo", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bo", false, false, false, "", m_obapp, false)); /* *System */
            var.addField("Sqmx1c9", new ObCharFld(ObField.ENVIRONMENT, 512, 'c', "Sqmx1c9", false, false, false, "", m_obapp, false)); /* *Message */
            var.addField("Sqmx1e9", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx1e9", false, false, false, "", m_obapp, false)); /* *Validation */
            var.addField("Sqmx1ed", new ObCharFld(ObField.ENVIRONMENT, 256, 'c', "Sqmx1ed", false, true, false, "", m_obapp, false)); /* *Message text */
            var.addField("Sqmx1eq", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1eq", false, false, false, "", m_obapp, false)); /* *Message delivery */
            var.addField("Sqmx1eu", new ObCharFld(ObField.ENVIRONMENT, 128, 'c', "Sqmx1eu", false, true, false, "", m_obapp, false)); /* *Object */
            var.addField("Sqmx1g5", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1g5", false, false, false, "", m_obapp, false)); /* *Message ID */
            var.addField("Sqmx0r4", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r4", false, false, false, "", m_obapp, false)); /* *View status */
            var.addField("Sqmx0r6", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r6", false, false, false, "", m_obapp, false)); /* *Returned status */
            var.addField("Sqmx0r8", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r8", false, false, false, "", m_obapp, false)); /* *Returning status */
            var.addField("Sqmx0ra", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0ra", false, false, false, "", m_obapp, false)); /* *Report status */
            var.addField("Sqmx0rc", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rc", false, false, false, "", m_obapp, false)); /* *Panel status */
            var.addField("Sqmx0re", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0re", false, false, false, "", m_obapp, false)); /* *Error status */
            var.addField("Sqmx0rg", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rg", false, false, false, "", m_obapp, false)); /* *Call status */
            var.addField("Sqmx0s3", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx0s3", false, false, false, "", m_obapp, false)); /* *Boolean */
            var.addField("Sqmx0xh", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx0xh", false, false, false, "", m_obapp, false)); /* *Object name */

            return var;
        } 

        // End of Environment Variable
        ////////////////////////////////////////////////////////////////
    }
    // End Of Order.CreateOrderUI Variable Group
    ////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Field Values:

        ObCharFld m_obvalfld_9 = new ObCharFld("PROMPT", 7);
        ObCharFld m_obvalfld_3 = new ObCharFld("N", 1);
        ObCharFld m_obvalfld_6 = new ObCharFld(" ", 7);
        ObCharFld m_obvalfld_5 = new ObCharFld("", 256);
        ObCharFld m_obvalfld_1 = new ObCharFld("S", 1);
        ObCharFld m_obvalfld_0 = new ObCharFld("D", 1);
        ObCharFld m_obvalfld_8 = new ObCharFld("1", 1);
        ObCharFld m_obvalfld_7 = new ObCharFld("0", 1);
        ObCharFld m_obvalfld_4 = new ObCharFld(" ", 32);
        ObCharFld m_obvalfld_2 = new ObCharFld("L", 1);
    // End Of Field Values
    ////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Variable and Field Names:

        public final String m_strVarOrderID = "OrderID";
        public final String m_strFldSqmx0rg = "Sqmx0rg";
        public final String m_strVarSqmx1eu = "Sqmx1eu";
        public final String m_strVarSTxF_Environment = "STxF_Environment";
        public final String m_strVarSToF_PromptKey = "SToF_PromptKey";
        public final String m_strVarSTnF_PromptKey = "STnF_PromptKey";
        public final String m_strFldSqmx0r8 = "Sqmx0r8";
        public final String m_strVarSqmx1ed = "Sqmx1ed";
        public final String m_strVarSqmx0r6 = "Sqmx0r6";
        public final String m_strVarSqmx1g5 = "Sqmx1g5";
        public final String m_strVarSTpF_FetchKey = "STpF_FetchKey";
        public final String m_strVarSTgF_FetchKey = "STgF_FetchKey";
        public final String m_strVarProdName = "ProdName";
        public final String m_strVarSqmx0xh = "Sqmx0xh";
        public final String m_strVarProdID = "ProdID";
        public final String m_strVarSTxF_TargetRelations = "STxF_TargetRelations";
        public final String m_strVarSqmx0s3 = "Sqmx0s3";
        public final String m_strVarSqmx1c9 = "Sqmx1c9";
        public final String m_strVarSTxFPanel_InsertButtonP = "STxFPanel_InsertButtonP";
        public final String m_strVarSTxFPanel_InsertP = "STxFPanel_InsertP";
        public final String m_strVarST18F_Order = "ST18F_Order";
        public final String m_strVarSqmx1bo = "Sqmx1bo";
        public final String m_strFldSqmx0r6 = "Sqmx0r6";
        public final String m_strVarSqmx0rc = "Sqmx0rc";
        public final String m_strVarST18F_Output = "ST18F_Output";
        public final String m_strVarSqmx1eq = "Sqmx1eq";
        public final String m_strVarOrderQty = "OrderQty";
        public final String m_strVarSTpF_FetchedData = "STpF_FetchedData";
        public final String m_strVarSTgF_FetchedData = "STgF_FetchedData";
        public final String m_strVarCustID = "CustID";
        public final String m_strVarCustName = "CustName";
    // End Of Variable and Field Names
    ////////////////////////////////////////////////////////////////////////////////
}
// ***************************************************************************
