// ***************************************************************************
// 
// Customer.Fetch.CheckRow : STmF
// 
// ***************************************************************************
// 
// Generated by : CA Plex r7.2.1   (Build 24.004)
// Date - Time  : Sunday, April 16, 2023 - 1:53 PM
// Group Model  : C:\Development\Conferences\2023 Boca Raton\Web Tech Workshop\Plex\GroupModels\Store
// Local Model  : C:\Development\Conferences\2023 Boca Raton\Web Tech Workshop\Plex\LocalModels\store.mdl
// User         : Admin
// Version      : Base
// Level        : Base
// Variant      : Base
// Language     : Base
// 
// ***************************************************************************
// 
// Make Processing Support:
/*
@OBJ_SURROGATE=0x1C00005A
@FUNCTION=Customer.Fetch.CheckRow
@FNCLNGSYS=Java
@IMPLEMENTATION_NAME=STmF
@TYPE=EXTERNAL
@GENVRL=721
*/

package store;

import ObRun.ObRTTypes.*;
import ObRun.ObComms.*;
import ObRun.ObFunction.*;
import ObRun.ObPanel.ObCtrlData.*;
import ObRun.ObDatabase.*;
import java.lang.reflect.*;
import java.util.*;
import java.awt.event.*;

// ***************************************************************************
// Customer.Fetch.CheckRow Function Class
// ***************************************************************************

public final class STmF_ObFnc extends ObFunction
{
    ////////////////////////////////////////////////////////////////////////////////
    // Construction Methods:

    //Default constructor - called by class loader
    //when class gets loaded and 'newInstance()' gets called
    public STmF_ObFnc(ObCallMgr obcallmgr)
    {
        super(obcallmgr);
        STmF_ObDat varObDat = new STmF_ObDat( this);
        super.setLocalVariable( varObDat);
        setFunctionName("Customer.Fetch.CheckRow");
        setDBConnectionName("", false);
        setVioKeys();
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Variable Access Methods:

    public ObVariableGroup getInVariable()
    {
        if( m_in == null)
            m_in  = new STmF_ObIn( this);
          return m_in;
    }
    public ObVariableGroup getOutVariable()
    {
        if( m_out == null)
            m_out  = new STmF_ObOut( this);
          return m_out;
    }
    public ObVariableGroup getDatVariable()
    {
        if( m_locVariable == null)
            m_locVariable  = new STmF_ObDat( this);
          return m_locVariable;
    }
    public void setVioKeys()
    {
        Vector<String> keySequence = new Vector<String>();
        keySequence.addElement("CustID");
        setKeySequencex(keySequence);
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Environment variable access methods:

    public void setReturnedStatus(ObCharFld returned)
    {
        ((STmF_ObDat)getDatVariable()).getVariable(m_strVarSTmF_Environment).getField(m_strFldSqmx0r6).assign(returned);
    }

    public void setReturningStatus(ObCharFld returning)
    {
        ((STmF_ObDat)getDatVariable()).getVariable(m_strVarSTmF_Environment).getField(m_strFldSqmx0r8).assign(returning);
    }

    public ObCharFld getReturningStatus()
    {
        return (ObCharFld)(((STmF_ObDat)getDatVariable()).getVariable(m_strVarSTmF_Environment).getField(m_strFldSqmx0r8));
    }

    public void setCallStatus(ObCharFld status)
    {
        ((STmF_ObDat)getDatVariable()).getVariable(m_strVarSTmF_Environment).getField(m_strFldSqmx0rg).assign(status);
    }


// ***************************************************************************
// Function:	Customer.Fetch.CheckRow
// ***************************************************************************

    public void ObRun()
    {
//  The standard set of context variables
        STmF_ObDat	v;
        STmF_ObIn	in;
        STmF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STmF_ObDat)fnc.getDatVariable();
        in	= (STmF_ObIn)fnc.getInVariable();
        out	= (STmF_ObOut)fnc.getOutVariable();

        String sqlString;
        String whereString;
        Vector<ObField> keyFields;

// Comment  Copyright 2004 Computer Associates International, Inc. All Rights Reserved.

// ***************************************************************************
// Description
// ***************************************************************************

// Seq 
        {
// Pre Point Description
            {
            }
// Edit Point  Description
            {
            }
// Post Point Description
            {
            }

// ***************************************************************************
// Modification history
// ***************************************************************************

// Seq 
            {
// Comment  07-Apr-1999	AGS	Define User meta variable for use in the message meta.#10087644
// Comment  28-Oct-1999	AGS	Define +Terminate meta variable for use in the Terminate meta.#10140727
// Comment  13-Oct-2005	CDC	Edit Point 'Terminate Processing' added to Subroutine Terminate. #12668997;02  #14346413.
// Pre Point Modification history
                {
                }
// Edit Point  Modification history
                {
                }
// Post Point Modification history
                {
                }
            }
        }
// Go Sub  Initialize
        ObSbr_STmF1();
        if(hasReturned())
            return;

// Pre Point Execute
        {
// Go Sub  Check row
            ObSbr_STmF4();
            if(hasReturned())
                return;

        }
// Edit Point  Execute
        {
        }
// Post Point Execute
        {
// Go Sub  Terminate
            ObSbr_STmF2();
            if(hasReturned())
                return;

        }
// Sub  Initialize
// Sub  Terminate
// Sub  Send message
// Pre Point Subroutines
        {
// Sub  Check row
        }
// Edit Point  Subroutines
        {
        }
// Post Point Subroutines
        {
        }

    }


// ***************************************************************************
// Subroutine:	Initialize
// ***************************************************************************

    void ObSbr_STmF1()
    {
//  The standard set of context variables
        STmF_ObDat	v;
        STmF_ObIn	in;
        STmF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STmF_ObDat)fnc.getDatVariable();
        in	= (STmF_ObIn)fnc.getInVariable();
        out	= (STmF_ObOut)fnc.getOutVariable();

        String sqlString;
        String whereString;
        Vector<ObField> keyFields;

// Sub  Initialize
// Pre Point Start initialize
        {
// Set  Environment<*Returning status> = <*Returning status.*Successful>
            v.getVariable(m_strVarSTmF_Environment).getAsObCharFldField(m_strVarSqmx0r8).assign(m_obvalfld_0);

        }
// Edit Point  Start initialize
        {
        }
// Post Point Start initialize
        {
        }

// ***************************************************************************
// Message handling & termination setup
// ***************************************************************************

// Seq 
        {
        }
// Pre Point End initialize
        {
        }
// Edit Point  End initialize
        {
        }
// Post Point End initialize
        {
        }
    }

// ***************************************************************************
// Subroutine:	Terminate
// ***************************************************************************

    void ObSbr_STmF2()
    {
//  The standard set of context variables
        STmF_ObDat	v;
        STmF_ObIn	in;
        STmF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STmF_ObDat)fnc.getDatVariable();
        in	= (STmF_ObIn)fnc.getInVariable();
        out	= (STmF_ObOut)fnc.getOutVariable();

        String sqlString;
        String whereString;
        Vector<ObField> keyFields;

// Sub  Terminate
// Pre Point Start terminate
        {
        }
// Edit Point  Start terminate
        {
        }
// Post Point Start terminate
        {
        }
// Comment  Terminate if the option is specified, otherwise Return
// Return
        setReturn();
        if(true) return; /* solves unreachable code compilation errors */

    }

// ***************************************************************************
// Subroutine:	Send message
// ***************************************************************************

    void ObSbr_STmF3()
    {
//  The standard set of context variables
        STmF_ObDat	v;
        STmF_ObIn	in;
        STmF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STmF_ObDat)fnc.getDatVariable();
        in	= (STmF_ObIn)fnc.getInVariable();
        out	= (STmF_ObOut)fnc.getOutVariable();

        String sqlString;
        String whereString;
        Vector<ObField> keyFields;

// Sub  Send message
// Pre Point Start send message
        {
        }
// Edit Point  Start send message
        {
        }
// Post Point Start send message
        {
        }
// Pre Point End send message
        {
        }
// Edit Point  End send message
        {
        }
// Post Point End send message
        {
        }
    }

// ***************************************************************************
// Subroutine:	Check row
// ***************************************************************************

    void ObSbr_STmF4()
    {
//  The standard set of context variables
        STmF_ObDat	v;
        STmF_ObIn	in;
        STmF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STmF_ObDat)fnc.getDatVariable();
        in	= (STmF_ObIn)fnc.getInVariable();
        out	= (STmF_ObOut)fnc.getOutVariable();

        String sqlString;
        String whereString;
        Vector<ObField> keyFields;

// Sub  Check row
// Pre Point Start check row
        {
        }
// Edit Point  Start check row
        {
        }
// Post Point Start check row
        {
// Comment  Check if row exists but don't read it
// Position EQ  CheckKey
            keyFields = new Vector<ObField>();
            keyFields.addElement(in.getVariable(m_strVarSTmF_CheckKey).getAsObCharFldField(m_strVarCustID));
            sqlString = "SELECT CustID, CustName " + 
									"FROM ST1V " + 
									"WHERE " + 
									"( CustID = ? ) " + 
									"ORDER BY CustID ";
            getDBMgr().positionx(sqlString, keyFields, v.getVariable(m_strVarSTmF_View), 1, this);
            getDBMgr().setViewIOStatusx((ObCharFld)v.getVariable(m_strVarSTmF_Environment).getAsObCharFldField(m_strVarSqmx0r4), this);

// Set  Environment<*Returning status> = Environment<*View status>
            v.getVariable(m_strVarSTmF_Environment).getAsObCharFldField(m_strVarSqmx0r8).assign(v.getVariable(m_strVarSTmF_Environment).getAsObCharFldField(m_strVarSqmx0r4));

        }
// Pre Point End check row
        {
        }
// Edit Point  End check row
        {
        }
// Post Point End check row
        {
        }
    }

// ***************************************************************************
// The variables used by: Customer.Fetch.CheckRow
// ***************************************************************************

    ////////////////////////////////////////////////////////////////
    // ObDat Variable Group
    final class STmF_ObDat extends ObVariableGroupX
    {
        ////////////////////////////////////////////////////////////////
        // Members

        ////////////////////////////////////////////////////////////////
        // Constructors
        public STmF_ObDat(ObFunction fnc)
        {
            super(ObVariableGroup.VT_LOCAL, fnc);
            addVariable("STmF_Environment", initvarSTmF_STmF_Environment());
            addVariable("STmF_View", initvarSTmF_STmF_View());
        }

        public STmF_ObDat(ObApplication obapp)
        {
            super(obapp, ObVariableGroup.VT_LOCAL);
            addVariable("STmF_Environment", initvarSTmF_STmF_Environment());
            addVariable("STmF_View", initvarSTmF_STmF_View());
        }

        public STmF_ObDat()
        {
            super(ObVariableGroup.VT_LOCAL, null);
            addVariable("STmF_Environment", initvarSTmF_STmF_Environment());
            addVariable("STmF_View", initvarSTmF_STmF_View());
        }






        ////////////////////////////////////////////////////////////////
        // Environment Variable
        public ObVariableX initvarSTmF_STmF_Environment()
        {
            ObVariableX var = new ObVariableX(this, "varSTmF_STmF_Environment");

            var.addField("Sqmx1ac", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1ac", false, false, false, "", m_obapp, false)); /* *Focus set */
            var.addField("Sqmx1bm", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bm", false, false, false, "", m_obapp, false)); /* *Database */
            var.addField("Sqmx1bo", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bo", false, false, false, "", m_obapp, false)); /* *System */
            var.addField("Sqmx1c9", new ObCharFld(ObField.ENVIRONMENT, 512, 'c', "Sqmx1c9", false, false, false, "", m_obapp, false)); /* *Message */
            var.addField("Sqmx1e9", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx1e9", false, false, false, "", m_obapp, false)); /* *Validation */
            var.addField("Sqmx1ed", new ObCharFld(ObField.ENVIRONMENT, 256, 'c', "Sqmx1ed", false, true, false, "", m_obapp, false)); /* *Message text */
            var.addField("Sqmx1eq", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1eq", false, false, false, "", m_obapp, false)); /* *Message delivery */
            var.addField("Sqmx1eu", new ObCharFld(ObField.ENVIRONMENT, 128, 'c', "Sqmx1eu", false, true, false, "", m_obapp, false)); /* *Object */
            var.addField("Sqmx1g5", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1g5", false, false, false, "", m_obapp, false)); /* *Message ID */
            var.addField("Sqmx0r4", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r4", false, false, false, "", m_obapp, false)); /* *View status */
            var.addField("Sqmx0r6", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r6", false, false, false, "", m_obapp, false)); /* *Returned status */
            var.addField("Sqmx0r8", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r8", false, false, false, "", m_obapp, false)); /* *Returning status */
            var.addField("Sqmx0ra", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0ra", false, false, false, "", m_obapp, false)); /* *Report status */
            var.addField("Sqmx0rc", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rc", false, false, false, "", m_obapp, false)); /* *Panel status */
            var.addField("Sqmx0re", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0re", false, false, false, "", m_obapp, false)); /* *Error status */
            var.addField("Sqmx0rg", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rg", false, false, false, "", m_obapp, false)); /* *Call status */
            var.addField("Sqmx0s3", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx0s3", false, false, false, "", m_obapp, false)); /* *Boolean */
            var.addField("Sqmx0xh", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx0xh", false, false, false, "", m_obapp, false)); /* *Object name */

            return var;
        } 

        // End of Environment Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // View Variable
        public ObVariableX initvarSTmF_STmF_View()
        {
            ObVariableX var = new ObVariableX(this, "varSTmF_STmF_View");

            var.addField("CustID", new ObCharFld(ObField.VIEW_KEY, 10, 'c', "CustID", false, false, false, "", m_obapp, false)); /* CustomerID */
            var.addField("CustName", new ObCharFld(ObField.VIEW_COL, 40, 'c', "CustName", false, false, false, "", m_obapp, false)); /* CustomerName */

            return var;
        } 

        // End of View Variable
        ////////////////////////////////////////////////////////////////
    }
    // End Of Customer.Fetch.CheckRow Variable Group
    ////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Field Values:

        ObCharFld m_obvalfld_0 = new ObCharFld(" ", 7);
    // End Of Field Values
    ////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Variable and Field Names:

        public final String m_strVarSTmF_View = "STmF_View";
        public final String m_strFldSqmx0rg = "Sqmx0rg";
        public final String m_strVarSTmF_Environment = "STmF_Environment";
        public final String m_strVarSqmx0r8 = "Sqmx0r8";
        public final String m_strFldSqmx0r8 = "Sqmx0r8";
        public final String m_strVarSqmx0r4 = "Sqmx0r4";
        public final String m_strVarSTmF_CheckKey = "STmF_CheckKey";
        public final String m_strFldSqmx0r6 = "Sqmx0r6";
        public final String m_strVarCustID = "CustID";
    // End Of Variable and Field Names
    ////////////////////////////////////////////////////////////////////////////////
}
// ***************************************************************************
