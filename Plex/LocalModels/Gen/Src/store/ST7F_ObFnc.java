// ***************************************************************************
// 
// Customer.Edit : ST7F
// 
// ***************************************************************************
// 
// Generated by : CA Plex r7.2.1   (Build 24.004)
// Date - Time  : Saturday, April 22, 2023 - 5:09 PM
// Group Model  : 
// Local Model  : C:\Conference 2023\Web Technology Workshop\webTechConf2023\Plex\LocalModels\store.mdl
// User         : Admin
// Version      : Base
// Level        : Base
// Variant      : Base
// Language     : Base
// 
// ***************************************************************************
// 
// Make Processing Support:
/*
@OBJ_SURROGATE=0x1C000103
@FUNCTION=Customer.Edit
@FNCLNGSYS=Java
@IMPLEMENTATION_NAME=ST7F
@TYPE=EXTERNAL
@GENVRL=721
*/

package store;

import ObRun.ObRTTypes.*;
import ObRun.ObComms.*;
import ObRun.ObFunction.*;
import ObRun.ObPanel.ObCtrlData.*;
import java.lang.reflect.*;
import java.util.*;
import java.awt.event.*;

// ***************************************************************************
// Customer.Edit Function Class
// ***************************************************************************

public final class ST7F_ObFnc extends ObFunction
{
    ////////////////////////////////////////////////////////////////////////////////
    // Construction Methods:

    //Default constructor - called by class loader
    //when class gets loaded and 'newInstance()' gets called
    public ST7F_ObFnc(ObCallMgr obcallmgr)
    {
        super(obcallmgr);
        ST7F_ObDat varObDat = new ST7F_ObDat( this);
        super.setLocalVariable( varObDat);
        setFunctionName("Customer.Edit");
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Variable Access Methods:

    public ObVariableGroup getInVariable()
    {
        if( m_in == null)
            m_in  = new ST7F_ObIn( this);
          return m_in;
    }
    public ObVariableGroup getOutVariable()
    {
        if( m_out == null)
            m_out  = new ST7F_ObOut( this);
          return m_out;
    }
    public ObVariableGroup getDatVariable()
    {
        if( m_locVariable == null)
            m_locVariable  = new ST7F_ObDat( this);
          return m_locVariable;
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Environment variable access methods:

    public void setReturnedStatus(ObCharFld returned)
    {
        ((ST7F_ObDat)getDatVariable()).getVariable(m_strVarST7F_Environment).getField(m_strFldSqmx0r6).assign(returned);
    }

    public void setReturningStatus(ObCharFld returning)
    {
        ((ST7F_ObDat)getDatVariable()).getVariable(m_strVarST7F_Environment).getField(m_strFldSqmx0r8).assign(returning);
    }

    public ObCharFld getReturningStatus()
    {
        return (ObCharFld)(((ST7F_ObDat)getDatVariable()).getVariable(m_strVarST7F_Environment).getField(m_strFldSqmx0r8));
    }

    public void setCallStatus(ObCharFld status)
    {
        ((ST7F_ObDat)getDatVariable()).getVariable(m_strVarST7F_Environment).getField(m_strFldSqmx0rg).assign(status);
    }


// ***************************************************************************
// Function:	Customer.Edit
// ***************************************************************************

    public void ObRun()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = new ST7F_ObPnl(this);
        ObCtrlData.setMenuitem_response(false);
        panel.getPanelData().getGuiCtrl().getPanel().setBusyCursor();
        setPanel(panel);
        panel.setUniqueName("store.ST7F");
        panel.start();
        panel.init();

        ObCtrlData.setMenuitem_response(true);
        panel.getPanelData().getGuiCtrl().getPanel().setNotBusyCursor();

// Comment  Copyright 2004 Computer Associates International, Inc. All Rights Reserved.

// ***************************************************************************
// Description
// ***************************************************************************

// Seq 
        {
// Pre Point Description
            {
// Call  UIBASIC/Meta.Options
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Define meta variables for possible function options
// Comment  Not all of these options are used by the pattern library functions
            }
// Edit Point  Description
            {
            }
// Post Point Description
            {
// Comment  WebPlex Initialization
// Comment  Inform the runtime of our inheritance path
// API Call  Source code: WEBCLI60/JAVAStartMeta
                try {
                	panel.getClass().getMethod("getInhPath", new Class[] { })
                		.invoke(panel, new Object[] { });
                try {
                	panel.getClass().getMethod("startMeta", new Class[] { })
                		.invoke(panel, new Object[] { });
                } catch (Exception ex) {
                	throw new RuntimeException("WebClient version error.");
                }
                 
                } catch (RuntimeException e) {
                    throw e;
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("getInhPath", new Class[] { })
// 		.invoke(panel, new Object[] { });
// try {
// 	panel.getClass().getMethod("startMeta", new Class[] { })
// 		.invoke(panel, new Object[] { });
// } catch (Exception ex) {
// 	throw new RuntimeException("WebClient version error.");
// }
//  
// } catch (RuntimeException e) {
//     throw e;
// } catch (Exception ex) {
// }

// ***************************************************************************
// 			// <*Object>	Environment<*Object>
// ***************************************************************************

// Set  Environment<*Object> = Name of WebLogMessages
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("WebLogMessages");
// API Call  Source code: WEBCLI60/JAVASetInhPath
                try {
                	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
                		.invoke(panel, new Object[] { v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString() });
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
// 		.invoke(panel, new Object[] { &(1:).toString() });
// } catch (Exception ex) {
// }

// ***************************************************************************
// 			// <*Object>	Environment<*Object>
// ***************************************************************************

// Set  Environment<*Object> = Name of WebShell
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("WebShell");
// API Call  Source code: WEBCLI60/JAVASetInhPath
                try {
                	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
                		.invoke(panel, new Object[] { v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString() });
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
// 		.invoke(panel, new Object[] { &(1:).toString() });
// } catch (Exception ex) {
// }
// API Call  Source code: WEBCLI60/JAVAEndMeta
                try {
                	panel.getClass().getMethod("endMeta", new Class[] { })
                		.invoke(panel, new Object[] { });
                } catch (InvocationTargetException ex) {
                	throw new RuntimeException(ex.getTargetException());
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("endMeta", new Class[] { })
// 		.invoke(panel, new Object[] { });
// } catch (InvocationTargetException ex) {
// 	throw new RuntimeException(ex.getTargetException());
// } catch (Exception ex) {
// }
            }

// ***************************************************************************
// Modification history
// ***************************************************************************

// Seq 
            {
// Comment  07-Apr-1999	AGS	Define User meta variable for use in the message meta.#10087644
// Comment  28-Oct-1999	AGS	Define +Terminate meta variable for use in the Terminate meta.#10140727
// Comment  13-Oct-2005	CDC	Edit Point 'Terminate Processing' added to Subroutine Terminate. #12668997;02  #14346413.
// Pre Point Modification history
                {
// Comment  30-Mar-1999	AGS	Move Set Focus after Put for the DetailP region.#10087241
// Comment  30-Mar-1999	AGS	Add call to View Validation meta function & add ServerValidate option.#10087344
// Comment  31-Mar-2000	AGS	Add 'Meta' definition and init DetailKey for 'FetchDetail' option.#10146124
// Comment  13-Oct-2005	CDC	Clear DetailP region if no data returned after a Positioner. #11726283, #14346413
// Comment  14-Aug-2000	AGS	Add virtual protection in all cases.#10147048
// Comment  13-Oct-2005	CDC	New 'Protect Virtuals' added to Pre Point Start Protect Keys. #13011455 #14346413
// Comment  30-Mar-1999	AGS	Add edit point on successful deletion.#10086113
// Comment  30-Mar-1999	AGS	Add edit point on successful insert.#10086113
                }
// Edit Point  Modification history
                {
// Comment  31-Oct-2003 PauloCD issue star 12832186 - For Java, panel caption is now set through Java runtime
// Comment  09-Mar-2004 PauloCD issue star 12832186 - Undo previous check in to bring the old behaviour back.
// Comment  16-Jly-2010 TERKI02 Implemented support for C# Generator
                }
// Post Point Modification history
                {
                }
            }
        }
// Go Sub  Initialize
        ObSbr_ST7F1();
        if(hasReturned())
            return;

// Pre Point Execute
        {
        }
// Edit Point  Execute
        {
// Events Handler
        panel.startPanel();
        if(hasReturned())
            return;
        }
// Post Point Execute
        {
        }
// Sub  Initialize
// Sub  Terminate
// Sub  Send message
// Pre Point Subroutines
        {
// Sub  Close
// Sub  Set panel caption
// Sub  Prompt request
// Sub  Load Detail
// Sub  Hide Detail
// Sub  Show Detail
// Sub  Validate Detail
// Sub  Refresh Detail
// Sub  Update Detail request
// Sub  Update Detail
// Sub  Protect keys
// Sub  Update process prompt request
// Sub  Update get panel data
// Sub  Load Grid
// Sub  Load page for Grid
// Sub  Initialize Grid
// Sub  Reload Grid
// Sub  Call fetch function for Grid
// Sub  Select Grid
// Sub  Hide Grid
// Sub  Show Grid
// Sub  Set row usage for Grid
// Sub  Delete Detail
// Sub  Initialize for new Detail
// Sub  Insert Detail
// Sub  Initialize for copy Grid
        }
// Edit Point  Subroutines
        {
        }
// Post Point Subroutines
        {
        }


        panel.postProcess();
        if(true)
            return;
    }

    ////////////////////////////////////////////////////////////////////////////////
    // ObPnl class

    final class ST7F_ObPnl extends ObPanel
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        // Control Declarations
        ObStaticData m_ObStaticData3151 = null; /* DetailP */
        ObLabelData m_ObLabelData3153 = null; /* CustomerID */
        ObEditData m_ObEditData3154 = null; /*  */
        ObLabelData m_ObLabelData3156 = null; /* CustomerName */
        ObEditData m_ObEditData3157 = null; /*  */
        ObGridData m_ObGridData3158 = null; /* GridP */
        ObColumnHeadingData m_ObColumnHeadingData3163 = null; /* CustomerID */
        ObColumnHeadingData m_ObColumnHeadingData3165 = null; /* CustomerName */
        ObEditData m_ObEditData3164 = null; /* CustomerID */
        ObEditData m_ObEditData3166 = null; /* CustomerName */
        ObPushbuttonData m_ObPushbuttonData3168 = null; /*  */
        ObPushbuttonData m_ObPushbuttonData3169 = null; /*  */
        ObPushbuttonData m_ObPushbuttonData3171 = null; /* &Delete */
        ObPushbuttonData m_ObPushbuttonData3172 = null; /* &Apply */
        ObPushbuttonData m_ObPushbuttonData3173 = null; /* &Refresh */
        ObPushbuttonData m_ObPushbuttonData3174 = null; /* &New */
        ObLabelData m_ObLabelData3177 = null; /* Continue new? */
        ObCheckboxData m_ObCheckboxData3178 = null; /*  */
        ObPushbuttonData m_ObPushbuttonData3181 = null; /* Close */
        ObPushbuttonData m_ObPushbuttonData3182 = null; /* X */


        public ST7F_ObPnl(ObFunction fnc)
        {
            super(fnc, "ST7F", 150, "Panel");

//  Initialise the standard set of context variables
            v	= (ST7F_ObDat)fnc.getDatVariable();
            in	= (ST7F_ObIn)fnc.getInVariable();
            out	= (ST7F_ObOut)fnc.getOutVariable();

        }

        public void clearReferences()
        {
            if(m_ObStaticData3151 != null) m_ObStaticData3151.clearReferences();
            m_ObStaticData3151 = null; /* DetailP */
            if(m_ObLabelData3153 != null) m_ObLabelData3153.clearReferences();
            m_ObLabelData3153 = null; /* CustomerID */
            if(m_ObEditData3154 != null) m_ObEditData3154.clearReferences();
            m_ObEditData3154 = null; /*  */
            if(m_ObLabelData3156 != null) m_ObLabelData3156.clearReferences();
            m_ObLabelData3156 = null; /* CustomerName */
            if(m_ObEditData3157 != null) m_ObEditData3157.clearReferences();
            m_ObEditData3157 = null; /*  */
            if(m_ObGridData3158 != null) m_ObGridData3158.clearReferences();
            m_ObGridData3158 = null; /* GridP */
            if(m_ObColumnHeadingData3163 != null) m_ObColumnHeadingData3163.clearReferences();
            m_ObColumnHeadingData3163 = null; /* CustomerID */
            if(m_ObEditData3164 != null) m_ObEditData3164.clearReferences();
            m_ObEditData3164 = null; /* CustomerID */
            if(m_ObColumnHeadingData3165 != null) m_ObColumnHeadingData3165.clearReferences();
            m_ObColumnHeadingData3165 = null; /* CustomerName */
            if(m_ObEditData3166 != null) m_ObEditData3166.clearReferences();
            m_ObEditData3166 = null; /* CustomerName */
            if(m_ObEditData3164 != null) m_ObEditData3164.clearReferences();
            m_ObEditData3164 = null; /* CustomerID */
            if(m_ObEditData3166 != null) m_ObEditData3166.clearReferences();
            m_ObEditData3166 = null; /* CustomerName */
            if(m_ObPushbuttonData3168 != null) m_ObPushbuttonData3168.clearReferences();
            m_ObPushbuttonData3168 = null; /*  */
            if(m_ObPushbuttonData3169 != null) m_ObPushbuttonData3169.clearReferences();
            m_ObPushbuttonData3169 = null; /*  */
            if(m_ObPushbuttonData3171 != null) m_ObPushbuttonData3171.clearReferences();
            m_ObPushbuttonData3171 = null; /* &Delete */
            if(m_ObPushbuttonData3172 != null) m_ObPushbuttonData3172.clearReferences();
            m_ObPushbuttonData3172 = null; /* &Apply */
            if(m_ObPushbuttonData3173 != null) m_ObPushbuttonData3173.clearReferences();
            m_ObPushbuttonData3173 = null; /* &Refresh */
            if(m_ObPushbuttonData3174 != null) m_ObPushbuttonData3174.clearReferences();
            m_ObPushbuttonData3174 = null; /* &New */
            if(m_ObLabelData3177 != null) m_ObLabelData3177.clearReferences();
            m_ObLabelData3177 = null; /* Continue new? */
            if(m_ObCheckboxData3178 != null) m_ObCheckboxData3178.clearReferences();
            m_ObCheckboxData3178 = null; /*  */
            if(m_ObPushbuttonData3181 != null) m_ObPushbuttonData3181.clearReferences();
            m_ObPushbuttonData3181 = null; /* Close */
            if(m_ObPushbuttonData3182 != null) m_ObPushbuttonData3182.clearReferences();
            m_ObPushbuttonData3182 = null; /* X */

            v = null;
            in = null;
            out = null;
            super.clearReferences();
        }

        public void init()
        {
            setState(12288); /* Panel */
            load();

            m_ObStaticData3151 = (ObStaticData)bindControl(3151,12289); /* DetailP */
            m_ObStaticData3151.setUniqueName("m_ObStaticData3151");
            m_ObLabelData3153 = (ObLabelData)bindControl(3153,12290); /* CustomerID */
            m_ObLabelData3153.setUniqueName("m_ObLabelData3153");
            m_ObEditData3154 = (ObEditData)bindControl(3154,12291); /*  */
            m_ObEditData3154.setUniqueName("m_ObEditData3154");
// Event:  -> Prompt 
            m_ObEditData3154.registerEvent(ObCtrlData.DOUBLECLICK, 3184, "Prompt");

            m_ObLabelData3156 = (ObLabelData)bindControl(3156,12292); /* CustomerName */
            m_ObLabelData3156.setUniqueName("m_ObLabelData3156");
            m_ObEditData3157 = (ObEditData)bindControl(3157,12293); /*  */
            m_ObEditData3157.setUniqueName("m_ObEditData3157");
// Event:  -> Prompt 
            m_ObEditData3157.registerEvent(ObCtrlData.DOUBLECLICK, 3184, "Prompt");

            m_ObGridData3158 = (ObGridData)bindControl(3158,12294); /* GridP */
            m_ObGridData3158.setUniqueName("m_ObGridData3158");
// Event: GridP -> LoadGrid 
            m_ObGridData3158.registerEvent(ObCtrlData.GRIDLOAD, 3185, "LoadGrid");

// Event: GridP -> SelectGrid 
            m_ObGridData3158.registerEvent(ObCtrlData.GRIDSELECTION, 3186, "SelectGrid");

            m_ObColumnHeadingData3163 = (ObColumnHeadingData)bindControl(3163,12295); /* CustomerID */
            m_ObColumnHeadingData3163.setUniqueName("m_ObColumnHeadingData3163");
            m_ObEditData3164 = (ObEditData)bindControl(3164,12296); /* CustomerID */
            m_ObEditData3164.setUniqueName("m_ObEditData3164");
// Event: CustomerID -> Prompt 
            m_ObEditData3164.registerEvent(ObCtrlData.DOUBLECLICK, 3184, "Prompt");

            m_ObColumnHeadingData3165 = (ObColumnHeadingData)bindControl(3165,12297); /* CustomerName */
            m_ObColumnHeadingData3165.setUniqueName("m_ObColumnHeadingData3165");
            m_ObEditData3166 = (ObEditData)bindControl(3166,12298); /* CustomerName */
            m_ObEditData3166.setUniqueName("m_ObEditData3166");
// Event: CustomerName -> Prompt 
            m_ObEditData3166.registerEvent(ObCtrlData.DOUBLECLICK, 3184, "Prompt");

            m_ObPushbuttonData3168 = (ObPushbuttonData)bindControl(3168,12299); /*  */
            m_ObPushbuttonData3168.setUniqueName("m_ObPushbuttonData3168");
// Event:  -> Copy 
            m_ObPushbuttonData3168.registerEvent(ObCtrlData.PRESSED, 3188, "Copy");

            m_ObPushbuttonData3169 = (ObPushbuttonData)bindControl(3169,12300); /*  */
            m_ObPushbuttonData3169.setUniqueName("m_ObPushbuttonData3169");
// Event:  -> RefreshGrid 
            m_ObPushbuttonData3169.registerEvent(ObCtrlData.PRESSED, 3190, "RefreshGrid");

            m_ObPushbuttonData3171 = (ObPushbuttonData)bindControl(3171,12301); /* &Delete */
            m_ObPushbuttonData3171.setUniqueName("m_ObPushbuttonData3171");
// Event: &Delete -> Delete 
            m_ObPushbuttonData3171.registerEvent(ObCtrlData.PRESSED, 3192, "Delete");

            m_ObPushbuttonData3172 = (ObPushbuttonData)bindControl(3172,12302); /* &Apply */
            m_ObPushbuttonData3172.setUniqueName("m_ObPushbuttonData3172");
// Event: &Apply -> Update 
            m_ObPushbuttonData3172.registerEvent(ObCtrlData.PRESSED, 3194, "Update");

            m_ObPushbuttonData3173 = (ObPushbuttonData)bindControl(3173,12303); /* &Refresh */
            m_ObPushbuttonData3173.setUniqueName("m_ObPushbuttonData3173");
// Event: &Refresh -> Refresh 
            m_ObPushbuttonData3173.registerEvent(ObCtrlData.PRESSED, 3196, "Refresh");

            m_ObPushbuttonData3174 = (ObPushbuttonData)bindControl(3174,12304); /* &New */
            m_ObPushbuttonData3174.setUniqueName("m_ObPushbuttonData3174");
// Event: &New -> New 
            m_ObPushbuttonData3174.registerEvent(ObCtrlData.PRESSED, 3198, "New");

            m_ObLabelData3177 = (ObLabelData)bindControl(3177,12305); /* Continue new? */
            m_ObLabelData3177.setUniqueName("m_ObLabelData3177");
            m_ObCheckboxData3178 = (ObCheckboxData)bindControl(3178,12306); /*  */
            m_ObCheckboxData3178.setUniqueName("m_ObCheckboxData3178");
            m_ObCheckboxData3178.addValuePair(getProperty("Base.3178.Yes.Value"), m_obvalfld_0);
            m_ObCheckboxData3178.addValuePair(getProperty("Base.3178.No.Value"), m_obvalfld_1);
            m_ObCheckboxData3178.finishValues();
            m_ObPushbuttonData3181 = (ObPushbuttonData)bindControl(3181,12307); /* Close */
            m_ObPushbuttonData3181.setUniqueName("m_ObPushbuttonData3181");
// Event: Close -> Close 
            m_ObPushbuttonData3181.registerEvent(ObCtrlData.PRESSED, 3200, "Close");

            m_ObPushbuttonData3182 = (ObPushbuttonData)bindControl(3182,12308); /* X */
            m_ObPushbuttonData3182.setUniqueName("m_ObPushbuttonData3182");
// Event: X -> Close 
            m_ObPushbuttonData3182.registerEvent(ObCtrlData.PRESSED, 3200, "Close");


            accessPanel(ObCtrlData.WRITE);
            layoutWindow();

            getPanelData().registerLogicalEvent(3188, "Copy");
            getPanelData().registerLogicalEvent(3198, "New");
            getPanelData().registerLogicalEvent(3192, "Delete");
            getPanelData().registerLogicalEvent(3185, "LoadGrid");
            getPanelData().registerLogicalEvent(3190, "RefreshGrid");
            getPanelData().registerLogicalEvent(3186, "SelectGrid");
            getPanelData().registerLogicalEvent(3196, "Refresh");
            getPanelData().registerLogicalEvent(3194, "Update");
            getPanelData().registerLogicalEvent(3184, "Prompt");
            getPanelData().registerLogicalEvent(3200, "Close");
// KeyBoard Event: Prompt 
            getPanelData().registerKeyboardEvent("F4", 3184);
// Event:  -> Close 
            getPanelData().registerEvent(ObCtrlData.QUERYCLOSE, 3200, "Close");

        }

        public void startPanel()
        {
            show();
        }

// ***************************************************************************
// The panel action handler
// ***************************************************************************


        public void eventsHandler()
        {
            ObFunction fnc = getFunction();

// Events Handler
// Event 
            if( true /*In any event*/ )
            {
// Comment  Processing when any event is triggered
// Pre Point Any event
                {
                }
// Edit Point  Any event
                {
                }
// Post Point Any event
                {
                }
            }
// Event  Event: Close
            if( getCurrentAction() == 3200 /* Close */ )
            {
// Go Sub  Close
                ObSbr_ST7F4();
                if(hasReturned())
                    return;

            }
// Pre Point Events
            {
// Event  Event: Prompt
                if( getCurrentAction() == 3184 /* Prompt */ )
                {
// Go Sub  Prompt request
                    ObSbr_ST7F6();
                    if(hasReturned())
                        return;

                }
// Event  Event: Update
                if( getCurrentAction() == 3194 /* Update */ )
                {
// Go Sub  Update Detail request
                    ObSbr_ST7F12();
                    if(hasReturned())
                        return;

                }
// Event  Event: Refresh
                if( getCurrentAction() == 3196 /* Refresh */ )
                {
// Go Sub  Refresh Detail
                    ObSbr_ST7F11();
                    if(hasReturned())
                        return;

                }
// Event  Event: LoadGrid
                if( getCurrentAction() == 3185 /* LoadGrid */ )
                {
// Go Sub  Load Grid
                    ObSbr_ST7F17();
                    if(hasReturned())
                        return;

                }
// Event  Event: SelectGrid
                if( getCurrentAction() == 3186 /* SelectGrid */ )
                {
// Go Sub  Select Grid
                    ObSbr_ST7F22();
                    if(hasReturned())
                        return;

                }
// Event  Event: RefreshGrid
                if( getCurrentAction() == 3190 /* RefreshGrid */ )
                {
// Go Sub  Reload Grid
                    ObSbr_ST7F20();
                    if(hasReturned())
                        return;

                }
// Event  Event: Delete
                if( getCurrentAction() == 3192 /* Delete */ )
                {
// Go Sub  Delete Detail
                    ObSbr_ST7F26();
                    if(hasReturned())
                        return;

                }
// Event  Event: New
                if( getCurrentAction() == 3198 /* New */ )
                {
// Go Sub  Initialize for new Detail
                    ObSbr_ST7F27();
                    if(hasReturned())
                        return;

                }
// Event  Event: Copy
                if( getCurrentAction() == 3188 /* Copy */ )
                {
// Go Sub  Initialize for copy Grid
                    ObSbr_ST7F29();
                    if(hasReturned())
                        return;

                }
            }
// Edit Point  Events
            {
            }
// Post Point Events
            {
            }
        }

        ////////////////////////////////////////////////////////////////////////////////
        // Access Methods

        protected boolean accessPanel(byte accessMode)
        {
            boolean result = false;
            result |= accessRegionv2egetVariable28m_strVarST7FPanel_Panel29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarST7FPanel_GridButtonP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarST7FPanel_DetailButtonP29(accessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for region: Panel/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarST7FPanel_Panel29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;

            result |= accessFieldv2egetVariable28m_strVarST7FPanel_Panel292egetAsObCharFldField28m_strVarS5trifa2918(fieldAccessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for field: Panel/Panel
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarST7FPanel_Panel292egetAsObCharFldField28m_strVarS5trifa2918(byte accessMode)
        {
            boolean result = false;
            result |= m_ObCheckboxData3178.exchangeData(accessMode, v.getVariable(m_strVarST7FPanel_Panel).getAsObCharFldField(m_strVarS5trifa));

            return result;
        }

// ***************************************************************************
// The read/write function for region: GridP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;

            m_ObGridData3158.startAccess(accessMode);
            fieldAccessMode = m_ObGridData3158.getFieldAccessMode(accessMode);
            result |= accessFieldv2egetVariable28m_strVarST7FPanel_GridP292egetAsObCharFldField28m_strVarCustID2919(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarST7FPanel_GridP292egetAsObCharFldField28m_strVarCustName2920(fieldAccessMode);
            m_ObGridData3158.endAccess(accessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridP/GridP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarST7FPanel_GridP292egetAsObCharFldField28m_strVarCustID2919(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3164.exchangeData(accessMode, v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustID));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridP/GridP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarST7FPanel_GridP292egetAsObCharFldField28m_strVarCustName2920(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3166.exchangeData(accessMode, v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustName));

            return result;
        }

// ***************************************************************************
// The read/write function for region: GridButtonP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarST7FPanel_GridButtonP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;


            return result;
        }

// ***************************************************************************
// The read/write function for region: DetailP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;

            result |= accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustID2919(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustName2920(fieldAccessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for field: DetailP/DetailP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustID2919(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3154.exchangeData(accessMode, v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID));

            return result;
        }

// ***************************************************************************
// The read/write function for field: DetailP/DetailP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustName2920(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3157.exchangeData(accessMode, v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName));

            return result;
        }

// ***************************************************************************
// The read/write function for region: DetailButtonP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarST7FPanel_DetailButtonP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;


            return result;
        }

    }


// ***************************************************************************
// Subroutine:	Initialize
// ***************************************************************************

    void ObSbr_ST7F1()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Initialize
// Pre Point Start initialize
        {
        }
// Edit Point  Start initialize
        {
        }
// Post Point Start initialize
        {
        }

// ***************************************************************************
// Message handling & termination setup
// ***************************************************************************

// Seq 
        {
// Set  Environment<*Message delivery> = <*Message delivery.*Dialog>
            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eq).assign(m_obvalfld_2);

        }
// Pre Point End initialize
        {
// Go Sub  Set panel caption
            ObSbr_ST7F5();
            if(hasReturned())
                return;

// Call  UIBASIC/Meta.Options
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Define meta variables for possible function options
// Comment  Not all of these options are used by the pattern library functions
// Pre Point Process options
            {
            }
// Edit Point  Process options
            {
            }
// Post Point Process options
            {
            }
// Set  RepeatData = Input

// Set  Restrict = Input

        }
// Edit Point  End initialize
        {
        }
// Post Point End initialize
        {
// Go Sub  Reload Grid
            ObSbr_ST7F20();
            if(hasReturned())
                return;

        }
    }

// ***************************************************************************
// Subroutine:	Terminate
// ***************************************************************************

    void ObSbr_ST7F2()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Terminate
// Pre Point Start terminate
        {
        }
// Edit Point  Start terminate
        {
        }
// Post Point Start terminate
        {
        }
// Comment  Terminate if the option is specified, otherwise Return
// Return
        setReturn();
        if(true) return; /* solves unreachable code compilation errors */

    }

// ***************************************************************************
// Subroutine:	Send message
// ***************************************************************************

    void ObSbr_ST7F3()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Send message
// Pre Point Start send message
        {
        }
// Edit Point  Start send message
        {
        }
// Post Point Start send message
        {
        }
// Comment  No message handling if *Message delivery undefined
// Case
        // Start of CASE block
        {
// When  Environment<*Message delivery> == <*Message delivery.*Dialog>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_2) )
            {
// Dialog Message  Message: OBJECTS/Message
                {
                    Object[] msgParms = new Object[1];
                    msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                    getApp().logx(getLocalisationProperty("String.100"), msgParms, ObApplication.DIALOG);
                }

// Comment  &(1:)
            }
// When  Environment<*Message delivery> == <*Message delivery.*Status>
            else
            {
                if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_3) )
                {
// Status Message  Message: OBJECTS/Message
                    {
                        Object[] msgParms = new Object[1];
                        msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                        getApp().logx(getLocalisationProperty("String.101"), msgParms, ObApplication.STATUS);
                    }

// Comment  &(1:)
                }
// When  Environment<*Message delivery> == <*Message delivery.*Log>
                else
                {
                    if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_4) )
                    {
// Log Message  Message: OBJECTS/Message
                        {
                            Object[] msgParms = new Object[1];
                            msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                            getApp().logx(getLocalisationProperty("String.102"), msgParms, ObApplication.LOG);
                        }

// Comment  &(1:)
                    }
// When  Environment<*Message delivery> == <*Message delivery.*None>
                    else
                    {
                        if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_1) )
                        {
                        }
// Otherwise
                        else
                        {
// Pre Point Handle message
                            {
                            }
// Edit Point  Handle message
                            {
                            }
// Post Point Handle message
                            {
                            }
                        }
                    }
                }
            }
        }
        // End of CASE block
// Set  Environment<*Message ID> = <*Message ID.Null>
        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1g5).assign(m_obvalfld_5);

// Set  Environment<*Message text> = <*Message text.*Blank>
        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).assign(m_obvalfld_6);

// Pre Point End send message
        {
        }
// Edit Point  End send message
        {
        }
// Post Point End send message
        {
        }
    }

// ***************************************************************************
// Subroutine:	Close
// ***************************************************************************

    void ObSbr_ST7F4()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Close
// Comment  Process the Close event
// Pre Point Start Close
        {
        }
// Edit Point  Start Close
        {
        }
// Post Point Start Close
        {
        }
// Go Sub  Terminate
        ObSbr_ST7F2();
        if(hasReturned())
            return;

// Pre Point End Close
        {
        }
// Edit Point  End Close
        {
        }
// Post Point End Close
        {
        }
    }

// ***************************************************************************
// Subroutine:	Set panel caption
// ***************************************************************************

    void ObSbr_ST7F5()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Set panel caption
// Pre Point Start set panel caption
        {
        }
// Edit Point  Start set panel caption
        {
        }
// Post Point Start set panel caption
        {
        }
// Comment  Set the panel caption from the scoped message text
// Name  Function: Customer.Edit, Environment<*Object>, .Language
        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("Edit");

// Format Message  Message: Customer.Edit.Caption, Environment<*Message text>
        {
            Object[] msgParms = new Object[1];
            msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                  
            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.103"), msgParms);
        }

// Comment  &(1:)
// Pre Point Set panel caption text
        {
        }
// Edit Point  Set panel caption text
        {
        }
// Post Point Set panel caption text
        {
        }
// API Call  Source code: JAVAAPI/SetCaption
        ObUserAPI.setWindowTitle(getFunction(), v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString());

// Comment  ObUserAPI.setWindowTitle(getFunction(), &(1:).toString());
// Comment  16-Jly-2010 TERKI02 Implemented support for C# Generator
// Pre Point End set panel caption
        {
        }
// Edit Point  End set panel caption
        {
        }
// Post Point End set panel caption
        {
        }
    }

// ***************************************************************************
// Subroutine:	Prompt request
// ***************************************************************************

    void ObSbr_ST7F6()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Prompt request
// Pre Point Start prompt processing
        {
        }
// Edit Point  Start prompt processing
        {
        }
// Post Point Start prompt processing
        {
// Go Sub  Update process prompt request
            ObSbr_ST7F15();
            if(hasReturned())
                return;

        }
// Pre Point End prompt processing
        {
        }
// Edit Point  End prompt processing
        {
        }
// Post Point End prompt processing
        {
        }
    }

// ***************************************************************************
// Subroutine:	Load Detail
// ***************************************************************************

    void ObSbr_ST7F7()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Load Detail
// Pre Point Start load Detail
        {
        }
// Edit Point  Start load Detail
        {
        }
// Post Point Start load Detail
        {
// Set  DetailKey = GridP
            v.getVariable(m_strVarST7F_DetailKey).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustID));

// If  DetailL<NewMode> == <NewMode.Yes>
            if( v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).isEqual(m_obvalfld_0) )
            {
// Go Sub  Initialize for new Detail
                ObSbr_ST7F27();
                if(hasReturned())
                    return;

// Exit Sub
                if(true)return;

            }
        }
// Comment  Load the panel data from the database
// Call  Customer.Fetch.SingleFetch

        getObVariableGroupX("store.STpF_ObIn").getVariable(m_strVarSTpF_FetchKey).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7F_DetailKey).getAsObCharFldField(m_strVarCustID));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STpF_ObIn"), getObVariableGroupX("store.STpF_ObOut"), "store.STpF_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        v.getVariable(m_strVarST7F_DetailKey).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.STpF_ObIn").getVariable(m_strVarSTpF_FetchKey).getAsObCharFldField(m_strVarCustID));

// Pre Point Post fetch processing
        {
        }
// Edit Point  Post fetch processing
        {
        }
// Post Point Post fetch processing
        {
        }
// Case
        // Start of CASE block
        {
// When  Environment<*Returned status> == <*Returned status.*Instance not found>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isEqual(m_obvalfld_7) )
            {
// Format Message  Message: FIELDS/NoData, Environment<*Message text>
                {
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.104"));
                }

// Comment  The data could not be read from the database - no row exists for the supplied keys.
// Pre Point Fetch Detail failed - no data.
                {
                }
// Edit Point  Fetch Detail failed - no data.
                {
                }
// Post Point Fetch Detail failed - no data.
                {
                }
// Go Sub  Send message
                ObSbr_ST7F3();
                if(hasReturned())
                    return;

            }
// When  Environment<*Returned status> == <*Returned status.*Instance locked>
            else
            {
                if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isEqual(m_obvalfld_8) )
                {
// Format Message  Message: FIELDS/DataLocked, Environment<*Message text>
                    {
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.105"));
                    }

// Comment  The row has been locked by another user - try again later.
// Pre Point Fetch Detail failed - data locked.
                    {
                    }
// Edit Point  Fetch Detail failed - data locked.
                    {
                    }
// Post Point Fetch Detail failed - data locked.
                    {
                    }
// Go Sub  Send message
                    ObSbr_ST7F3();
                    if(hasReturned())
                        return;

                }
// When  Environment<*Returned status> IS <State: OBJECTS/*Returned status.*Abnormal>
                else
                {
                    if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isNotEqual(m_obvalfld_9))) )
                    {
// Format Message  Message: FIELDS/UnknownError, Environment<*Message text>
                        {
                            Object[] msgParms = new Object[1];
                            msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.106"), msgParms);
                        }

// Comment  An unknown error occurred on the requested operation - try again later.
// The error code is &(1:).
// Pre Point Fetch Detail failed - unknown error.
                        {
                        }
// Edit Point  Fetch Detail failed - unknown error.
                        {
                        }
// Post Point Fetch Detail failed - unknown error.
                        {
                        }
// Go Sub  Send message
                        ObSbr_ST7F3();
                        if(hasReturned())
                            return;

                    }
// When  Environment<*Call status> IS <State: OBJECTS/*Call status.*Abnormal>
                    else
                    {
                        if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).isNotEqual(m_obvalfld_9))) )
                        {
// Name  Function: Customer.Fetch.SingleFetch, Environment<*Object>, .Unscoped
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("SingleFetch");

// Format Message  Message: FIELDS/FunctionCallFailed, Environment<*Message text>
                            {
                                Object[] msgParms = new Object[3];
                                msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                    msgParms[1] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).toString()) ; 
                                    msgParms[2] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.107"), msgParms);
                            }

// Comment  Function: &(1:) was not found or did not execute correctly - contact your software supplier.
// The call failed with codes:
// CS=&(2:)
// RS=&(3:)
// Pre Point Fetch Detail failed - called function not found.
                            {
                            }
// Edit Point  Fetch Detail failed - called function not found.
                            {
                            }
// Post Point Fetch Detail failed - called function not found.
                            {
                            }
// Go Sub  Send message
                            ObSbr_ST7F3();
                            if(hasReturned())
                                return;

                        }
// Otherwise
                        else
                        {
// Set  DetailP = Customer.Fetch.SingleFetch/FetchedData
                            v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.STpF_ObOut").getVariable(m_strVarSTpF_FetchedData).getAsObCharFldField(m_strVarCustID));
                            v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName).assign(getObVariableGroupX("store.STpF_ObOut").getVariable(m_strVarSTpF_FetchedData).getAsObCharFldField(m_strVarCustName));

// Pre Point Load detail
                            {
                            }
// Edit Point  Load detail
                            {
                            }
// Post Point Load detail
                            {
// Set  DetailL<NewMode> = <NewMode.No>
                                v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).assign(m_obvalfld_1);

                            }
// Go Sub  Show Detail
                            ObSbr_ST7F9();
                            if(hasReturned())
                                return;

                        }
                    }
                }
            }
        }
        // End of CASE block
// Pre Point End load Detail
        {
        }
// Edit Point  End load Detail
        {
        }
// Post Point End load Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Hide Detail
// ***************************************************************************

    void ObSbr_ST7F8()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Hide Detail
// Pre Point Start hide Detail
        {
        }
// Edit Point  Start hide Detail
        {
        }
// Post Point Start hide Detail
        {
        }
// Set State  Hidden, DetailP
        panel.m_ObStaticData3151.setState(12309); /* DetailP */
        panel.m_ObLabelData3153.setState(12311); /* CustomerID */
        panel.m_ObEditData3154.setState(12312); /*  */
        panel.m_ObLabelData3156.setState(12314); /* CustomerName */
        panel.m_ObEditData3157.setState(12315); /*  */

// Pre Point End hide Detail
        {
        }
// Edit Point  End hide Detail
        {
        }
// Post Point End hide Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Show Detail
// ***************************************************************************

    void ObSbr_ST7F9()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Show Detail
// Pre Point Start show Detail
        {
        }
// Edit Point  Start show Detail
        {
        }
// Post Point Start show Detail
        {
        }
// Comment  Set the external form of the database fields
// Call  UIBASIC/Meta.SetExternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set calculated and displayed field values
// Comment  Enclose this in a view defining meta loop.
// Set State  Default, DetailP
        panel.m_ObStaticData3151.setState(12289); /* DetailP */
        panel.m_ObLabelData3153.setState(12290); /* CustomerID */
        panel.m_ObEditData3154.setState(12291); /*  */
        panel.m_ObLabelData3156.setState(12292); /* CustomerName */
        panel.m_ObEditData3157.setState(12293); /*  */

// Pre Point Set Detail state
        {
// Go Sub  Protect keys
            ObSbr_ST7F14();
            if(hasReturned())
                return;

        }
// Edit Point  Set Detail state
        {
        }
// Post Point Set Detail state
        {
        }
// Put  DetailP
        panel.accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(ObCtrlData.WRITE);

// Set Focus  DetailP

// Set focus to DetailP.<All>
        panel.getPanelData().startFocusProcess();
        panel.accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(ObCtrlData.SETFOCUS);

// Pre Point End show Detail
        {
// Set State  Default, Event: Delete
            panel.m_ObPushbuttonData3171.setState(12301); /* &Delete */

        }
// Edit Point  End show Detail
        {
        }
// Post Point End show Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Validate Detail
// ***************************************************************************

    void ObSbr_ST7F10()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Validate Detail
// Pre Point Start validate Detail
        {
        }
// Edit Point  Start validate Detail
        {
        }
// Post Point Start validate Detail
        {
// Call  VALIDATE/Meta.ValidateFields
// Comment  Copyright © 2000 Computer Associates International, Inc. All Rights Reserved.
// Comment  Validate fields of a view.
// Call this function from within meta code 'For each variable' or 'view'.
// Set  Environment<*Focus set> = <*Focus set.*False>
            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ac).assign(m_obvalfld_10);

// Set  Environment<*Validation> = <*Validation.*Normal>
            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_9);

// Set  Environment<*Error status> = <*Error status.*Normal>
            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).assign(m_obvalfld_9);


// Set  DetailP<CustomerID> state (1)
            panel.m_ObLabelData3153.setState(12290); /* CustomerID */
            panel.m_ObEditData3154.setState(12291); /*  */
// If  Environment<*Error status> == <*Error status.*Error>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).isEqual(m_obvalfld_11) )
            {
// Set  Environment<*Validation> = <*Validation.*Error>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_11);

// Go Sub  Send message
                ObSbr_ST7F3();
                if(hasReturned())
                    return;

// Set  Environment<*Error status> = <*Error status.*Normal>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).assign(m_obvalfld_9);

            }

// Set  DetailP<CustomerName> state (1)
            panel.m_ObLabelData3156.setState(12292); /* CustomerName */
            panel.m_ObEditData3157.setState(12293); /*  */
// If  Environment<*Error status> == <*Error status.*Error>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).isEqual(m_obvalfld_11) )
            {
// Set  Environment<*Validation> = <*Validation.*Error>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_11);

// Go Sub  Send message
                ObSbr_ST7F3();
                if(hasReturned())
                    return;

// Set  Environment<*Error status> = <*Error status.*Normal>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).assign(m_obvalfld_9);

            }
// If  Environment<*Validation> == <*Validation.*Normal>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).isEqual(m_obvalfld_9) )
            {
// Call  VALIDATE/Meta.ValidateFieldRelations
// Comment  Copyright © 2000 Computer Associates International, Inc. All Rights Reserved.
// Comment  Check that all field in the group have valid values.
// Comment  03-Jan-2000	AGS	Allow for displayed as fields for mandatory relations.#10143319
// Set  Environment<*Validation> = <*Validation.*Normal>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_9);

// Set  Environment<*Focus set> = <*Focus set.*False>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ac).assign(m_obvalfld_10);

// Set  Environment<*Boolean> = <*Boolean.*False>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0s3).assign(m_obvalfld_10);

// Set  Environment<*Error status> = <*Error status.*Normal>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).assign(m_obvalfld_9);


// If  DetailP<CustomerID> is empty
                if( v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID).isEmpty() )
                {
// Set  Environment<*Boolean> = <*Boolean.*True>
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0s3).assign(m_obvalfld_12);

                }

// If  Environment<*Boolean> == <*Boolean.*True>
                if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0s3).isEqual(m_obvalfld_12) )
                {
// Set  Environment<*Error status> = <*Error status.*Error>
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).assign(m_obvalfld_11);


// Set  DetailP<CustomerID> state (2)
                    panel.m_ObLabelData3153.setState(12319); /* CustomerID */
                    panel.m_ObEditData3154.setState(12320); /*  */
// If  Environment<*Focus set> == <*Focus set.*False>
                    if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ac).isEqual(m_obvalfld_10) )
                    {

// Set focus to DetailP.DetailP
                        panel.getPanelData().startFocusProcess();
                        panel.accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustID2919(ObCtrlData.SETFOCUS);
// Set  Environment<*Focus set> = <*Focus set.*True>
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ac).assign(m_obvalfld_12);

                    }
// Set  Environment<*Object> = Name of CustomerID
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("CustomerID");
// Format Message  Message: FIELDS/RequiredFieldValue, Environment<*Message text>
                    {
                        Object[] msgParms = new Object[1];
                        msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                  
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.108"), msgParms);
                    }

// Comment  &(1:) needs to have a value entered.
// Go Sub  Send message
                    ObSbr_ST7F3();
                    if(hasReturned())
                        return;

// Set  Environment<*Validation> = <*Validation.*Error>
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_11);

                }
// Set  Environment<*Boolean> = <*Boolean.*False>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0s3).assign(m_obvalfld_10);

// Set  Environment<*Error status> = <*Error status.*Normal>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).assign(m_obvalfld_9);


// If  DetailP<CustomerName> is empty
                if( v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName).isEmpty() )
                {
// Set  Environment<*Boolean> = <*Boolean.*True>
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0s3).assign(m_obvalfld_12);

                }

// If  Environment<*Boolean> == <*Boolean.*True>
                if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0s3).isEqual(m_obvalfld_12) )
                {
// Set  Environment<*Error status> = <*Error status.*Error>
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).assign(m_obvalfld_11);


// Set  DetailP<CustomerName> state (2)
                    panel.m_ObLabelData3156.setState(12322); /* CustomerName */
                    panel.m_ObEditData3157.setState(12323); /*  */
// If  Environment<*Focus set> == <*Focus set.*False>
                    if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ac).isEqual(m_obvalfld_10) )
                    {

// Set focus to DetailP.DetailP
                        panel.getPanelData().startFocusProcess();
                        panel.accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustName2920(ObCtrlData.SETFOCUS);
// Set  Environment<*Focus set> = <*Focus set.*True>
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ac).assign(m_obvalfld_12);

                    }
// Set  Environment<*Object> = Name of CustomerName
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("CustomerName");
// Format Message  Message: FIELDS/RequiredFieldValue, Environment<*Message text>
                    {
                        Object[] msgParms = new Object[1];
                        msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                  
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.109"), msgParms);
                    }

// Comment  &(1:) needs to have a value entered.
// Go Sub  Send message
                    ObSbr_ST7F3();
                    if(hasReturned())
                        return;

// Set  Environment<*Validation> = <*Validation.*Error>
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_11);

                }
            }
// If  Environment<*Validation> == <*Validation.*Normal>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).isEqual(m_obvalfld_9) )
            {
// Call  VALIDATE/Meta.ValidateEntityRelations
// Comment  Copyright © 2000 Computer Associates International, Inc. All Rights Reserved.
// Comment  Check each attribute of the entity by relation.
// Comment  Enclose this function in a view defining meta loop.
// Set  Environment<*Focus set> = <*Focus set.*False>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ac).assign(m_obvalfld_10);

// Set  Environment<*Validation> = <*Validation.*Normal>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_9);

            }
// If  Environment<*Validation> == <*Validation.*Normal>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).isEqual(m_obvalfld_9) )
            {
// Call  VALIDATE/Meta.ValidateView
// Comment  Copyright © 2000 Computer Associates International, Inc. All Rights Reserved.
// Comment  Check each attribute of the entity by relation.
// Comment  Enclose this function in a view defining meta loop.
// Set  Environment<*Error status> = <*Error status.*Normal>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0re).assign(m_obvalfld_9);

// Set  Environment<*Validation> = <*Validation.*Normal>
                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_9);

            }
        }
// Pre Point End validate Detail
        {
        }
// Edit Point  End validate Detail
        {
        }
// Post Point End validate Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Refresh Detail
// ***************************************************************************

    void ObSbr_ST7F11()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Refresh Detail
// Pre Point Start refresh Detail
        {
        }
// Edit Point  Start refresh Detail
        {
        }
// Post Point Start refresh Detail
        {
        }
// Go Sub  Load Detail
        ObSbr_ST7F7();
        if(hasReturned())
            return;

// Pre Point End refresh Detail
        {
        }
// Edit Point  End refresh Detail
        {
        }
// Post Point End refresh Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Update Detail request
// ***************************************************************************

    void ObSbr_ST7F12()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Update Detail request
// Pre Point Start update Detail request
        {
        }
// Edit Point  Start update Detail request
        {
        }
// Post Point Start update Detail request
        {
        }
// Go Sub  Update get panel data
        ObSbr_ST7F16();
        if(hasReturned())
            return;

// Go Sub  Validate Detail
        ObSbr_ST7F10();
        if(hasReturned())
            return;

// Pre Point Post Detail validation
        {
        }
// Edit Point  Post Detail validation
        {
        }
// Post Point Post Detail validation
        {
// If  Environment<*Validation> == <*Validation.*Normal>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).isEqual(m_obvalfld_9) )
            {
// If  DetailL<NewMode> == <NewMode.Yes>
                if( v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).isEqual(m_obvalfld_0) )
                {
// Go Sub  Insert Detail
                    ObSbr_ST7F28();
                    if(hasReturned())
                        return;

// Exit Sub
                    if(true)return;

                }
            }
        }
// If  Environment<*Validation> == <*Validation.*Normal>
        if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1e9).isEqual(m_obvalfld_9) )
        {
// Go Sub  Update Detail
            ObSbr_ST7F13();
            if(hasReturned())
                return;

        }
// Pre Point End update Detail request
        {
        }
// Edit Point  End update Detail request
        {
        }
// Post Point End update Detail request
        {
        }
    }

// ***************************************************************************
// Subroutine:	Update Detail
// ***************************************************************************

    void ObSbr_ST7F13()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Update Detail
// Pre Point Start update Detail
        {
        }
// Edit Point  Start update Detail
        {
        }
// Post Point Start update Detail
        {
        }
// Call  Customer.Update.UpdateRow

        getObVariableGroupX("store.STqF_ObIn").getVariable(m_strVarSTqF_UpdateKey).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7F_DetailKey).getAsObCharFldField(m_strVarCustID));
        getObVariableGroupX("store.STqF_ObIn").getVariable(m_strVarSTqF_UpdateData).getAsObCharFldField(m_strVarCustName).assign(v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STqF_ObIn"), getObVariableGroupX("store.STqF_ObOut"), "store.STqF_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        v.getVariable(m_strVarST7F_DetailKey).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.STqF_ObIn").getVariable(m_strVarSTqF_UpdateKey).getAsObCharFldField(m_strVarCustID));
        v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName).assign(getObVariableGroupX("store.STqF_ObIn").getVariable(m_strVarSTqF_UpdateData).getAsObCharFldField(m_strVarCustName));

// Case
        // Start of CASE block
        {
// When  Environment<*Returned status> == <*Returned status.*Instance not found>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isEqual(m_obvalfld_7) )
            {
// Format Message  Message: FIELDS/NoData, Environment<*Message text>
                {
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.110"));
                }

// Comment  The data could not be read from the database - no row exists for the supplied keys.
// Pre Point Update Detail failed - instance not found.
                {
                }
// Edit Point  Update Detail failed - instance not found.
                {
                }
// Post Point Update Detail failed - instance not found.
                {
                }
// Go Sub  Send message
                ObSbr_ST7F3();
                if(hasReturned())
                    return;

            }
// When  Environment<*Returned status> == <*Returned status.*Instance locked>
            else
            {
                if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isEqual(m_obvalfld_8) )
                {
// Format Message  Message: FIELDS/DataLocked, Environment<*Message text>
                    {
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.111"));
                    }

// Comment  The row has been locked by another user - try again later.
// Pre Point Update Detail failed - data locked.
                    {
                    }
// Edit Point  Update Detail failed - data locked.
                    {
                    }
// Post Point Update Detail failed - data locked.
                    {
                    }
// Go Sub  Send message
                    ObSbr_ST7F3();
                    if(hasReturned())
                        return;

                }
// When  Environment<*Returned status> IS <State: OBJECTS/*Returned status.*Abnormal>
                else
                {
                    if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isNotEqual(m_obvalfld_9))) )
                    {
// Format Message  Message: FIELDS/UnknownError, Environment<*Message text>
                        {
                            Object[] msgParms = new Object[1];
                            msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.112"), msgParms);
                        }

// Comment  An unknown error occurred on the requested operation - try again later.
// The error code is &(1:).
// Pre Point Update Detail failed - unknown error.
                        {
                        }
// Edit Point  Update Detail failed - unknown error.
                        {
                        }
// Post Point Update Detail failed - unknown error.
                        {
                        }
// Go Sub  Send message
                        ObSbr_ST7F3();
                        if(hasReturned())
                            return;

                    }
// When  Environment<*Call status> IS <State: OBJECTS/*Call status.*Abnormal>
                    else
                    {
                        if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).isNotEqual(m_obvalfld_9))) )
                        {
// Name  Function: Customer.Update.UpdateRow, Environment<*Object>, .Unscoped
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("UpdateRow");

// Format Message  Message: FIELDS/FunctionCallFailed, Environment<*Message text>
                            {
                                Object[] msgParms = new Object[3];
                                msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                    msgParms[1] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).toString()) ; 
                                    msgParms[2] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.113"), msgParms);
                            }

// Comment  Function: &(1:) was not found or did not execute correctly - contact your software supplier.
// The call failed with codes:
// CS=&(2:)
// RS=&(3:)
// Pre Point Update Detail failed - called function not found.
                            {
                            }
// Edit Point  Update Detail failed - called function not found.
                            {
                            }
// Post Point Update Detail failed - called function not found.
                            {
                            }
// Go Sub  Send message
                            ObSbr_ST7F3();
                            if(hasReturned())
                                return;

                        }
// Otherwise
                        else
                        {
// Pre Point Detail updated.
                            {
// Set  GridP = DetailP
                                v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID));
                                v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustName).assign(v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName));

// Set  GridP = DetailKey
                                v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7F_DetailKey).getAsObCharFldField(m_strVarCustID));

// Put  GridP
                                panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.WRITE);

// Refresh  GridP
                                panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.REFRESH);

                            }
// Edit Point  Detail updated.
                            {
                            }
// Post Point Detail updated.
                            {
                            }
// Go Sub  Show Detail
                            ObSbr_ST7F9();
                            if(hasReturned())
                                return;

                        }
                    }
                }
            }
        }
        // End of CASE block
// Pre Point End update Detail
        {
        }
// Edit Point  End update Detail
        {
        }
// Post Point End update Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Protect keys
// ***************************************************************************

    void ObSbr_ST7F14()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Protect keys
// Pre Point Start protect keys
        {
// If  DetailL<NewMode> == <NewMode.Yes>
            if( v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).isEqual(m_obvalfld_0) )
            {
// Call  UIBASIC/Meta.ProtectVirtuals
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set the keys of the view to read-only.
// Comment  Enclose this function in a view defining meta loop.
// Pre Point Protect Virtuals
                {
                }
// Edit Point  Protect Virtuals
                {
                }
// Post Point Protect Virtuals
                {
                }
// Exit Sub
                if(true)return;

            }
        }
// Edit Point  Start protect keys
        {
        }
// Post Point Start protect keys
        {
        }
// Call  UIBASIC/Meta.ProtectKeys
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set the keys of the view to read-only.
// Comment  Enclose this function in a view defining meta loop.

// Set  DetailP<CustomerID> state (3)
        panel.m_ObLabelData3153.setState(12325); /* CustomerID */
        panel.m_ObEditData3154.setState(12326); /*  */
// Call  UIBASIC/Meta.ProtectVirtuals
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set the keys of the view to read-only.
// Comment  Enclose this function in a view defining meta loop.
// Pre Point End protect keys
        {
        }
// Edit Point  End protect keys
        {
        }
// Post Point End protect keys
        {
        }
    }

// ***************************************************************************
// Subroutine:	Update process prompt request
// ***************************************************************************

    void ObSbr_ST7F15()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Update process prompt request
// Pre Point Start Update process prompt request
        {
        }
// Edit Point  Start Update process prompt request
        {
        }
// Post Point Start Update process prompt request
        {
        }
// Go Sub  Update get panel data
        ObSbr_ST7F16();
        if(hasReturned())
            return;

// Call  UIBASIC/Meta.CallSelector
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Date		By	Description
// 29-Jan-1998	AGS	Create.
// Comment  Find and call the selector function for a field with focus
// Comment  Enclose this function in a variable defining meta loop.
// Set  Environment<*System> = <*System.Null>
        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1bo).assign(m_obvalfld_5);

// Set  Environment<*Object name> = <*Object name.Null>
        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0xh).assign(m_obvalfld_5);

// Set  Environment<*Panel status> = <*Panel status.*Normal>
        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rc).assign(m_obvalfld_9);


// If DetailP.DetailP is input capable
        if( panel.accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustID2919(ObCtrlData.IFEDITABLE) )
        {

// If DetailP.DetailP has focus
                panel.getPanelData().startFocusProcess();
                panel.accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustID2919(ObCtrlData.IFFOCUS);
                if( panel.getPanelData().whoHasFocus() > 0 )
                {
// Comment  Store the name of the field with focus
// Set  Environment<*Object name> = Name of CustomerID
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0xh).fromString("CustomerID");
                }

        }


// If DetailP.DetailP is input capable
        if( panel.accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustName2920(ObCtrlData.IFEDITABLE) )
        {

// If DetailP.DetailP has focus
                panel.getPanelData().startFocusProcess();
                panel.accessFieldv2egetVariable28m_strVarST7FPanel_DetailP292egetAsObCharFldField28m_strVarCustName2920(ObCtrlData.IFFOCUS);
                if( panel.getPanelData().whoHasFocus() > 0 )
                {
// Comment  Store the name of the field with focus
// Set  Environment<*Object name> = Name of CustomerName
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0xh).fromString("CustomerName");
                }

        }

// Set  Environment<*Boolean> = <*Boolean.*False>
        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0s3).assign(m_obvalfld_10);

// Pre Point Update post prompt processing
        {
        }
// Edit Point  Update post prompt processing
        {
        }
// Post Point Update post prompt processing
        {
        }
// If  Environment<*Panel status> == <*Panel status.*Prompted>
        if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rc).isEqual(m_obvalfld_13) )
        {
// Go Sub  Show Detail
            ObSbr_ST7F9();
            if(hasReturned())
                return;

        }
// Pre Point End Update process prompt request
        {
        }
// Edit Point  End Update process prompt request
        {
        }
// Post Point End Update process prompt request
        {
        }
    }

// ***************************************************************************
// Subroutine:	Update get panel data
// ***************************************************************************

    void ObSbr_ST7F16()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Update get panel data
// Pre Point Start Update get panel data
        {
        }
// Edit Point  Start Update get panel data
        {
        }
// Post Point Start Update get panel data
        {
        }
// Get  DetailP
        panel.accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(ObCtrlData.READ);

// Call  UIBASIC/Meta.SetInternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set internal values for panel fields.
// Comment  Enclose this in a view defining meta loop.
// Pre Point End Update get panel data
        {
        }
// Edit Point  End Update get panel data
        {
        }
// Post Point End Update get panel data
        {
        }
    }

// ***************************************************************************
// Subroutine:	Load Grid
// ***************************************************************************

    void ObSbr_ST7F17()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Load Grid
// Pre Point Start load Grid
        {
        }
// Edit Point  Start load Grid
        {
        }
// Post Point Start load Grid
        {
        }
// Go Sub  Load page for Grid
        ObSbr_ST7F18();
        if(hasReturned())
            return;

// If  GridL<GridRowCount> >> <GridRowCount.*Zero>
        if( v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).isGreaterThan(m_obvalfld_14) )
        {
// Refresh  GridP
            panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.REFRESH);

        }
// Pre Point End load Grid
        {
        }
// Edit Point  End load Grid
        {
        }
// Post Point End load Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Load page for Grid
// ***************************************************************************

    void ObSbr_ST7F18()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Load page for Grid
// Pre Point Start load page for Grid
        {
        }
// Edit Point  Start load page for Grid
        {
        }
// Post Point Start load page for Grid
        {
        }
// For Page  GridP
        for(long r2493 = 0;r2493 < 64;r2493++)

        {
// Set  GridL<UseRow> = <UseRow.Yes>
            v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh3x).assign(m_obvalfld_0);

// Go Sub  Call fetch function for Grid
            ObSbr_ST7F21();
            if(hasReturned())
                return;

// Go Sub  Set row usage for Grid
            ObSbr_ST7F25();
            if(hasReturned())
                return;

// If  GridL<UseRow> == <UseRow.Yes>
            if( v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh3x).isEqual(m_obvalfld_0) )
            {
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  GridP<CustomerID> to empty
                v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustID).setEmpty();

// Set  GridP<CustomerID> state (1)
                panel.m_ObEditData3164.setState(12296); /* CustomerID */
                panel.m_ObColumnHeadingData3163.setState(12295); /* CustomerID */
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  GridP<CustomerName> to empty
                v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustName).setEmpty();

// Set  GridP<CustomerName> state (1)
                panel.m_ObEditData3166.setState(12298); /* CustomerName */
                panel.m_ObColumnHeadingData3165.setState(12297); /* CustomerName */
// Set  GridP = Customer.Fetch.BlockFetch/FetchedData
                v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.STrF_ObOut").getVariableArray(m_strVarSTrF_FetchedData)[v.STrF_STrF_FetchedData].getAsObCharFldField(m_strVarCustID));
                v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustName).assign(getObVariableGroupX("store.STrF_ObOut").getVariableArray(m_strVarSTrF_FetchedData)[v.STrF_STrF_FetchedData].getAsObCharFldField(m_strVarCustName));

// Set  GridL<GridRowCount> = GridL<GridRowCount> + <GridRowCount.*One>
                v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).assign(v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).add(m_obvalfld_15));

// Call  UIBASIC/Meta.SetExternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set calculated and displayed field values
// Comment  Enclose this in a view defining meta loop.
// Pre Point Process Grid row to add
                {
                }
// Edit Point  Process Grid row to add
                {
                }
// Post Point Process Grid row to add
                {
                }
// Append  GridP
                panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.INSERT);

// Pre Point Process Grid row after add
                {
// If  GridL<GridRowCount> == <GridRowCount.*One>
                    if( v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).isEqual(m_obvalfld_15) )
                    {
// Go Sub  Load Detail
                        ObSbr_ST7F7();
                        if(hasReturned())
                            return;

                    }
                }
// Edit Point  Process Grid row after add
                {
                }
// Post Point Process Grid row after add
                {
                }
            }
// If  GridL<MoreData> == <MoreData.No> AND GridL<BufferedRows> == <BufferedRows.*Zero>
            if( (v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh47).isEqual(m_obvalfld_1)) && (v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).isEqual(m_obvalfld_16)) )
            {
// Set Grid End On  GridP
                panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.GRIDENDON);

// Pre Point Last page row for Grid
                {
                }
// Edit Point  Last page row for Grid
                {
                }
// Post Point Last page row for Grid
                {
                }
// Break
                if(true) break; /* solves unreachable code compilation errors */

            }
        }
// Pre Point End load page for Grid
        {
// Comment  If no rows in grid reset InputP back to empy/default values. #11726283, #14346413
// If  GridL<GridRowCount> <= <GridRowCount.*Zero>
            if( v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).isLessThanOrEqual(m_obvalfld_14) )
            {
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  DetailP<CustomerID> to empty
                v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID).setEmpty();

// Set  DetailP<CustomerID> state (1)
                panel.m_ObLabelData3153.setState(12290); /* CustomerID */
                panel.m_ObEditData3154.setState(12291); /*  */
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  DetailP<CustomerName> to empty
                v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName).setEmpty();

// Set  DetailP<CustomerName> state (1)
                panel.m_ObLabelData3156.setState(12292); /* CustomerName */
                panel.m_ObEditData3157.setState(12293); /*  */
// Put  DetailP
                panel.accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(ObCtrlData.WRITE);

            }
// If  GridL<GridRowCount> << <GridRowCount.*One>
            if( v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).isLessThan(m_obvalfld_15) )
            {
// Comment  Set up new mode if no rows loaded into the grid
// Go Sub  Initialize for new Detail
                ObSbr_ST7F27();
                if(hasReturned())
                    return;

            }
        }
// Edit Point  End load page for Grid
        {
        }
// Post Point End load page for Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Initialize Grid
// ***************************************************************************

    void ObSbr_ST7F19()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Initialize Grid
// Pre Point Start Initialize Grid
        {
        }
// Edit Point  Start Initialize Grid
        {
        }
// Post Point Start Initialize Grid
        {
        }
// Comment  Set grid control values
// Set  GridL<GridRowCount> = <GridRowCount.*Zero>
        v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).assign(m_obvalfld_14);

// Set  GridL<MoreData> = <MoreData.Yes>
        v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh47).assign(m_obvalfld_0);

// Set  GridL<Position> = <Position.Yes>
        v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh2n).assign(m_obvalfld_0);

// Set  GridL<BufferedRows> = <BufferedRows.*Zero>
        v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).assign(m_obvalfld_16);

// Set Grid End Off  GridP
        panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.GRIDENDOFF);

// Clear  GridP
        panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.CLEAR);

// Set  PositionGrid = Restrict

// Pre Point End Initialize Grid
        {
// Set  DetailL<NewMode> = <NewMode.No>
            v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).assign(m_obvalfld_1);

        }
// Edit Point  End Initialize Grid
        {
        }
// Post Point End Initialize Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Reload Grid
// ***************************************************************************

    void ObSbr_ST7F20()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Reload Grid
// Pre Point Start reload Grid
        {
        }
// Edit Point  Start reload Grid
        {
        }
// Post Point Start reload Grid
        {
// Event  Event: Update
            if( panel.getCurrentAction() == 3194 /* Update */ )
            {
// If  Panel<ContinueNew> == <ContinueNew.Yes>
                if( v.getVariable(m_strVarST7FPanel_Panel).getAsObCharFldField(m_strVarS5trifa).isEqual(m_obvalfld_0) )
                {
// Comment  Don't reload grid if continuing in New mode
// Exit Sub
                    if(true)return;

                }
            }
        }
// Go Sub  Initialize Grid
        ObSbr_ST7F19();
        if(hasReturned())
            return;

// Go Sub  Load Grid
        ObSbr_ST7F17();
        if(hasReturned())
            return;

// For Each Row  GridP
        for(boolean r2765 = panel.m_ObGridData3158.getFirstRecord();r2765;r2765 = panel.m_ObGridData3158.getNextRecord())

        {
// Get  GridP
            panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.READ);

// Break
            if(true) break; /* solves unreachable code compilation errors */

        }
// Pre Point End reload Grid
        {
        }
// Edit Point  End reload Grid
        {
        }
// Post Point End reload Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Call fetch function for Grid
// ***************************************************************************

    void ObSbr_ST7F21()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Call fetch function for Grid
// Pre Point Start fetch for Grid
        {
        }
// Edit Point  Start fetch for Grid
        {
        }
// Post Point Start fetch for Grid
        {
        }
// If  GridL<BufferedRows> >> <BufferedRows.*Zero>
        if( v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).isGreaterThan(m_obvalfld_16) )
        {
// Comment  Use the buffered data
// Set  GridL<Current> = GridL<Current> + <Current.*One>
            v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh34).assign(v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh34).add(m_obvalfld_15));

// Set  GridL<BufferedRows> = GridL<BufferedRows> - <BufferedRows.*One>
            v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).assign(v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).subtract(m_obvalfld_17));

// Use  Customer.Fetch.BlockFetch/FetchedData, GridL<Current>
            v.STrF_STrF_FetchedData = (v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh34).toObIntFld().getValue() - 1);

        }
// Else
        else
        {
// If  GridL<MoreData> == <MoreData.Yes>
            if( v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh47).isEqual(m_obvalfld_0) )
            {
// Comment  Get more data from the server
// Call  Customer.Fetch.BlockFetch

                getObVariableGroupX("store.STrF_ObIn").getVariable(m_strVarSTrF_Control).getAsObCharFldField(m_strVarS5trh2n).assign(v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh2n));
                getObVariableGroupX("store.STrF_ObIn").getVariable(m_strVarSTrF_Control).getAsObLongFldField(m_strVarS5trh30).assign(v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45));
                getObVariableGroupX("store.STrF_ObIn").getVariable(m_strVarSTrF_Position).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7F_PositionGrid).getAsObCharFldField(m_strVarCustID));

                {
                    ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STrF_ObIn"), getObVariableGroupX("store.STrF_ObOut"), "store.STrF_ObFnc","External", "Java", "DefaultServer" );
                    if(obrun != null)
                    {
                        obrun.ObRun();
                        obrun.ObPostRun();
                    }
                }
                v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).assign(getObVariableGroupX("store.STrF_ObIn").getVariable(m_strVarSTrF_Control).getAsObLongFldField(m_strVarS5trh30));

// Set  GridL<Position> = <Position.No>
                v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh2n).assign(m_obvalfld_1);

// Case
                // Start of CASE block
                {
// When  Environment<*Call status> IS <State: OBJECTS/*Call status.*Abnormal>
                    if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).isNotEqual(m_obvalfld_9))) )
                    {
// Name  Function: Customer.Fetch.BlockFetch, Environment<*Object>
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("Customer.Fetch.BlockFetch");

// Format Message  Message: FIELDS/FunctionCallFailed, Environment<*Message text>
                        {
                            Object[] msgParms = new Object[3];
                            msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                    msgParms[1] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).toString()) ; 
                                    msgParms[2] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.114"), msgParms);
                        }

// Comment  Function: &(1:) was not found or did not execute correctly - contact your software supplier.
// The call failed with codes:
// CS=&(2:)
// RS=&(3:)
// Pre Point Fetch for Grid failed
                        {
                        }
// Edit Point  Fetch for Grid failed
                        {
                        }
// Post Point Fetch for Grid failed
                        {
                        }
// Go Sub  Send message
                        ObSbr_ST7F3();
                        if(hasReturned())
                            return;

// Set  GridL<MoreData> = <MoreData.No>
                        v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh47).assign(m_obvalfld_1);

// Set  GridL<BufferedRows> = <BufferedRows.*Zero>
                        v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).assign(m_obvalfld_16);

// Set  GridL<UseRow> = <UseRow.No>
                        v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh3x).assign(m_obvalfld_1);

                    }
// Otherwise
                    else
                    {
// If  Environment<*Returned status> IS <State: OBJECTS/*Returned status.*Abnormal>
                        if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isNotEqual(m_obvalfld_9))) )
                        {
// Set  GridL<MoreData> = <MoreData.No>
                            v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh47).assign(m_obvalfld_1);

                        }
// If  GridL<BufferedRows> != <BufferedRows.*Zero>
                        if( v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).isNotEqual(m_obvalfld_16) )
                        {
// Set  GridL<Current> = <Current.*One>
                            v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh34).assign(m_obvalfld_15);

// Set  GridL<BufferedRows> = GridL<BufferedRows> - <BufferedRows.*One>
                            v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).assign(v.getVariable(m_strVarST7F_GridL).getAsObLongFldField(m_strVarS5trh45).subtract(m_obvalfld_17));

// Use  Customer.Fetch.BlockFetch/FetchedData, GridL<Current>
                            v.STrF_STrF_FetchedData = (v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh34).toObIntFld().getValue() - 1);

                        }
// Else
                        else
                        {
// Set  GridL<UseRow> = <UseRow.No>
                            v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh3x).assign(m_obvalfld_1);

                        }
                    }
                }
                // End of CASE block
            }
// Else
            else
            {
// Set  GridL<UseRow> = <UseRow.No>
                v.getVariable(m_strVarST7F_GridL).getAsObCharFldField(m_strVarS5trh3x).assign(m_obvalfld_1);

            }
        }
// Pre Point End fetch for Grid
        {
        }
// Edit Point  End fetch for Grid
        {
        }
// Post Point End fetch for Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Select Grid
// ***************************************************************************

    void ObSbr_ST7F22()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Select Grid
// Pre Point Start select Grid
        {
        }
// Edit Point  Start select Grid
        {
        }
// Post Point Start select Grid
        {
        }
// For Each Selected  GridP
        for(boolean r2987 = panel.m_ObGridData3158.getFirstSelected();r2987;r2987 = panel.m_ObGridData3158.getNextSelected())

        {
// Get  GridP
            panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.READ);

// Call  UIBASIC/Meta.SetInternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set internal values for panel fields.
// Comment  Enclose this in a view defining meta loop.
// Pre Point Process selected Grid row
            {
// Set  DetailL<NewMode> = <NewMode.No>
                v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).assign(m_obvalfld_1);

            }
// Edit Point  Process selected Grid row
            {
            }
// Post Point Process selected Grid row
            {
// Go Sub  Load Detail
                ObSbr_ST7F7();
                if(hasReturned())
                    return;

// Break
                if(true) break; /* solves unreachable code compilation errors */

            }
        }
// Pre Point End select Grid
        {
        }
// Edit Point  End select Grid
        {
        }
// Post Point End select Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Hide Grid
// ***************************************************************************

    void ObSbr_ST7F23()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Hide Grid
// Pre Point Start hide Grid
        {
        }
// Edit Point  Start hide Grid
        {
        }
// Post Point Start hide Grid
        {
        }
// Set State  Hidden, GridP
        panel.m_ObGridData3158.setState(12329); /* GridP */
        panel.m_ObEditData3164.setState(12332); /* CustomerID */
        panel.m_ObColumnHeadingData3163.setState(12333); /* CustomerID */
        panel.m_ObEditData3166.setState(12335); /* CustomerName */
        panel.m_ObColumnHeadingData3165.setState(12336); /* CustomerName */

// Pre Point End hide Grid
        {
        }
// Edit Point  End hide Grid
        {
        }
// Post Point End hide Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Show Grid
// ***************************************************************************

    void ObSbr_ST7F24()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Show Grid
// Pre Point Start show Grid
        {
        }
// Edit Point  Start show Grid
        {
        }
// Post Point Start show Grid
        {
        }
// Set State  Default, GridP
        panel.m_ObGridData3158.setState(12294); /* GridP */
        panel.m_ObEditData3164.setState(12296); /* CustomerID */
        panel.m_ObColumnHeadingData3163.setState(12295); /* CustomerID */
        panel.m_ObEditData3166.setState(12298); /* CustomerName */
        panel.m_ObColumnHeadingData3165.setState(12297); /* CustomerName */

// Pre Point End show Grid
        {
        }
// Edit Point  End show Grid
        {
        }
// Post Point End show Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Set row usage for Grid
// ***************************************************************************

    void ObSbr_ST7F25()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Set row usage for Grid
// Pre Point Start set row usage for Grid
        {
        }
// Edit Point  Start set row usage for Grid
        {
        }
// Post Point Start set row usage for Grid
        {
        }
// Pre Point End set row usage for Grid
        {
        }
// Edit Point  End set row usage for Grid
        {
        }
// Post Point End set row usage for Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Delete Detail
// ***************************************************************************

    void ObSbr_ST7F26()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Delete Detail
// Pre Point Start delete Detail
        {
        }
// Edit Point  Start delete Detail
        {
        }
// Post Point Start delete Detail
        {
        }
// Get  DetailP
        panel.accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(ObCtrlData.READ);

// Call  UIBASIC/Meta.SetInternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set internal values for panel fields.
// Comment  Enclose this in a view defining meta loop.
// Call  Customer.Update.DeleteRow

        getObVariableGroupX("store.STsF_ObIn").getVariable(m_strVarSTsF_DeleteKey).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STsF_ObIn"), getObVariableGroupX("store.STsF_ObOut"), "store.STsF_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.STsF_ObIn").getVariable(m_strVarSTsF_DeleteKey).getAsObCharFldField(m_strVarCustID));

// Case
        // Start of CASE block
        {
// When  Environment<*Returned status> == <*Returned status.*Instance not found>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isEqual(m_obvalfld_7) )
            {
// Format Message  Message: FIELDS/NoData, Environment<*Message text>
                {
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.115"));
                }

// Comment  The data could not be read from the database - no row exists for the supplied keys.
// Pre Point Delete Detail failed , no data
                {
                }
// Edit Point  Delete Detail failed , no data
                {
                }
// Post Point Delete Detail failed , no data
                {
                }
// Go Sub  Send message
                ObSbr_ST7F3();
                if(hasReturned())
                    return;

            }
// When  Environment<*Returned status> == <*Returned status.*Instance locked>
            else
            {
                if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isEqual(m_obvalfld_8) )
                {
// Format Message  Message: FIELDS/DataLocked, Environment<*Message text>
                    {
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.116"));
                    }

// Comment  The row has been locked by another user - try again later.
// Pre Point Delete Detail failed , data locked
                    {
                    }
// Edit Point  Delete Detail failed , data locked
                    {
                    }
// Post Point Delete Detail failed , data locked
                    {
                    }
// Go Sub  Send message
                    ObSbr_ST7F3();
                    if(hasReturned())
                        return;

                }
// When  Environment<*Returned status> IS <State: OBJECTS/*Returned status.*Abnormal>
                else
                {
                    if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isNotEqual(m_obvalfld_9))) )
                    {
// Format Message  Message: FIELDS/UnknownError, Environment<*Message text>
                        {
                            Object[] msgParms = new Object[1];
                            msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.117"), msgParms);
                        }

// Comment  An unknown error occurred on the requested operation - try again later.
// The error code is &(1:).
// Pre Point Delete Detail failed , unknown error
                        {
                        }
// Edit Point  Delete Detail failed , unknown error
                        {
                        }
// Post Point Delete Detail failed , unknown error
                        {
                        }
// Go Sub  Send message
                        ObSbr_ST7F3();
                        if(hasReturned())
                            return;

                    }
// When  Environment<*Call status> IS <State: OBJECTS/*Call status.*Abnormal>
                    else
                    {
                        if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).isNotEqual(m_obvalfld_9))) )
                        {
// Name  Function: Customer.Update.DeleteRow, Environment<*Object>
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("Customer.Update.DeleteRow");

// Format Message  Message: FIELDS/FunctionCallFailed, Environment<*Message text>
                            {
                                Object[] msgParms = new Object[3];
                                msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                    msgParms[1] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).toString()) ; 
                                    msgParms[2] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.118"), msgParms);
                            }

// Comment  Function: &(1:) was not found or did not execute correctly - contact your software supplier.
// The call failed with codes:
// CS=&(2:)
// RS=&(3:)
// Pre Point Delete Detail failed , called function not found
                            {
                            }
// Edit Point  Delete Detail failed , called function not found
                            {
                            }
// Post Point Delete Detail failed , called function not found
                            {
                            }
// Go Sub  Send message
                            ObSbr_ST7F3();
                            if(hasReturned())
                                return;

                        }
// Otherwise
                        else
                        {
// Pre Point Detail deleted
                            {
// Pre Point Existing row deleted
                                {
                                }
// Edit Point  Existing row deleted
                                {
                                }
// Post Point Existing row deleted
                                {
                                }
// Remove  GridP
                                panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.REMOVE);

// Set  GridL<GridRowCount> = GridL<GridRowCount> - <GridRowCount.*One>
                                v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).assign(v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).subtract(m_obvalfld_15));

// Refresh  GridP
                                panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.REFRESH);

// If  GridL<GridRowCount> != <GridRowCount.*Zero>
                                if( v.getVariable(m_strVarST7F_GridL).getAsObIntFldField(m_strVarS5trh3z).isNotEqual(m_obvalfld_14) )
                                {
// For Each Selected  GridP
                                    for(boolean r3364 = panel.m_ObGridData3158.getFirstSelected();r3364;r3364 = panel.m_ObGridData3158.getNextSelected())

                                    {
// Comment  Set the grid data to the auto-selected row if there are any rows
// Get  GridP
                                        panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.READ);

// Set  DetailKey = GridP
                                        v.getVariable(m_strVarST7F_DetailKey).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustID));

// Go Sub  Load Detail
                                        ObSbr_ST7F7();
                                        if(hasReturned())
                                            return;

// Break
                                        if(true) break; /* solves unreachable code compilation errors */

                                    }
                                }
// Else
                                else
                                {
// Go Sub  Initialize for new Detail
                                    ObSbr_ST7F27();
                                    if(hasReturned())
                                        return;

                                }
                            }
// Edit Point  Detail deleted
                            {
                            }
// Post Point Detail deleted
                            {
                            }
                        }
                    }
                }
            }
        }
        // End of CASE block
// Pre Point End delete Detail
        {
        }
// Edit Point  End delete Detail
        {
        }
// Post Point End delete Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Initialize for new Detail
// ***************************************************************************

    void ObSbr_ST7F27()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Initialize for new Detail
// Pre Point Start initialize new Detail
        {
        }
// Edit Point  Start initialize new Detail
        {
        }
// Post Point Start initialize new Detail
        {
        }
// Set  DetailL<NewMode> = <NewMode.Yes>
        v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).assign(m_obvalfld_0);

// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  DetailP<CustomerID> to empty
        v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID).setEmpty();

// Set  DetailP<CustomerID> state (1)
        panel.m_ObLabelData3153.setState(12290); /* CustomerID */
        panel.m_ObEditData3154.setState(12291); /*  */
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  DetailP<CustomerName> to empty
        v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName).setEmpty();

// Set  DetailP<CustomerName> state (1)
        panel.m_ObLabelData3156.setState(12292); /* CustomerName */
        panel.m_ObEditData3157.setState(12293); /*  */
// Set  DetailP = Restrict

// Pre Point Set new values
        {
        }
// Edit Point  Set new values
        {
        }
// Post Point Set new values
        {
        }
// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectVirtuals
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set the keys of the view to read-only.
// Comment  Enclose this function in a view defining meta loop.
// Pre Point Set new states
        {
        }
// Edit Point  Set new states
        {
        }
// Post Point Set new states
        {
        }
// Put  DetailP
        panel.accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(ObCtrlData.WRITE);

// Set Focus  DetailP

// Set focus to DetailP.<All>
        panel.getPanelData().startFocusProcess();
        panel.accessRegionv2egetVariable28m_strVarST7FPanel_DetailP29(ObCtrlData.SETFOCUS);

// Pre Point End initialize new Detail
        {
// Set State  Inactive, Event: Delete
            panel.m_ObPushbuttonData3171.setState(12340); /* &Delete */

        }
// Edit Point  End initialize new Detail
        {
        }
// Post Point End initialize new Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Insert Detail
// ***************************************************************************

    void ObSbr_ST7F28()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Insert Detail
// Pre Point Start insert Detail
        {
        }
// Edit Point  Start insert Detail
        {
        }
// Post Point Start insert Detail
        {
        }
// Call  Customer.Update.InsertRow

        getObVariableGroupX("store.STtF_ObIn").getVariable(m_strVarSTtF_InsertData).getAsObCharFldField(m_strVarCustName).assign(v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName));
        getObVariableGroupX("store.STtF_ObIn").getVariable(m_strVarSTtF_InsertData).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STtF_ObIn"), getObVariableGroupX("store.STtF_ObOut"), "store.STtF_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.STtF_ObIn").getVariable(m_strVarSTtF_InsertData).getAsObCharFldField(m_strVarCustID));
        v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName).assign(getObVariableGroupX("store.STtF_ObIn").getVariable(m_strVarSTtF_InsertData).getAsObCharFldField(m_strVarCustName));

// Case
        // Start of CASE block
        {
// When  Environment<*Returned status> == <*Returned status.*Instance exists>
            if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isEqual(m_obvalfld_18) )
            {
// Format Message  Message: FIELDS/DataExists, Environment<*Message text>
                {
                    v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.119"));
                }

// Comment  Data already exists for the supplied keys - re-type and try again.
// Pre Point Insert Detail failed - data exists.
                {
                }
// Edit Point  Insert Detail failed - data exists.
                {
                }
// Post Point Insert Detail failed - data exists.
                {
                }
// Go Sub  Send message
                ObSbr_ST7F3();
                if(hasReturned())
                    return;

            }
// When  Environment<*Returned status> == <*Returned status.*Instance locked>
            else
            {
                if( v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isEqual(m_obvalfld_8) )
                {
// Format Message  Message: FIELDS/DataLocked, Environment<*Message text>
                    {
                        v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.120"));
                    }

// Comment  The row has been locked by another user - try again later.
// Pre Point Insert Detail failed - data locked.
                    {
                    }
// Edit Point  Insert Detail failed - data locked.
                    {
                    }
// Post Point Insert Detail failed - data locked.
                    {
                    }
// Go Sub  Send message
                    ObSbr_ST7F3();
                    if(hasReturned())
                        return;

                }
// When  Environment<*Returned status> IS <State: OBJECTS/*Returned status.*Abnormal>
                else
                {
                    if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isNotEqual(m_obvalfld_9))) )
                    {
// Format Message  Message: FIELDS/UnknownError, Environment<*Message text>
                        {
                            Object[] msgParms = new Object[1];
                            msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.121"), msgParms);
                        }

// Comment  An unknown error occurred on the requested operation - try again later.
// The error code is &(1:).
// Pre Point Insert Detail failed - unknown error.
                        {
                        }
// Edit Point  Insert Detail failed - unknown error.
                        {
                        }
// Post Point Insert Detail failed - unknown error.
                        {
                        }
// Go Sub  Send message
                        ObSbr_ST7F3();
                        if(hasReturned())
                            return;

                    }
// When  Environment<*Call status> IS <State: OBJECTS/*Call status.*Abnormal>
                    else
                    {
                        if( ((v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).isNotEqual(m_obvalfld_9))) )
                        {
// Name  Function: Customer.Update.InsertRow, Environment<*Object>, .Unscoped
                            v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("InsertRow");

// Format Message  Message: FIELDS/FunctionCallFailed, Environment<*Message text>
                            {
                                Object[] msgParms = new Object[3];
                                msgParms[0] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                    msgParms[1] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0rg).toString()) ; 
                                    msgParms[2] = new String(v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                                v.getVariable(m_strVarST7F_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.122"), msgParms);
                            }

// Comment  Function: &(1:) was not found or did not execute correctly - contact your software supplier.
// The call failed with codes:
// CS=&(2:)
// RS=&(3:)
// Pre Point Insert Detail failed - called function not found.
                            {
                            }
// Edit Point  Insert Detail failed - called function not found.
                            {
                            }
// Post Point Insert Detail failed - called function not found.
                            {
                            }
// Go Sub  Send message
                            ObSbr_ST7F3();
                            if(hasReturned())
                                return;

                        }
// Otherwise
                        else
                        {
// Set  DetailL<NewMode> = <NewMode.No>
                            v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).assign(m_obvalfld_1);

// Pre Point Detail inserted.
                            {
// Pre Point New row inserted
                                {
                                }
// Edit Point  New row inserted
                                {
                                }
// Post Point New row inserted
                                {
                                }
// Get  Panel
                                panel.accessRegionv2egetVariable28m_strVarST7FPanel_Panel29(ObCtrlData.READ);

// If  Panel<ContinueNew> == <ContinueNew.Yes>
                                if( v.getVariable(m_strVarST7FPanel_Panel).getAsObCharFldField(m_strVarS5trifa).isEqual(m_obvalfld_0) )
                                {
// Go Sub  Initialize for new Detail
                                    ObSbr_ST7F27();
                                    if(hasReturned())
                                        return;

                                }
                            }
// Edit Point  Detail inserted.
                            {
                            }
// Post Point Detail inserted.
                            {
// Go Sub  Reload Grid
                                ObSbr_ST7F20();
                                if(hasReturned())
                                    return;

                            }
                        }
                    }
                }
            }
        }
        // End of CASE block
// Pre Point End insert Detail
        {
        }
// Edit Point  End insert Detail
        {
        }
// Post Point End insert Detail
        {
        }
    }

// ***************************************************************************
// Subroutine:	Initialize for copy Grid
// ***************************************************************************

    void ObSbr_ST7F29()
    {
//  The standard set of context variables
        ST7F_ObDat	v;
        ST7F_ObIn	in;
        ST7F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST7F_ObDat)fnc.getDatVariable();
        in	= (ST7F_ObIn)fnc.getInVariable();
        out	= (ST7F_ObOut)fnc.getOutVariable();

        ST7F_ObPnl panel = (ST7F_ObPnl)getPanel();

// Sub  Initialize for copy Grid
// Pre Point Start initialize for copy Grid
        {
        }
// Edit Point  Start initialize for copy Grid
        {
        }
// Post Point Start initialize for copy Grid
        {
        }
// For Each Selected  GridP
        for(boolean r3782 = panel.m_ObGridData3158.getFirstSelected();r3782;r3782 = panel.m_ObGridData3158.getNextSelected())

        {
// Get  GridP
            panel.accessRegionv2egetVariable28m_strVarST7FPanel_GridP29(ObCtrlData.READ);

// Break
            if(true) break; /* solves unreachable code compilation errors */

        }
// Set  DetailP = GridP
        v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustID).assign(v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustID));
        v.getVariable(m_strVarST7FPanel_DetailP).getAsObCharFldField(m_strVarCustName).assign(v.getVariable(m_strVarST7FPanel_GridP).getAsObCharFldField(m_strVarCustName));

// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectRestricts
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Protect the region fields which are also in the Restrict variable.
// Comment  Enclose this function in a field defining meta loop.
// Call  UIBASIC/Meta.ProtectVirtuals
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set the keys of the view to read-only.
// Comment  Enclose this function in a view defining meta loop.
// Set  DetailL<NewMode> = <NewMode.Yes>
        v.getVariable(m_strVarST7F_DetailL).getAsObCharFldField(m_strVarS5trh55).assign(m_obvalfld_0);

// Go Sub  Show Detail
        ObSbr_ST7F9();
        if(hasReturned())
            return;

// Pre Point End initialize for copy Grid
        {
        }
// Edit Point  End initialize for copy Grid
        {
        }
// Post Point End initialize for copy Grid
        {
        }
    }

// ***************************************************************************
// The variables used by: Customer.Edit
// ***************************************************************************

    ////////////////////////////////////////////////////////////////
    // ObDat Variable Group
    final class ST7F_ObDat extends ObVariableGroupX
    {
        ////////////////////////////////////////////////////////////////
        // Members

        ////////////////////////////////////////////////////////////////
        // Constructors
        public ST7F_ObDat(ObFunction fnc)
        {
            super(ObVariableGroup.VT_LOCAL, fnc);
            addVariable("ST7F_TargetRelations", initvarST7F_ST7F_TargetRelations());
            addVariable("ST7F_RepeatData", initvarST7F_ST7F_RepeatData());
            addVariable("ST7F_GridL", initvarST7F_ST7F_GridL());
            addVariable("ST7F_Restrict", initvarST7F_ST7F_Restrict());
            addVariable("ST7F_PositionGrid", initvarST7F_ST7F_PositionGrid());
            addVariable("ST7F_DetailL", initvarST7F_ST7F_DetailL());
            addVariable("ST7F_DetailKey", initvarST7F_ST7F_DetailKey());
            addVariable("ST7FPanel_Panel", initvarST7F_ST7FPanel_Panel());
            addVariable("ST7FPanel_GridP", initvarST7F_ST7FPanel_GridP());
            addVariable("ST7FPanel_GridButtonP", initvarST7F_ST7FPanel_GridButtonP());
            addVariable("ST7FPanel_DetailP", initvarST7F_ST7FPanel_DetailP());
            addVariable("ST7FPanel_DetailButtonP", initvarST7F_ST7FPanel_DetailButtonP());
            addVariable("ST7F_Environment", initvarST7F_ST7F_Environment());
        }

        public ST7F_ObDat(ObApplication obapp)
        {
            super(obapp, ObVariableGroup.VT_LOCAL);
            addVariable("ST7F_TargetRelations", initvarST7F_ST7F_TargetRelations());
            addVariable("ST7F_RepeatData", initvarST7F_ST7F_RepeatData());
            addVariable("ST7F_GridL", initvarST7F_ST7F_GridL());
            addVariable("ST7F_Restrict", initvarST7F_ST7F_Restrict());
            addVariable("ST7F_PositionGrid", initvarST7F_ST7F_PositionGrid());
            addVariable("ST7F_DetailL", initvarST7F_ST7F_DetailL());
            addVariable("ST7F_DetailKey", initvarST7F_ST7F_DetailKey());
            addVariable("ST7FPanel_Panel", initvarST7F_ST7FPanel_Panel());
            addVariable("ST7FPanel_GridP", initvarST7F_ST7FPanel_GridP());
            addVariable("ST7FPanel_GridButtonP", initvarST7F_ST7FPanel_GridButtonP());
            addVariable("ST7FPanel_DetailP", initvarST7F_ST7FPanel_DetailP());
            addVariable("ST7FPanel_DetailButtonP", initvarST7F_ST7FPanel_DetailButtonP());
            addVariable("ST7F_Environment", initvarST7F_ST7F_Environment());
        }

        public ST7F_ObDat()
        {
            super(ObVariableGroup.VT_LOCAL, null);
            addVariable("ST7F_TargetRelations", initvarST7F_ST7F_TargetRelations());
            addVariable("ST7F_RepeatData", initvarST7F_ST7F_RepeatData());
            addVariable("ST7F_GridL", initvarST7F_ST7F_GridL());
            addVariable("ST7F_Restrict", initvarST7F_ST7F_Restrict());
            addVariable("ST7F_PositionGrid", initvarST7F_ST7F_PositionGrid());
            addVariable("ST7F_DetailL", initvarST7F_ST7F_DetailL());
            addVariable("ST7F_DetailKey", initvarST7F_ST7F_DetailKey());
            addVariable("ST7FPanel_Panel", initvarST7F_ST7FPanel_Panel());
            addVariable("ST7FPanel_GridP", initvarST7F_ST7FPanel_GridP());
            addVariable("ST7FPanel_GridButtonP", initvarST7F_ST7FPanel_GridButtonP());
            addVariable("ST7FPanel_DetailP", initvarST7F_ST7FPanel_DetailP());
            addVariable("ST7FPanel_DetailButtonP", initvarST7F_ST7FPanel_DetailButtonP());
            addVariable("ST7F_Environment", initvarST7F_ST7F_Environment());
        }





        public int STrF_STrF_FetchedData = 0; /* Customer.Fetch.BlockFetch/  Parm 1 */
        public int STrF_STrF_FetchedData_save = 0; /* Customer.Fetch.BlockFetch/_save */

        ////////////////////////////////////////////////////////////////
        // TargetRelations Variable
        public ObVariableX initvarST7F_ST7F_TargetRelations()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7F_TargetRelations");


            return var;
        } 

        // End of TargetRelations Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // RepeatData Variable
        public ObVariableX initvarST7F_ST7F_RepeatData()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7F_RepeatData");


            return var;
        } 

        // End of RepeatData Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // GridL Variable
        public ObVariableX initvarST7F_ST7F_GridL()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7F_GridL");

            var.addField("S5trh2n", new ObCharFld(ObField.LOCAL, 1, 'c', "S5trh2n", false, false, false, "", m_obapp, false)); /* Position */
            var.addField("S5trh47", new ObCharFld(ObField.LOCAL, 1, 'c', "S5trh47", false, false, false, "", m_obapp, false)); /* MoreData */
            var.addField("S5trh45", new ObLongFld(ObField.LOCAL, 9, 0, 'p', "S5trh45", "", m_obapp)); /* BufferedRows */
            var.addField("S5trh3x", new ObCharFld(ObField.LOCAL, 1, 'c', "S5trh3x", false, false, false, "", m_obapp, false)); /* UseRow */
            var.addField("S5trh3z", new ObIntFld(ObField.LOCAL, 4, 0, 'p', "S5trh3z", "", m_obapp)); /* GridRowCount */
            var.addField("S5trh34", new ObIntFld(ObField.LOCAL, 4, 0, 'p', "S5trh34", "", m_obapp)); /* Current */

            return var;
        } 

        // End of GridL Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // Restrict Variable
        public ObVariableX initvarST7F_ST7F_Restrict()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7F_Restrict");


            return var;
        } 

        // End of Restrict Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // PositionGrid Variable
        public ObVariableX initvarST7F_ST7F_PositionGrid()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7F_PositionGrid");

            var.addField("CustID", new ObCharFld(ObField.LOCAL, 10, 'c', "CustID", false, false, false, "", m_obapp, false)); /* CustomerID */

            return var;
        } 

        // End of PositionGrid Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // DetailL Variable
        public ObVariableX initvarST7F_ST7F_DetailL()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7F_DetailL");

            var.addField("S5trh55", new ObCharFld(ObField.LOCAL, 1, 'c', "S5trh55", false, false, false, "", m_obapp, false)); /* NewMode */

            return var;
        } 

        // End of DetailL Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // DetailKey Variable
        public ObVariableX initvarST7F_ST7F_DetailKey()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7F_DetailKey");

            var.addField("CustID", new ObCharFld(ObField.LOCAL, 10, 'c', "CustID", false, false, false, "", m_obapp, false)); /* CustomerID */

            return var;
        } 

        // End of DetailKey Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // Panel Variable
        public ObVariableX initvarST7F_ST7FPanel_Panel()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7FPanel_Panel");

            var.addField("S5trifa", new ObCharFld(ObField.PANEL, 1, 'c', "S5trifa", false, false, false, "", m_obapp, false)); /* ContinueNew */

            return var;
        } 

        // End of Panel Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // GridP Variable
        public ObVariableX initvarST7F_ST7FPanel_GridP()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7FPanel_GridP");

            var.addField("CustID", new ObCharFld(ObField.PANEL, 10, 'c', "CustID", false, false, false, "", m_obapp, false)); /* CustomerID */
            var.addField("CustName", new ObCharFld(ObField.PANEL, 40, 'c', "CustName", false, false, false, "", m_obapp, false)); /* CustomerName */

            return var;
        } 

        // End of GridP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // GridButtonP Variable
        public ObVariableX initvarST7F_ST7FPanel_GridButtonP()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7FPanel_GridButtonP");


            return var;
        } 

        // End of GridButtonP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // DetailP Variable
        public ObVariableX initvarST7F_ST7FPanel_DetailP()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7FPanel_DetailP");

            var.addField("CustID", new ObCharFld(ObField.PANEL, 10, 'c', "CustID", false, false, false, "", m_obapp, false)); /* CustomerID */
            var.addField("CustName", new ObCharFld(ObField.PANEL, 40, 'c', "CustName", false, false, false, "", m_obapp, false)); /* CustomerName */

            return var;
        } 

        // End of DetailP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // DetailButtonP Variable
        public ObVariableX initvarST7F_ST7FPanel_DetailButtonP()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7FPanel_DetailButtonP");


            return var;
        } 

        // End of DetailButtonP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // Environment Variable
        public ObVariableX initvarST7F_ST7F_Environment()
        {
            ObVariableX var = new ObVariableX(this, "varST7F_ST7F_Environment");

            var.addField("Sqmx1ac", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1ac", false, false, false, "", m_obapp, false)); /* *Focus set */
            var.addField("Sqmx1bm", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bm", false, false, false, "", m_obapp, false)); /* *Database */
            var.addField("Sqmx1bo", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bo", false, false, false, "", m_obapp, false)); /* *System */
            var.addField("Sqmx1c9", new ObCharFld(ObField.ENVIRONMENT, 512, 'c', "Sqmx1c9", false, false, false, "", m_obapp, false)); /* *Message */
            var.addField("Sqmx1e9", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx1e9", false, false, false, "", m_obapp, false)); /* *Validation */
            var.addField("Sqmx1ed", new ObCharFld(ObField.ENVIRONMENT, 256, 'c', "Sqmx1ed", false, true, false, "", m_obapp, false)); /* *Message text */
            var.addField("Sqmx1eq", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1eq", false, false, false, "", m_obapp, false)); /* *Message delivery */
            var.addField("Sqmx1eu", new ObCharFld(ObField.ENVIRONMENT, 128, 'c', "Sqmx1eu", false, true, false, "", m_obapp, false)); /* *Object */
            var.addField("Sqmx1g5", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1g5", false, false, false, "", m_obapp, false)); /* *Message ID */
            var.addField("Sqmx0r4", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r4", false, false, false, "", m_obapp, false)); /* *View status */
            var.addField("Sqmx0r6", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r6", false, false, false, "", m_obapp, false)); /* *Returned status */
            var.addField("Sqmx0r8", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r8", false, false, false, "", m_obapp, false)); /* *Returning status */
            var.addField("Sqmx0ra", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0ra", false, false, false, "", m_obapp, false)); /* *Report status */
            var.addField("Sqmx0rc", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rc", false, false, false, "", m_obapp, false)); /* *Panel status */
            var.addField("Sqmx0re", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0re", false, false, false, "", m_obapp, false)); /* *Error status */
            var.addField("Sqmx0rg", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rg", false, false, false, "", m_obapp, false)); /* *Call status */
            var.addField("Sqmx0s3", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx0s3", false, false, false, "", m_obapp, false)); /* *Boolean */
            var.addField("Sqmx0xh", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx0xh", false, false, false, "", m_obapp, false)); /* *Object name */

            return var;
        } 

        // End of Environment Variable
        ////////////////////////////////////////////////////////////////
    }
    // End Of Customer.Edit Variable Group
    ////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Field Values:

        ObCharFld m_obvalfld_18 = new ObCharFld("IEX", 7);
        ObCharFld m_obvalfld_7 = new ObCharFld("INF", 7);
        ObCharFld m_obvalfld_13 = new ObCharFld("PROMPT", 7);
        ObCharFld m_obvalfld_0 = new ObCharFld("Y", 1);
        ObIntFld m_obvalfld_15 = new ObIntFld(1);
        ObIntFld m_obvalfld_14 = new ObIntFld(0);
        ObCharFld m_obvalfld_1 = new ObCharFld("N", 1);
        ObCharFld m_obvalfld_9 = new ObCharFld(" ", 7);
        ObCharFld m_obvalfld_8 = new ObCharFld("LCK", 7);
        ObCharFld m_obvalfld_6 = new ObCharFld("", 256);
        ObCharFld m_obvalfld_3 = new ObCharFld("S", 1);
        ObCharFld m_obvalfld_2 = new ObCharFld("D", 1);
        ObCharFld m_obvalfld_12 = new ObCharFld("1", 1);
        ObCharFld m_obvalfld_11 = new ObCharFld("ERROR", 7);
        ObLongFld m_obvalfld_16 = new ObLongFld(0L);
        ObCharFld m_obvalfld_10 = new ObCharFld("0", 1);
        ObLongFld m_obvalfld_17 = new ObLongFld(1L);
        ObCharFld m_obvalfld_5 = new ObCharFld(" ", 32);
        ObCharFld m_obvalfld_4 = new ObCharFld("L", 1);
    // End Of Field Values
    ////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Variable and Field Names:

        public final String m_strVarSTsF_DeleteKey = "STsF_DeleteKey";
        public final String m_strVarSqmx1ac = "Sqmx1ac";
        public final String m_strVarST7F_DetailKey = "ST7F_DetailKey";
        public final String m_strFldSqmx0rg = "Sqmx0rg";
        public final String m_strVarST7F_PositionGrid = "ST7F_PositionGrid";
        public final String m_strVarST7FPanel_GridButtonP = "ST7FPanel_GridButtonP";
        public final String m_strVarSqmx1eu = "Sqmx1eu";
        public final String m_strVarST7F_Environment = "ST7F_Environment";
        public final String m_strVarS5trh47 = "S5trh47";
        public final String m_strVarST7FPanel_DetailP = "ST7FPanel_DetailP";
        public final String m_strFldSqmx0r8 = "Sqmx0r8";
        public final String m_strVarSqmx1ed = "Sqmx1ed";
        public final String m_strVarS5trh45 = "S5trh45";
        public final String m_strVarSTqF_UpdateKey = "STqF_UpdateKey";
        public final String m_strVarSqmx0r6 = "Sqmx0r6";
        public final String m_strVarS5trh55 = "S5trh55";
        public final String m_strVarS5trh34 = "S5trh34";
        public final String m_strVarSqmx1g5 = "Sqmx1g5";
        public final String m_strVarSTtF_InsertData = "STtF_InsertData";
        public final String m_strVarSTpF_FetchKey = "STpF_FetchKey";
        public final String m_strVarS5trifa = "S5trifa";
        public final String m_strVarSqmx0xh = "Sqmx0xh";
        public final String m_strVarST7FPanel_GridP = "ST7FPanel_GridP";
        public final String m_strVarS5trh2n = "S5trh2n";
        public final String m_strVarST7FPanel_Panel = "ST7FPanel_Panel";
        public final String m_strVarS5trh30 = "S5trh30";
        public final String m_strVarSTqF_UpdateData = "STqF_UpdateData";
        public final String m_strVarSqmx0s3 = "Sqmx0s3";
        public final String m_strVarSqmx1e9 = "Sqmx1e9";
        public final String m_strVarST7F_DetailL = "ST7F_DetailL";
        public final String m_strVarSTrF_Position = "STrF_Position";
        public final String m_strVarST7F_GridL = "ST7F_GridL";
        public final String m_strVarSqmx0rg = "Sqmx0rg";
        public final String m_strVarS5trh3z = "S5trh3z";
        public final String m_strVarSTrF_Control = "STrF_Control";
        public final String m_strVarSqmx1bo = "Sqmx1bo";
        public final String m_strVarSqmx0re = "Sqmx0re";
        public final String m_strVarS5trh3x = "S5trh3x";
        public final String m_strVarST7FPanel_DetailButtonP = "ST7FPanel_DetailButtonP";
        public final String m_strFldSqmx0r6 = "Sqmx0r6";
        public final String m_strVarSqmx0rc = "Sqmx0rc";
        public final String m_strVarSqmx1eq = "Sqmx1eq";
        public final String m_strVarSTrF_FetchedData = "STrF_FetchedData";
        public final String m_strVarSTpF_FetchedData = "STpF_FetchedData";
        public final String m_strVarCustName = "CustName";
        public final String m_strVarCustID = "CustID";
    // End Of Variable and Field Names
    ////////////////////////////////////////////////////////////////////////////////
}
// ***************************************************************************
