// ***************************************************************************
// 
// Product.Selector : STnF
// 
// ***************************************************************************
// 
// Generated by : CA Plex r7.2.1   (Build 24.004)
// Date - Time  : Saturday, April 22, 2023 - 5:55 PM
// Group Model  : 
// Local Model  : C:\Conference 2023\Web Technology Workshop\webTechConf2023\Plex\LocalModels\store.mdl
// User         : Admin
// Version      : Base
// Level        : Base
// Variant      : Base
// Language     : Base
// 
// ***************************************************************************
// 
// Make Processing Support:
/*
@OBJ_SURROGATE=0x1C000056
@FUNCTION=Product.Selector
@FNCLNGSYS=Java
@IMPLEMENTATION_NAME=STnF
@TYPE=EXTERNAL
@GENVRL=721
*/

package store;

import ObRun.ObRTTypes.*;
import ObRun.ObComms.*;
import ObRun.ObFunction.*;
import ObRun.ObPanel.ObCtrlData.*;
import java.lang.reflect.*;
import java.util.*;
import java.awt.event.*;

// ***************************************************************************
// Product.Selector Function Class
// ***************************************************************************

public final class STnF_ObFnc extends ObFunction
{
    ////////////////////////////////////////////////////////////////////////////////
    // Construction Methods:

    //Default constructor - called by class loader
    //when class gets loaded and 'newInstance()' gets called
    public STnF_ObFnc(ObCallMgr obcallmgr)
    {
        super(obcallmgr);
        STnF_ObDat varObDat = new STnF_ObDat( this);
        super.setLocalVariable( varObDat);
        setFunctionName("Product.Selector");
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Variable Access Methods:

    public ObVariableGroup getInVariable()
    {
        if( m_in == null)
            m_in  = new STnF_ObIn( this);
          return m_in;
    }
    public ObVariableGroup getOutVariable()
    {
        if( m_out == null)
            m_out  = new STnF_ObOut( this);
          return m_out;
    }
    public ObVariableGroup getDatVariable()
    {
        if( m_locVariable == null)
            m_locVariable  = new STnF_ObDat( this);
          return m_locVariable;
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Environment variable access methods:

    public void setReturnedStatus(ObCharFld returned)
    {
        ((STnF_ObDat)getDatVariable()).getVariable(m_strVarSTnF_Environment).getField(m_strFldSqmx0r6).assign(returned);
    }

    public void setReturningStatus(ObCharFld returning)
    {
        ((STnF_ObDat)getDatVariable()).getVariable(m_strVarSTnF_Environment).getField(m_strFldSqmx0r8).assign(returning);
    }

    public ObCharFld getReturningStatus()
    {
        return (ObCharFld)(((STnF_ObDat)getDatVariable()).getVariable(m_strVarSTnF_Environment).getField(m_strFldSqmx0r8));
    }

    public void setCallStatus(ObCharFld status)
    {
        ((STnF_ObDat)getDatVariable()).getVariable(m_strVarSTnF_Environment).getField(m_strFldSqmx0rg).assign(status);
    }


// ***************************************************************************
// Function:	Product.Selector
// ***************************************************************************

    public void ObRun()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = new STnF_ObPnl(this);
        ObCtrlData.setMenuitem_response(false);
        panel.getPanelData().getGuiCtrl().getPanel().setBusyCursor();
        setPanel(panel);
        panel.setUniqueName("store.STnF");
        panel.start();
        panel.init();

        ObCtrlData.setMenuitem_response(true);
        panel.getPanelData().getGuiCtrl().getPanel().setNotBusyCursor();

// Comment  Copyright 2004 Computer Associates International, Inc. All Rights Reserved.

// ***************************************************************************
// Description
// ***************************************************************************

// Seq 
        {
// Pre Point Description
            {
// Call  UIBASIC/Meta.Options
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Define meta variables for possible function options
// Comment  Not all of these options are used by the pattern library functions
            }
// Edit Point  Description
            {
            }
// Post Point Description
            {
// Comment  WebPlex Initialization
// Comment  Inform the runtime of our inheritance path
// API Call  Source code: WEBCLI60/JAVAStartMeta
                try {
                	panel.getClass().getMethod("getInhPath", new Class[] { })
                		.invoke(panel, new Object[] { });
                try {
                	panel.getClass().getMethod("startMeta", new Class[] { })
                		.invoke(panel, new Object[] { });
                } catch (Exception ex) {
                	throw new RuntimeException("WebClient version error.");
                }
                 
                } catch (RuntimeException e) {
                    throw e;
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("getInhPath", new Class[] { })
// 		.invoke(panel, new Object[] { });
// try {
// 	panel.getClass().getMethod("startMeta", new Class[] { })
// 		.invoke(panel, new Object[] { });
// } catch (Exception ex) {
// 	throw new RuntimeException("WebClient version error.");
// }
//  
// } catch (RuntimeException e) {
//     throw e;
// } catch (Exception ex) {
// }

// ***************************************************************************
// 			// <*Object>	Environment<*Object>
// ***************************************************************************

// Set  Environment<*Object> = Name of WebLogMessages
                v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("WebLogMessages");
// API Call  Source code: WEBCLI60/JAVASetInhPath
                try {
                	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
                		.invoke(panel, new Object[] { v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString() });
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
// 		.invoke(panel, new Object[] { &(1:).toString() });
// } catch (Exception ex) {
// }

// ***************************************************************************
// 			// <*Object>	Environment<*Object>
// ***************************************************************************

// Set  Environment<*Object> = Name of WebShell
                v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("WebShell");
// API Call  Source code: WEBCLI60/JAVASetInhPath
                try {
                	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
                		.invoke(panel, new Object[] { v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString() });
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("addToInhPath", new Class[] { String.class })
// 		.invoke(panel, new Object[] { &(1:).toString() });
// } catch (Exception ex) {
// }
// API Call  Source code: WEBCLI60/JAVAEndMeta
                try {
                	panel.getClass().getMethod("endMeta", new Class[] { })
                		.invoke(panel, new Object[] { });
                } catch (InvocationTargetException ex) {
                	throw new RuntimeException(ex.getTargetException());
                } catch (Exception ex) {
                }

// Comment  try {
// 	panel.getClass().getMethod("endMeta", new Class[] { })
// 		.invoke(panel, new Object[] { });
// } catch (InvocationTargetException ex) {
// 	throw new RuntimeException(ex.getTargetException());
// } catch (Exception ex) {
// }
            }

// ***************************************************************************
// Modification history
// ***************************************************************************

// Seq 
            {
// Comment  07-Apr-1999	AGS	Define User meta variable for use in the message meta.#10087644
// Comment  28-Oct-1999	AGS	Define +Terminate meta variable for use in the Terminate meta.#10140727
// Comment  13-Oct-2005	CDC	Edit Point 'Terminate Processing' added to Subroutine Terminate. #12668997;02  #14346413.
// Pre Point Modification history
                {
// Comment  30-Mar-1999	AGS	Move Set Focus after Put for the InputP region.#10087241
// Comment  20-May-2005	RAL	Show Input subroutine not processing non-view fields.#14079437
                }
// Edit Point  Modification history
                {
// Comment  31-Oct-2003 PauloCD issue star 12832186 - For Java, panel caption is now set through Java runtime
// Comment  09-Mar-2004 PauloCD issue star 12832186 - Undo previous check in to bring the old behaviour back.
// Comment  16-Jly-2010 TERKI02 Implemented support for C# Generator
                }
// Post Point Modification history
                {
                }
            }
        }
// Go Sub  Initialize
        ObSbr_STnF1();
        if(hasReturned())
            return;

// Pre Point Execute
        {
        }
// Edit Point  Execute
        {
// Events Handler
        panel.startPanel();
        if(hasReturned())
            return;
        }
// Post Point Execute
        {
        }
// Sub  Initialize
// Sub  Terminate
// Sub  Send message
// Pre Point Subroutines
        {
// Sub  Close
// Sub  Set panel caption
// Sub  Prompt request
// Sub  Load Grid
// Sub  Load page for Grid
// Sub  Initialize Grid
// Sub  Reload Grid
// Sub  Call fetch function for Grid
// Sub  Select Grid
// Sub  Hide Grid
// Sub  Show Grid
// Sub  Set row usage for Grid
// Sub  Input changed
// Sub  Hide Input
// Sub  Show Input
// Sub  Initialize Input
// Sub  Set Input states
// Sub  Select row request
        }
// Edit Point  Subroutines
        {
        }
// Post Point Subroutines
        {
        }


        panel.postProcess();
        if(true)
            return;
    }

    ////////////////////////////////////////////////////////////////////////////////
    // ObPnl class

    final class STnF_ObPnl extends ObPanel
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        // Control Declarations
        ObStaticData m_ObStaticData3151 = null; /* InputP */
        ObLabelData m_ObLabelData3153 = null; /* ProductID */
        ObEditData m_ObEditData3154 = null; /*  */
        ObGridData m_ObGridData3155 = null; /* GridP */
        ObColumnHeadingData m_ObColumnHeadingData3165 = null; /* ProductID */
        ObColumnHeadingData m_ObColumnHeadingData3167 = null; /* ProductName */
        ObColumnHeadingData m_ObColumnHeadingData3168 = null; /* ProductDescription */
        ObColumnHeadingData m_ObColumnHeadingData3170 = null; /* ProductPrice */
        ObColumnHeadingData m_ObColumnHeadingData3172 = null; /* QtyInStock */
        ObEditData m_ObEditData3164 = null; /* ProductID */
        ObEditData m_ObEditData3166 = null; /* ProductName */
        ObEditData m_ObEditData3169 = null; /* ProductDescription */
        ObEditData m_ObEditData3171 = null; /* ProductPrice */
        ObEditData m_ObEditData3173 = null; /* QtyInStock */
        ObPushbuttonData m_ObPushbuttonData3175 = null; /* &Position */
        ObPushbuttonData m_ObPushbuttonData3177 = null; /*  */
        ObStaticData m_ObStaticData3178 = null; /* GridDetailsP */
        ObLabelData m_ObLabelData3180 = null; /* ProductID */
        ObEditData m_ObEditData3181 = null; /*  */
        ObLabelData m_ObLabelData3183 = null; /* ProductName */
        ObEditData m_ObEditData3184 = null; /*  */
        ObLabelData m_ObLabelData3186 = null; /* ProductDescription */
        ObMultilineEditData m_ObMultilineEditData3187 = null; /*  */
        ObLabelData m_ObLabelData3189 = null; /* ProductPrice */
        ObEditData m_ObEditData3190 = null; /*  */
        ObLabelData m_ObLabelData3192 = null; /* QtyInStock */
        ObEditData m_ObEditData3193 = null; /*  */
        ObPushbuttonData m_ObPushbuttonData3195 = null; /* &Select */
        ObPushbuttonData m_ObPushbuttonData3196 = null; /* X */


        public STnF_ObPnl(ObFunction fnc)
        {
            super(fnc, "STnF", 150, "Panel");

//  Initialise the standard set of context variables
            v	= (STnF_ObDat)fnc.getDatVariable();
            in	= (STnF_ObIn)fnc.getInVariable();
            out	= (STnF_ObOut)fnc.getOutVariable();

        }

        public void clearReferences()
        {
            if(m_ObStaticData3151 != null) m_ObStaticData3151.clearReferences();
            m_ObStaticData3151 = null; /* InputP */
            if(m_ObLabelData3153 != null) m_ObLabelData3153.clearReferences();
            m_ObLabelData3153 = null; /* ProductID */
            if(m_ObEditData3154 != null) m_ObEditData3154.clearReferences();
            m_ObEditData3154 = null; /*  */
            if(m_ObGridData3155 != null) m_ObGridData3155.clearReferences();
            m_ObGridData3155 = null; /* GridP */
            if(m_ObEditData3164 != null) m_ObEditData3164.clearReferences();
            m_ObEditData3164 = null; /* ProductID */
            if(m_ObColumnHeadingData3165 != null) m_ObColumnHeadingData3165.clearReferences();
            m_ObColumnHeadingData3165 = null; /* ProductID */
            if(m_ObEditData3166 != null) m_ObEditData3166.clearReferences();
            m_ObEditData3166 = null; /* ProductName */
            if(m_ObColumnHeadingData3167 != null) m_ObColumnHeadingData3167.clearReferences();
            m_ObColumnHeadingData3167 = null; /* ProductName */
            if(m_ObColumnHeadingData3168 != null) m_ObColumnHeadingData3168.clearReferences();
            m_ObColumnHeadingData3168 = null; /* ProductDescription */
            if(m_ObEditData3169 != null) m_ObEditData3169.clearReferences();
            m_ObEditData3169 = null; /* ProductDescription */
            if(m_ObColumnHeadingData3170 != null) m_ObColumnHeadingData3170.clearReferences();
            m_ObColumnHeadingData3170 = null; /* ProductPrice */
            if(m_ObEditData3171 != null) m_ObEditData3171.clearReferences();
            m_ObEditData3171 = null; /* ProductPrice */
            if(m_ObColumnHeadingData3172 != null) m_ObColumnHeadingData3172.clearReferences();
            m_ObColumnHeadingData3172 = null; /* QtyInStock */
            if(m_ObEditData3173 != null) m_ObEditData3173.clearReferences();
            m_ObEditData3173 = null; /* QtyInStock */
            if(m_ObEditData3164 != null) m_ObEditData3164.clearReferences();
            m_ObEditData3164 = null; /* ProductID */
            if(m_ObEditData3166 != null) m_ObEditData3166.clearReferences();
            m_ObEditData3166 = null; /* ProductName */
            if(m_ObEditData3169 != null) m_ObEditData3169.clearReferences();
            m_ObEditData3169 = null; /* ProductDescription */
            if(m_ObEditData3171 != null) m_ObEditData3171.clearReferences();
            m_ObEditData3171 = null; /* ProductPrice */
            if(m_ObEditData3173 != null) m_ObEditData3173.clearReferences();
            m_ObEditData3173 = null; /* QtyInStock */
            if(m_ObPushbuttonData3175 != null) m_ObPushbuttonData3175.clearReferences();
            m_ObPushbuttonData3175 = null; /* &Position */
            if(m_ObPushbuttonData3177 != null) m_ObPushbuttonData3177.clearReferences();
            m_ObPushbuttonData3177 = null; /*  */
            if(m_ObStaticData3178 != null) m_ObStaticData3178.clearReferences();
            m_ObStaticData3178 = null; /* GridDetailsP */
            if(m_ObLabelData3180 != null) m_ObLabelData3180.clearReferences();
            m_ObLabelData3180 = null; /* ProductID */
            if(m_ObEditData3181 != null) m_ObEditData3181.clearReferences();
            m_ObEditData3181 = null; /*  */
            if(m_ObLabelData3183 != null) m_ObLabelData3183.clearReferences();
            m_ObLabelData3183 = null; /* ProductName */
            if(m_ObEditData3184 != null) m_ObEditData3184.clearReferences();
            m_ObEditData3184 = null; /*  */
            if(m_ObLabelData3186 != null) m_ObLabelData3186.clearReferences();
            m_ObLabelData3186 = null; /* ProductDescription */
            if(m_ObMultilineEditData3187 != null) m_ObMultilineEditData3187.clearReferences();
            m_ObMultilineEditData3187 = null; /*  */
            if(m_ObLabelData3189 != null) m_ObLabelData3189.clearReferences();
            m_ObLabelData3189 = null; /* ProductPrice */
            if(m_ObEditData3190 != null) m_ObEditData3190.clearReferences();
            m_ObEditData3190 = null; /*  */
            if(m_ObLabelData3192 != null) m_ObLabelData3192.clearReferences();
            m_ObLabelData3192 = null; /* QtyInStock */
            if(m_ObEditData3193 != null) m_ObEditData3193.clearReferences();
            m_ObEditData3193 = null; /*  */
            if(m_ObPushbuttonData3195 != null) m_ObPushbuttonData3195.clearReferences();
            m_ObPushbuttonData3195 = null; /* &Select */
            if(m_ObPushbuttonData3196 != null) m_ObPushbuttonData3196.clearReferences();
            m_ObPushbuttonData3196 = null; /* X */

            v = null;
            in = null;
            out = null;
            super.clearReferences();
        }

        public void init()
        {
            setState(12288); /* Panel */
            load();

            m_ObStaticData3151 = (ObStaticData)bindControl(3151,12289); /* InputP */
            m_ObStaticData3151.setUniqueName("m_ObStaticData3151");
            m_ObLabelData3153 = (ObLabelData)bindControl(3153,12290); /* ProductID */
            m_ObLabelData3153.setUniqueName("m_ObLabelData3153");
            m_ObEditData3154 = (ObEditData)bindControl(3154,12291); /*  */
            m_ObEditData3154.setUniqueName("m_ObEditData3154");
// Event:  -> Prompt 
            m_ObEditData3154.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObGridData3155 = (ObGridData)bindControl(3155,12292); /* GridP */
            m_ObGridData3155.setUniqueName("m_ObGridData3155");
// Event: GridP -> LoadGrid 
            m_ObGridData3155.registerEvent(ObCtrlData.GRIDLOAD, 3199, "LoadGrid");

// Event: GridP -> SelectGrid 
            m_ObGridData3155.registerEvent(ObCtrlData.GRIDSELECTION, 3200, "SelectGrid");

// Event: GridP -> SelectRow 
            m_ObGridData3155.registerEvent(ObCtrlData.DOUBLECLICK, 3201, "SelectRow");

            m_ObEditData3164 = (ObEditData)bindControl(3164,12293); /* ProductID */
            m_ObEditData3164.setUniqueName("m_ObEditData3164");
// Event: ProductID -> Prompt 
            m_ObEditData3164.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObColumnHeadingData3165 = (ObColumnHeadingData)bindControl(3165,12294); /* ProductID */
            m_ObColumnHeadingData3165.setUniqueName("m_ObColumnHeadingData3165");
            m_ObEditData3166 = (ObEditData)bindControl(3166,12295); /* ProductName */
            m_ObEditData3166.setUniqueName("m_ObEditData3166");
// Event: ProductName -> Prompt 
            m_ObEditData3166.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObColumnHeadingData3167 = (ObColumnHeadingData)bindControl(3167,12296); /* ProductName */
            m_ObColumnHeadingData3167.setUniqueName("m_ObColumnHeadingData3167");
            m_ObColumnHeadingData3168 = (ObColumnHeadingData)bindControl(3168,12297); /* ProductDescription */
            m_ObColumnHeadingData3168.setUniqueName("m_ObColumnHeadingData3168");
            m_ObEditData3169 = (ObEditData)bindControl(3169,12298); /* ProductDescription */
            m_ObEditData3169.setUniqueName("m_ObEditData3169");
// Event: ProductDescription -> Prompt 
            m_ObEditData3169.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObColumnHeadingData3170 = (ObColumnHeadingData)bindControl(3170,12299); /* ProductPrice */
            m_ObColumnHeadingData3170.setUniqueName("m_ObColumnHeadingData3170");
            m_ObEditData3171 = (ObEditData)bindControl(3171,12300); /* ProductPrice */
            m_ObEditData3171.setUniqueName("m_ObEditData3171");
// Event: ProductPrice -> Prompt 
            m_ObEditData3171.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObColumnHeadingData3172 = (ObColumnHeadingData)bindControl(3172,12301); /* QtyInStock */
            m_ObColumnHeadingData3172.setUniqueName("m_ObColumnHeadingData3172");
            m_ObEditData3173 = (ObEditData)bindControl(3173,12302); /* QtyInStock */
            m_ObEditData3173.setUniqueName("m_ObEditData3173");
// Event: QtyInStock -> Prompt 
            m_ObEditData3173.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObPushbuttonData3175 = (ObPushbuttonData)bindControl(3175,12303); /* &Position */
            m_ObPushbuttonData3175.setUniqueName("m_ObPushbuttonData3175");
// Event: &Position -> InputChanged 
            m_ObPushbuttonData3175.registerEvent(ObCtrlData.PRESSED, 3203, "InputChanged");

            m_ObPushbuttonData3177 = (ObPushbuttonData)bindControl(3177,12304); /*  */
            m_ObPushbuttonData3177.setUniqueName("m_ObPushbuttonData3177");
// Event:  -> RefreshGrid 
            m_ObPushbuttonData3177.registerEvent(ObCtrlData.PRESSED, 3205, "RefreshGrid");

            m_ObStaticData3178 = (ObStaticData)bindControl(3178,12305); /* GridDetailsP */
            m_ObStaticData3178.setUniqueName("m_ObStaticData3178");
            m_ObLabelData3180 = (ObLabelData)bindControl(3180,12306); /* ProductID */
            m_ObLabelData3180.setUniqueName("m_ObLabelData3180");
            m_ObEditData3181 = (ObEditData)bindControl(3181,12307); /*  */
            m_ObEditData3181.setUniqueName("m_ObEditData3181");
// Event:  -> Prompt 
            m_ObEditData3181.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObLabelData3183 = (ObLabelData)bindControl(3183,12308); /* ProductName */
            m_ObLabelData3183.setUniqueName("m_ObLabelData3183");
            m_ObEditData3184 = (ObEditData)bindControl(3184,12309); /*  */
            m_ObEditData3184.setUniqueName("m_ObEditData3184");
// Event:  -> Prompt 
            m_ObEditData3184.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObLabelData3186 = (ObLabelData)bindControl(3186,12310); /* ProductDescription */
            m_ObLabelData3186.setUniqueName("m_ObLabelData3186");
            m_ObMultilineEditData3187 = (ObMultilineEditData)bindControl(3187,12311); /*  */
            m_ObMultilineEditData3187.setUniqueName("m_ObMultilineEditData3187");
// Event:  -> Prompt 
            m_ObMultilineEditData3187.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObLabelData3189 = (ObLabelData)bindControl(3189,12312); /* ProductPrice */
            m_ObLabelData3189.setUniqueName("m_ObLabelData3189");
            m_ObEditData3190 = (ObEditData)bindControl(3190,12313); /*  */
            m_ObEditData3190.setUniqueName("m_ObEditData3190");
// Event:  -> Prompt 
            m_ObEditData3190.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObLabelData3192 = (ObLabelData)bindControl(3192,12314); /* QtyInStock */
            m_ObLabelData3192.setUniqueName("m_ObLabelData3192");
            m_ObEditData3193 = (ObEditData)bindControl(3193,12315); /*  */
            m_ObEditData3193.setUniqueName("m_ObEditData3193");
// Event:  -> Prompt 
            m_ObEditData3193.registerEvent(ObCtrlData.DOUBLECLICK, 3198, "Prompt");

            m_ObPushbuttonData3195 = (ObPushbuttonData)bindControl(3195,12316); /* &Select */
            m_ObPushbuttonData3195.setUniqueName("m_ObPushbuttonData3195");
// Event: &Select -> SelectRow 
            m_ObPushbuttonData3195.registerEvent(ObCtrlData.PRESSED, 3201, "SelectRow");

            m_ObPushbuttonData3196 = (ObPushbuttonData)bindControl(3196,12317); /* X */
            m_ObPushbuttonData3196.setUniqueName("m_ObPushbuttonData3196");
// Event: X -> Close 
            m_ObPushbuttonData3196.registerEvent(ObCtrlData.PRESSED, 3208, "Close");


            accessPanel(ObCtrlData.WRITE);
            layoutWindow();

            getPanelData().registerLogicalEvent(3203, "InputChanged");
            getPanelData().registerLogicalEvent(3201, "SelectRow");
            getPanelData().registerLogicalEvent(3199, "LoadGrid");
            getPanelData().registerLogicalEvent(3205, "RefreshGrid");
            getPanelData().registerLogicalEvent(3200, "SelectGrid");
            getPanelData().registerLogicalEvent(3198, "Prompt");
            getPanelData().registerLogicalEvent(3208, "Close");
// KeyBoard Event: Prompt 
            getPanelData().registerKeyboardEvent("F4", 3198);
// Event:  -> Close 
            getPanelData().registerEvent(ObCtrlData.QUERYCLOSE, 3208, "Close");

        }

        public void startPanel()
        {
            show();
        }

// ***************************************************************************
// The panel action handler
// ***************************************************************************


        public void eventsHandler()
        {
            ObFunction fnc = getFunction();

// Events Handler
// Event 
            if( true /*In any event*/ )
            {
// Comment  Processing when any event is triggered
// Pre Point Any event
                {
                }
// Edit Point  Any event
                {
                }
// Post Point Any event
                {
                }
            }
// Event  Event: Close
            if( getCurrentAction() == 3208 /* Close */ )
            {
// Go Sub  Close
                ObSbr_STnF4();
                if(hasReturned())
                    return;

            }
// Pre Point Events
            {
// Event  Event: Prompt
                if( getCurrentAction() == 3198 /* Prompt */ )
                {
// Go Sub  Prompt request
                    ObSbr_STnF6();
                    if(hasReturned())
                        return;

                }
// Event  Event: LoadGrid
                if( getCurrentAction() == 3199 /* LoadGrid */ )
                {
// Go Sub  Load Grid
                    ObSbr_STnF7();
                    if(hasReturned())
                        return;

                }
// Event  Event: SelectGrid
                if( getCurrentAction() == 3200 /* SelectGrid */ )
                {
// Go Sub  Select Grid
                    ObSbr_STnF12();
                    if(hasReturned())
                        return;

                }
// Event  Event: RefreshGrid
                if( getCurrentAction() == 3205 /* RefreshGrid */ )
                {
// Go Sub  Reload Grid
                    ObSbr_STnF10();
                    if(hasReturned())
                        return;

                }
// Event  Event: SelectRow
                if( getCurrentAction() == 3201 /* SelectRow */ )
                {
// Go Sub  Select row request
                    ObSbr_STnF21();
                    if(hasReturned())
                        return;

                }
// Event  Event: InputChanged
                if( getCurrentAction() == 3203 /* InputChanged */ )
                {
// Go Sub  Input changed
                    ObSbr_STnF16();
                    if(hasReturned())
                        return;

                }
            }
// Edit Point  Events
            {
            }
// Post Point Events
            {
            }
        }

        ////////////////////////////////////////////////////////////////////////////////
        // Access Methods

        protected boolean accessPanel(byte accessMode)
        {
            boolean result = false;
            result |= accessRegionv2egetVariable28m_strVarSTnFPanel_DetailButtonP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarSTnFPanel_GridDetailsP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarSTnFPanel_GridButtonP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarSTnFPanel_InputP29(accessMode);
            result |= accessRegionv2egetVariable28m_strVarSTnFPanel_InputButtonP29(accessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for region: DetailButtonP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarSTnFPanel_DetailButtonP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;


            return result;
        }

// ***************************************************************************
// The read/write function for region: GridDetailsP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarSTnFPanel_GridDetailsP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;

            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObCharFldField28m_strVarProdID2918(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObCharFldField28m_strVarProdName2919(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObCharFldField28m_strVarProdDesc2920(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObDblFldField28m_strVarProdPrice2921(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObIntFldField28m_strVarQtyInStock2922(fieldAccessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridDetailsP/GridDetailsP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObCharFldField28m_strVarProdID2918(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3181.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdID));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridDetailsP/GridDetailsP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObCharFldField28m_strVarProdName2919(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3184.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdName));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridDetailsP/GridDetailsP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObCharFldField28m_strVarProdDesc2920(byte accessMode)
        {
            boolean result = false;
            result |= m_ObMultilineEditData3187.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdDesc));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridDetailsP/GridDetailsP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObDblFldField28m_strVarProdPrice2921(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3190.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObDblFldField(m_strVarProdPrice));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridDetailsP/GridDetailsP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridDetailsP292egetAsObIntFldField28m_strVarQtyInStock2922(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3193.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObIntFldField(m_strVarQtyInStock));

            return result;
        }

// ***************************************************************************
// The read/write function for region: GridP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;

            m_ObGridData3155.startAccess(accessMode);
            fieldAccessMode = m_ObGridData3155.getFieldAccessMode(accessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObCharFldField28m_strVarProdID2918(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObCharFldField28m_strVarProdName2919(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObCharFldField28m_strVarProdDesc2920(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObDblFldField28m_strVarProdPrice2921(fieldAccessMode);
            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObIntFldField28m_strVarQtyInStock2922(fieldAccessMode);
            m_ObGridData3155.endAccess(accessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridP/GridP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObCharFldField28m_strVarProdID2918(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3164.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdID));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridP/GridP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObCharFldField28m_strVarProdName2919(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3166.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdName));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridP/GridP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObCharFldField28m_strVarProdDesc2920(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3169.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdDesc));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridP/GridP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObDblFldField28m_strVarProdPrice2921(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3171.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridP).getAsObDblFldField(m_strVarProdPrice));

            return result;
        }

// ***************************************************************************
// The read/write function for field: GridP/GridP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_GridP292egetAsObIntFldField28m_strVarQtyInStock2922(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3173.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_GridP).getAsObIntFldField(m_strVarQtyInStock));

            return result;
        }

// ***************************************************************************
// The read/write function for region: GridButtonP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarSTnFPanel_GridButtonP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;


            return result;
        }

// ***************************************************************************
// The read/write function for region: InputP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarSTnFPanel_InputP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;

            result |= accessFieldv2egetVariable28m_strVarSTnFPanel_InputP292egetAsObCharFldField28m_strVarProdID2918(fieldAccessMode);

            return result;
        }

// ***************************************************************************
// The read/write function for field: InputP/InputP
// ***************************************************************************


        public boolean accessFieldv2egetVariable28m_strVarSTnFPanel_InputP292egetAsObCharFldField28m_strVarProdID2918(byte accessMode)
        {
            boolean result = false;
            result |= m_ObEditData3154.exchangeData(accessMode, v.getVariable(m_strVarSTnFPanel_InputP).getAsObCharFldField(m_strVarProdID));

            return result;
        }

// ***************************************************************************
// The read/write function for region: InputButtonP/<All>
// ***************************************************************************


        public boolean accessRegionv2egetVariable28m_strVarSTnFPanel_InputButtonP29(byte accessMode)
        {
            boolean result = false;
            byte fieldAccessMode = accessMode;


            return result;
        }

    }


// ***************************************************************************
// Subroutine:	Initialize
// ***************************************************************************

    void ObSbr_STnF1()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Initialize
// Pre Point Start initialize
        {
        }
// Edit Point  Start initialize
        {
        }
// Post Point Start initialize
        {
        }

// ***************************************************************************
// Message handling & termination setup
// ***************************************************************************

// Seq 
        {
// Set  Environment<*Message delivery> = <*Message delivery.*Dialog>
            v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eq).assign(m_obvalfld_0);

        }
// Pre Point End initialize
        {
// Go Sub  Set panel caption
            ObSbr_STnF5();
            if(hasReturned())
                return;

// Call  UIBASIC/Meta.Options
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Define meta variables for possible function options
// Comment  Not all of these options are used by the pattern library functions
// Pre Point Process options
            {
            }
// Edit Point  Process options
            {
            }
// Post Point Process options
            {
            }
// Set  Restrict = PromptKey

// Go Sub  Initialize Input
            ObSbr_STnF19();
            if(hasReturned())
                return;

// Go Sub  Show Input
            ObSbr_STnF18();
            if(hasReturned())
                return;

// Go Sub  Reload Grid
            ObSbr_STnF10();
            if(hasReturned())
                return;

        }
// Edit Point  End initialize
        {
        }
// Post Point End initialize
        {
        }
    }

// ***************************************************************************
// Subroutine:	Terminate
// ***************************************************************************

    void ObSbr_STnF2()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Terminate
// Pre Point Start terminate
        {
        }
// Edit Point  Start terminate
        {
        }
// Post Point Start terminate
        {
        }
// Comment  Terminate if the option is specified, otherwise Return
// Return
        setReturn();
        if(true) return; /* solves unreachable code compilation errors */

    }

// ***************************************************************************
// Subroutine:	Send message
// ***************************************************************************

    void ObSbr_STnF3()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Send message
// Pre Point Start send message
        {
        }
// Edit Point  Start send message
        {
        }
// Post Point Start send message
        {
        }
// Comment  No message handling if *Message delivery undefined
// Case
        // Start of CASE block
        {
// When  Environment<*Message delivery> == <*Message delivery.*Dialog>
            if( v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_0) )
            {
// Dialog Message  Message: OBJECTS/Message
                {
                    Object[] msgParms = new Object[1];
                    msgParms[0] = new String(v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                    getApp().logx(getLocalisationProperty("String.100"), msgParms, ObApplication.DIALOG);
                }

// Comment  &(1:)
            }
// When  Environment<*Message delivery> == <*Message delivery.*Status>
            else
            {
                if( v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_1) )
                {
// Status Message  Message: OBJECTS/Message
                    {
                        Object[] msgParms = new Object[1];
                        msgParms[0] = new String(v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                        getApp().logx(getLocalisationProperty("String.101"), msgParms, ObApplication.STATUS);
                    }

// Comment  &(1:)
                }
// When  Environment<*Message delivery> == <*Message delivery.*Log>
                else
                {
                    if( v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_2) )
                    {
// Log Message  Message: OBJECTS/Message
                        {
                            Object[] msgParms = new Object[1];
                            msgParms[0] = new String(v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString()) ;
                            getApp().logx(getLocalisationProperty("String.102"), msgParms, ObApplication.LOG);
                        }

// Comment  &(1:)
                    }
// When  Environment<*Message delivery> == <*Message delivery.*None>
                    else
                    {
                        if( v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eq).isEqual(m_obvalfld_3) )
                        {
                        }
// Otherwise
                        else
                        {
// Pre Point Handle message
                            {
                            }
// Edit Point  Handle message
                            {
                            }
// Post Point Handle message
                            {
                            }
                        }
                    }
                }
            }
        }
        // End of CASE block
// Set  Environment<*Message ID> = <*Message ID.Null>
        v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1g5).assign(m_obvalfld_4);

// Set  Environment<*Message text> = <*Message text.*Blank>
        v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1ed).assign(m_obvalfld_5);

// Pre Point End send message
        {
        }
// Edit Point  End send message
        {
        }
// Post Point End send message
        {
        }
    }

// ***************************************************************************
// Subroutine:	Close
// ***************************************************************************

    void ObSbr_STnF4()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Close
// Comment  Process the Close event
// Pre Point Start Close
        {
        }
// Edit Point  Start Close
        {
        }
// Post Point Start Close
        {
        }
// Go Sub  Terminate
        ObSbr_STnF2();
        if(hasReturned())
            return;

// Pre Point End Close
        {
        }
// Edit Point  End Close
        {
        }
// Post Point End Close
        {
        }
    }

// ***************************************************************************
// Subroutine:	Set panel caption
// ***************************************************************************

    void ObSbr_STnF5()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Set panel caption
// Pre Point Start set panel caption
        {
        }
// Edit Point  Start set panel caption
        {
        }
// Post Point Start set panel caption
        {
        }
// Comment  Set the panel caption from the scoped message text
// Name  Function: Product.Selector, Environment<*Object>, .Language
        v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("Selector");

// Format Message  Message: Product.Selector.Caption, Environment<*Message text>
        {
            Object[] msgParms = new Object[1];
            msgParms[0] = new String(v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                  
            v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.103"), msgParms);
        }

// Comment  &(1:)
// Pre Point Set panel caption text
        {
        }
// Edit Point  Set panel caption text
        {
        }
// Post Point Set panel caption text
        {
        }
// API Call  Source code: JAVAAPI/SetCaption
        ObUserAPI.setWindowTitle(getFunction(), v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1ed).toString());

// Comment  ObUserAPI.setWindowTitle(getFunction(), &(1:).toString());
// Comment  16-Jly-2010 TERKI02 Implemented support for C# Generator
// Pre Point End set panel caption
        {
        }
// Edit Point  End set panel caption
        {
        }
// Post Point End set panel caption
        {
        }
    }

// ***************************************************************************
// Subroutine:	Prompt request
// ***************************************************************************

    void ObSbr_STnF6()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Prompt request
// Pre Point Start prompt processing
        {
        }
// Edit Point  Start prompt processing
        {
        }
// Post Point Start prompt processing
        {
        }
// Pre Point End prompt processing
        {
        }
// Edit Point  End prompt processing
        {
        }
// Post Point End prompt processing
        {
        }
    }

// ***************************************************************************
// Subroutine:	Load Grid
// ***************************************************************************

    void ObSbr_STnF7()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Load Grid
// Pre Point Start load Grid
        {
        }
// Edit Point  Start load Grid
        {
        }
// Post Point Start load Grid
        {
        }
// Go Sub  Load page for Grid
        ObSbr_STnF8();
        if(hasReturned())
            return;

// If  GridL<GridRowCount> >> <GridRowCount.*Zero>
        if( v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh3z).isGreaterThan(m_obvalfld_6) )
        {
// Refresh  GridP
            panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.REFRESH);

        }
// Pre Point End load Grid
        {
        }
// Edit Point  End load Grid
        {
        }
// Post Point End load Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Load page for Grid
// ***************************************************************************

    void ObSbr_STnF8()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Load page for Grid
// Pre Point Start load page for Grid
        {
        }
// Edit Point  Start load page for Grid
        {
        }
// Post Point Start load page for Grid
        {
        }
// For Page  GridP
        for(long r1427 = 0;r1427 < 64;r1427++)

        {
// Set  GridL<UseRow> = <UseRow.Yes>
            v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh3x).assign(m_obvalfld_7);

// Go Sub  Call fetch function for Grid
            ObSbr_STnF11();
            if(hasReturned())
                return;

// Go Sub  Set row usage for Grid
            ObSbr_STnF15();
            if(hasReturned())
                return;

// If  GridL<UseRow> == <UseRow.Yes>
            if( v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh3x).isEqual(m_obvalfld_7) )
            {
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  GridP<ProductID> to empty
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdID).setEmpty();

// Set  GridP<ProductID> state (1)
                panel.m_ObEditData3164.setState(12293); /* ProductID */
                panel.m_ObColumnHeadingData3165.setState(12294); /* ProductID */
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  GridP<ProductName> to empty
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdName).setEmpty();

// Set  GridP<ProductName> state (1)
                panel.m_ObEditData3166.setState(12295); /* ProductName */
                panel.m_ObColumnHeadingData3167.setState(12296); /* ProductName */
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  GridP<ProductDescription> to empty
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdDesc).setEmpty();

// Set  GridP<ProductDescription> state (1)
                panel.m_ObEditData3169.setState(12298); /* ProductDescription */
                panel.m_ObColumnHeadingData3168.setState(12297); /* ProductDescription */
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  GridP<ProductPrice> to empty
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObDblFldField(m_strVarProdPrice).setEmpty();

// Set  GridP<ProductPrice> state (1)
                panel.m_ObEditData3171.setState(12300); /* ProductPrice */
                panel.m_ObColumnHeadingData3170.setState(12299); /* ProductPrice */
// Call  UIBASIC/Meta.InitInputRegion
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Initialize the fields for a region.
// Comment  Enclose this in a field defining meta loop.

// Set  GridP<QtyInStock> to empty
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObIntFldField(m_strVarQtyInStock).setEmpty();

// Set  GridP<QtyInStock> state (1)
                panel.m_ObEditData3173.setState(12302); /* QtyInStock */
                panel.m_ObColumnHeadingData3172.setState(12301); /* QtyInStock */
// Set  GridP = FetchedData
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdID).assign(getObVariableGroupX("store.STfF_ObOut").getVariableArray(m_strVarSTfF_FetchedData)[v.STfF_STfF_FetchedData].getAsObCharFldField(m_strVarProdID));
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdName).assign(getObVariableGroupX("store.STfF_ObOut").getVariableArray(m_strVarSTfF_FetchedData)[v.STfF_STfF_FetchedData].getAsObCharFldField(m_strVarProdName));
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdDesc).assign(getObVariableGroupX("store.STfF_ObOut").getVariableArray(m_strVarSTfF_FetchedData)[v.STfF_STfF_FetchedData].getAsObCharFldField(m_strVarProdDesc));
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObDblFldField(m_strVarProdPrice).assign(getObVariableGroupX("store.STfF_ObOut").getVariableArray(m_strVarSTfF_FetchedData)[v.STfF_STfF_FetchedData].getAsObDblFldField(m_strVarProdPrice));
                v.getVariable(m_strVarSTnFPanel_GridP).getAsObIntFldField(m_strVarQtyInStock).assign(getObVariableGroupX("store.STfF_ObOut").getVariableArray(m_strVarSTfF_FetchedData)[v.STfF_STfF_FetchedData].getAsObIntFldField(m_strVarQtyInStock));

// Set  GridL<GridRowCount> = GridL<GridRowCount> + <GridRowCount.*One>
                v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh3z).assign(v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh3z).add(m_obvalfld_8));

// Call  UIBASIC/Meta.SetExternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set calculated and displayed field values
// Comment  Enclose this in a view defining meta loop.
// Pre Point Process Grid row to add
                {
                }
// Edit Point  Process Grid row to add
                {
                }
// Post Point Process Grid row to add
                {
// If  GridL<GridRowCount> == <GridRowCount.*One>
                    if( v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh3z).isEqual(m_obvalfld_8) )
                    {
// Set  GridDetailsP = GridP
                        v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdID).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdID));
                        v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdName).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdName));
                        v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdDesc).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdDesc));
                        v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObDblFldField(m_strVarProdPrice).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObDblFldField(m_strVarProdPrice));
                        v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObIntFldField(m_strVarQtyInStock).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObIntFldField(m_strVarQtyInStock));

// Put  GridDetailsP
                        panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridDetailsP29(ObCtrlData.WRITE);

// For Each Row  GridP
                        for(boolean r1537 = panel.m_ObGridData3155.getFirstRecord();r1537;r1537 = panel.m_ObGridData3155.getNextRecord())

                        {
// Comment  Set the grid data to the first auto-selected row
// Get  GridP
                            panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.READ);

// Locate  GridP
                            panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.WRITE);
                            panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.READ);
                            panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.LOCATE);

// Break
                            if(true) break; /* solves unreachable code compilation errors */

                        }
                    }
                }
// Append  GridP
                panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.INSERT);

// Pre Point Process Grid row after add
                {
                }
// Edit Point  Process Grid row after add
                {
                }
// Post Point Process Grid row after add
                {
                }
            }
// If  GridL<MoreData> == <MoreData.No> AND GridL<BufferedRows> == <BufferedRows.*Zero>
            if( (v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh47).isEqual(m_obvalfld_3)) && (v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).isEqual(m_obvalfld_9)) )
            {
// Set Grid End On  GridP
                panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.GRIDENDON);

// Pre Point Last page row for Grid
                {
                }
// Edit Point  Last page row for Grid
                {
                }
// Post Point Last page row for Grid
                {
                }
// Break
                if(true) break; /* solves unreachable code compilation errors */

            }
        }
// Pre Point End load page for Grid
        {
        }
// Edit Point  End load page for Grid
        {
        }
// Post Point End load page for Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Initialize Grid
// ***************************************************************************

    void ObSbr_STnF9()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Initialize Grid
// Pre Point Start Initialize Grid
        {
        }
// Edit Point  Start Initialize Grid
        {
        }
// Post Point Start Initialize Grid
        {
        }
// Comment  Set grid control values
// Set  GridL<GridRowCount> = <GridRowCount.*Zero>
        v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh3z).assign(m_obvalfld_6);

// Set  GridL<MoreData> = <MoreData.Yes>
        v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh47).assign(m_obvalfld_7);

// Set  GridL<Position> = <Position.Yes>
        v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh2n).assign(m_obvalfld_7);

// Set  GridL<BufferedRows> = <BufferedRows.*Zero>
        v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).assign(m_obvalfld_9);

// Set Grid End Off  GridP
        panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.GRIDENDOFF);

// Clear  GridP
        panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.CLEAR);

// Set  PositionGrid = Restrict

// Pre Point End Initialize Grid
        {
        }
// Edit Point  End Initialize Grid
        {
        }
// Post Point End Initialize Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Reload Grid
// ***************************************************************************

    void ObSbr_STnF10()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Reload Grid
// Pre Point Start reload Grid
        {
        }
// Edit Point  Start reload Grid
        {
        }
// Post Point Start reload Grid
        {
        }
// Go Sub  Initialize Grid
        ObSbr_STnF9();
        if(hasReturned())
            return;

// Go Sub  Load Grid
        ObSbr_STnF7();
        if(hasReturned())
            return;

// For Each Row  GridP
        for(boolean r1702 = panel.m_ObGridData3155.getFirstRecord();r1702;r1702 = panel.m_ObGridData3155.getNextRecord())

        {
// Get  GridP
            panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.READ);

// Break
            if(true) break; /* solves unreachable code compilation errors */

        }
// Pre Point End reload Grid
        {
        }
// Edit Point  End reload Grid
        {
        }
// Post Point End reload Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Call fetch function for Grid
// ***************************************************************************

    void ObSbr_STnF11()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Call fetch function for Grid
// Pre Point Start fetch for Grid
        {
        }
// Edit Point  Start fetch for Grid
        {
        }
// Post Point Start fetch for Grid
        {
        }
// If  GridL<BufferedRows> >> <BufferedRows.*Zero>
        if( v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).isGreaterThan(m_obvalfld_9) )
        {
// Comment  Use the buffered data
// Set  GridL<Current> = GridL<Current> + <Current.*One>
            v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh34).assign(v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh34).add(m_obvalfld_8));

// Set  GridL<BufferedRows> = GridL<BufferedRows> - <BufferedRows.*One>
            v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).assign(v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).subtract(m_obvalfld_10));

// Use  FetchedData, GridL<Current>
            v.STfF_STfF_FetchedData = (v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh34).toObIntFld().getValue() - 1);

        }
// Else
        else
        {
// If  GridL<MoreData> == <MoreData.Yes>
            if( v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh47).isEqual(m_obvalfld_7) )
            {
// Comment  Get more data from the server
// Call  Product.Fetch.BlockFetch

                getObVariableGroupX("store.STfF_ObIn").getVariable(m_strVarSTfF_Control).getAsObCharFldField(m_strVarS5trh2n).assign(v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh2n));
                getObVariableGroupX("store.STfF_ObIn").getVariable(m_strVarSTfF_Control).getAsObLongFldField(m_strVarS5trh30).assign(v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45));
                getObVariableGroupX("store.STfF_ObIn").getVariable(m_strVarSTfF_Position).getAsObCharFldField(m_strVarProdID).assign(v.getVariable(m_strVarSTnFPanel_InputP).getAsObCharFldField(m_strVarProdID));

                {
                    ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STfF_ObIn"), getObVariableGroupX("store.STfF_ObOut"), "store.STfF_ObFnc","External", "Java", "DefaultServer" );
                    if(obrun != null)
                    {
                        obrun.ObRun();
                        obrun.ObPostRun();
                    }
                }
                v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).assign(getObVariableGroupX("store.STfF_ObIn").getVariable(m_strVarSTfF_Control).getAsObLongFldField(m_strVarS5trh30));

// Set  GridL<Position> = <Position.No>
                v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh2n).assign(m_obvalfld_3);

// Case
                // Start of CASE block
                {
// When  Environment<*Call status> IS <State: OBJECTS/*Call status.*Abnormal>
                    if( ((v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx0rg).isNotEqual(m_obvalfld_11))) )
                    {
// Name  Function: Product.Fetch.BlockFetch, Environment<*Object>
                        v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eu).fromString("Product.Fetch.BlockFetch");

// Format Message  Message: FIELDS/FunctionCallFailed, Environment<*Message text>
                        {
                            Object[] msgParms = new Object[3];
                            msgParms[0] = new String(v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1eu).toString()) ; 
                                    msgParms[1] = new String(v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx0rg).toString()) ; 
                                    msgParms[2] = new String(v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx0r6).toString()) ; 
                                  
                            v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx1ed).formatMessage(getLocalisationProperty("String.104"), msgParms);
                        }

// Comment  Function: &(1:) was not found or did not execute correctly - contact your software supplier.
// The call failed with codes:
// CS=&(2:)
// RS=&(3:)
// Pre Point Fetch for Grid failed
                        {
                        }
// Edit Point  Fetch for Grid failed
                        {
                        }
// Post Point Fetch for Grid failed
                        {
                        }
// Go Sub  Send message
                        ObSbr_STnF3();
                        if(hasReturned())
                            return;

// Set  GridL<MoreData> = <MoreData.No>
                        v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh47).assign(m_obvalfld_3);

// Set  GridL<BufferedRows> = <BufferedRows.*Zero>
                        v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).assign(m_obvalfld_9);

// Set  GridL<UseRow> = <UseRow.No>
                        v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh3x).assign(m_obvalfld_3);

                    }
// Otherwise
                    else
                    {
// If  Environment<*Returned status> IS <State: OBJECTS/*Returned status.*Abnormal>
                        if( ((v.getVariable(m_strVarSTnF_Environment).getAsObCharFldField(m_strVarSqmx0r6).isNotEqual(m_obvalfld_11))) )
                        {
// Set  GridL<MoreData> = <MoreData.No>
                            v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh47).assign(m_obvalfld_3);

                        }
// If  GridL<BufferedRows> != <BufferedRows.*Zero>
                        if( v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).isNotEqual(m_obvalfld_9) )
                        {
// Set  GridL<Current> = <Current.*One>
                            v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh34).assign(m_obvalfld_8);

// Set  GridL<BufferedRows> = GridL<BufferedRows> - <BufferedRows.*One>
                            v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).assign(v.getVariable(m_strVarSTnF_GridL).getAsObLongFldField(m_strVarS5trh45).subtract(m_obvalfld_10));

// Use  FetchedData, GridL<Current>
                            v.STfF_STfF_FetchedData = (v.getVariable(m_strVarSTnF_GridL).getAsObIntFldField(m_strVarS5trh34).toObIntFld().getValue() - 1);

                        }
// Else
                        else
                        {
// Set  GridL<UseRow> = <UseRow.No>
                            v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh3x).assign(m_obvalfld_3);

                        }
                    }
                }
                // End of CASE block
            }
// Else
            else
            {
// Set  GridL<UseRow> = <UseRow.No>
                v.getVariable(m_strVarSTnF_GridL).getAsObCharFldField(m_strVarS5trh3x).assign(m_obvalfld_3);

            }
        }
// Pre Point End fetch for Grid
        {
        }
// Edit Point  End fetch for Grid
        {
        }
// Post Point End fetch for Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Select Grid
// ***************************************************************************

    void ObSbr_STnF12()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Select Grid
// Pre Point Start select Grid
        {
        }
// Edit Point  Start select Grid
        {
        }
// Post Point Start select Grid
        {
        }
// For Each Selected  GridP
        for(boolean r1924 = panel.m_ObGridData3155.getFirstSelected();r1924;r1924 = panel.m_ObGridData3155.getNextSelected())

        {
// Get  GridP
            panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.READ);

// Call  UIBASIC/Meta.SetInternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set internal values for panel fields.
// Comment  Enclose this in a view defining meta loop.
// Pre Point Process selected Grid row
            {
// Set  GridDetailsP = GridP
                v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdID).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdID));
                v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdName).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdName));
                v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObCharFldField(m_strVarProdDesc).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdDesc));
                v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObDblFldField(m_strVarProdPrice).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObDblFldField(m_strVarProdPrice));
                v.getVariable(m_strVarSTnFPanel_GridDetailsP).getAsObIntFldField(m_strVarQtyInStock).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObIntFldField(m_strVarQtyInStock));

// Put  GridDetailsP
                panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridDetailsP29(ObCtrlData.WRITE);

            }
// Edit Point  Process selected Grid row
            {
            }
// Post Point Process selected Grid row
            {
// Break
                if(true) break; /* solves unreachable code compilation errors */

            }
        }
// Pre Point End select Grid
        {
        }
// Edit Point  End select Grid
        {
        }
// Post Point End select Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Hide Grid
// ***************************************************************************

    void ObSbr_STnF13()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Hide Grid
// Pre Point Start hide Grid
        {
        }
// Edit Point  Start hide Grid
        {
        }
// Post Point Start hide Grid
        {
        }
// Set State  Hidden, GridP
        panel.m_ObGridData3155.setState(12323); /* GridP */
        panel.m_ObEditData3164.setState(12327); /* ProductID */
        panel.m_ObColumnHeadingData3165.setState(12328); /* ProductID */
        panel.m_ObEditData3166.setState(12330); /* ProductName */
        panel.m_ObColumnHeadingData3167.setState(12331); /* ProductName */
        panel.m_ObEditData3169.setState(12333); /* ProductDescription */
        panel.m_ObColumnHeadingData3168.setState(12334); /* ProductDescription */
        panel.m_ObEditData3171.setState(12336); /* ProductPrice */
        panel.m_ObColumnHeadingData3170.setState(12337); /* ProductPrice */
        panel.m_ObEditData3173.setState(12339); /* QtyInStock */
        panel.m_ObColumnHeadingData3172.setState(12340); /* QtyInStock */

// Pre Point End hide Grid
        {
        }
// Edit Point  End hide Grid
        {
        }
// Post Point End hide Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Show Grid
// ***************************************************************************

    void ObSbr_STnF14()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Show Grid
// Pre Point Start show Grid
        {
        }
// Edit Point  Start show Grid
        {
        }
// Post Point Start show Grid
        {
        }
// Set State  Default, GridP
        panel.m_ObGridData3155.setState(12292); /* GridP */
        panel.m_ObEditData3164.setState(12293); /* ProductID */
        panel.m_ObColumnHeadingData3165.setState(12294); /* ProductID */
        panel.m_ObEditData3166.setState(12295); /* ProductName */
        panel.m_ObColumnHeadingData3167.setState(12296); /* ProductName */
        panel.m_ObEditData3169.setState(12298); /* ProductDescription */
        panel.m_ObColumnHeadingData3168.setState(12297); /* ProductDescription */
        panel.m_ObEditData3171.setState(12300); /* ProductPrice */
        panel.m_ObColumnHeadingData3170.setState(12299); /* ProductPrice */
        panel.m_ObEditData3173.setState(12302); /* QtyInStock */
        panel.m_ObColumnHeadingData3172.setState(12301); /* QtyInStock */

// Pre Point End show Grid
        {
        }
// Edit Point  End show Grid
        {
        }
// Post Point End show Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Set row usage for Grid
// ***************************************************************************

    void ObSbr_STnF15()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Set row usage for Grid
// Pre Point Start set row usage for Grid
        {
        }
// Edit Point  Start set row usage for Grid
        {
        }
// Post Point Start set row usage for Grid
        {
        }
// Pre Point End set row usage for Grid
        {
        }
// Edit Point  End set row usage for Grid
        {
        }
// Post Point End set row usage for Grid
        {
        }
    }

// ***************************************************************************
// Subroutine:	Input changed
// ***************************************************************************

    void ObSbr_STnF16()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Input changed
// Pre Point Start Input changed
        {
        }
// Edit Point  Start Input changed
        {
        }
// Post Point Start Input changed
        {
        }
// Get  InputP
        panel.accessRegionv2egetVariable28m_strVarSTnFPanel_InputP29(ObCtrlData.READ);

// Call  UIBASIC/Meta.SetInternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set internal values for panel fields.
// Comment  Enclose this in a view defining meta loop.
// Pre Point End Input changed
        {
        }
// Edit Point  End Input changed
        {
        }
// Post Point End Input changed
        {
// Go Sub  Reload Grid
            ObSbr_STnF10();
            if(hasReturned())
                return;

        }
    }

// ***************************************************************************
// Subroutine:	Hide Input
// ***************************************************************************

    void ObSbr_STnF17()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Hide Input
// Pre Point Start hide Input
        {
        }
// Edit Point  Start hide Input
        {
        }
// Post Point Start hide Input
        {
        }
// Set State  Hidden, InputP
        panel.m_ObStaticData3151.setState(12345); /* InputP */
        panel.m_ObLabelData3153.setState(12347); /* ProductID */
        panel.m_ObEditData3154.setState(12348); /*  */

// Pre Point End hide Input
        {
        }
// Edit Point  End hide Input
        {
        }
// Post Point End hide Input
        {
        }
    }

// ***************************************************************************
// Subroutine:	Show Input
// ***************************************************************************

    void ObSbr_STnF18()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Show Input
// Pre Point Start show Input
        {
        }
// Edit Point  Start show Input
        {
        }
// Post Point Start show Input
        {
        }
// Go Sub  Set Input states
        ObSbr_STnF20();
        if(hasReturned())
            return;

// Call  UIBASIC/Meta.SetExternalValuesByView
// Comment  Copyright © 1994-1998 by Sterling Software, Inc. All Rights Reserved.
// Comment  Set calculated and displayed field values
// Comment  Enclose this in a view defining meta loop.
// Put  InputP
        panel.accessRegionv2egetVariable28m_strVarSTnFPanel_InputP29(ObCtrlData.WRITE);

// Set Focus  InputP

// Set focus to InputP.<All>
        panel.getPanelData().startFocusProcess();
        panel.accessRegionv2egetVariable28m_strVarSTnFPanel_InputP29(ObCtrlData.SETFOCUS);

// Pre Point End show Input
        {
        }
// Edit Point  End show Input
        {
        }
// Post Point End show Input
        {
        }
    }

// ***************************************************************************
// Subroutine:	Initialize Input
// ***************************************************************************

    void ObSbr_STnF19()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Initialize Input
// Pre Point Start initialize Input
        {
        }
// Edit Point  Start initialize Input
        {
        }
// Post Point Start initialize Input
        {
// Set  InputP = PromptKey
            v.getVariable(m_strVarSTnFPanel_InputP).getAsObCharFldField(m_strVarProdID).assign(in.getVariable(m_strVarSTnF_PromptKey).getAsObCharFldField(m_strVarProdID));

        }
// Pre Point End initialize Input
        {
        }
// Edit Point  End initialize Input
        {
        }
// Post Point End initialize Input
        {
        }
    }

// ***************************************************************************
// Subroutine:	Set Input states
// ***************************************************************************

    void ObSbr_STnF20()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Set Input states
// Pre Point Start set Input states
        {
        }
// Edit Point  Start set Input states
        {
        }
// Post Point Start set Input states
        {
        }
// Set State  Default, InputP
        panel.m_ObStaticData3151.setState(12289); /* InputP */
        panel.m_ObLabelData3153.setState(12290); /* ProductID */
        panel.m_ObEditData3154.setState(12291); /*  */

// Pre Point End set Input states
        {
        }
// Edit Point  End set Input states
        {
        }
// Post Point End set Input states
        {
        }
    }

// ***************************************************************************
// Subroutine:	Select row request
// ***************************************************************************

    void ObSbr_STnF21()
    {
//  The standard set of context variables
        STnF_ObDat	v;
        STnF_ObIn	in;
        STnF_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (STnF_ObDat)fnc.getDatVariable();
        in	= (STnF_ObIn)fnc.getInVariable();
        out	= (STnF_ObOut)fnc.getOutVariable();

        STnF_ObPnl panel = (STnF_ObPnl)getPanel();

// Sub  Select row request
// Pre Point Start select row request
        {
        }
// Edit Point  Start select row request
        {
        }
// Post Point Start select row request
        {
        }
// Comment  Return selected row to caller
// For Each Selected  GridP
        for(boolean r2397 = panel.m_ObGridData3155.getFirstSelected();r2397;r2397 = panel.m_ObGridData3155.getNextSelected())

        {
// Get  GridP
            panel.accessRegionv2egetVariable28m_strVarSTnFPanel_GridP29(ObCtrlData.READ);

// Set  PromptKey = GridP
            in.getVariable(m_strVarSTnF_PromptKey).getAsObCharFldField(m_strVarProdID).assign(v.getVariable(m_strVarSTnFPanel_GridP).getAsObCharFldField(m_strVarProdID));

// Pre Point Process selected row
            {
            }
// Edit Point  Process selected row
            {
            }
// Post Point Process selected row
            {
            }
// Go Sub  Terminate
            ObSbr_STnF2();
            if(hasReturned())
                return;

        }
// Pre Point End select row request
        {
        }
// Edit Point  End select row request
        {
        }
// Post Point End select row request
        {
        }
    }

// ***************************************************************************
// The variables used by: Product.Selector
// ***************************************************************************

    ////////////////////////////////////////////////////////////////
    // ObDat Variable Group
    final class STnF_ObDat extends ObVariableGroupX
    {
        ////////////////////////////////////////////////////////////////
        // Members

        ////////////////////////////////////////////////////////////////
        // Constructors
        public STnF_ObDat(ObFunction fnc)
        {
            super(ObVariableGroup.VT_LOCAL, fnc);
            addVariable("STnF_GridL", initvarSTnF_STnF_GridL());
            addVariable("STnF_Restrict", initvarSTnF_STnF_Restrict());
            addVariable("STnF_PositionGrid", initvarSTnF_STnF_PositionGrid());
            addVariable("STnFPanel_DetailButtonP", initvarSTnF_STnFPanel_DetailButtonP());
            addVariable("STnFPanel_GridDetailsP", initvarSTnF_STnFPanel_GridDetailsP());
            addVariable("STnFPanel_GridP", initvarSTnF_STnFPanel_GridP());
            addVariable("STnFPanel_GridButtonP", initvarSTnF_STnFPanel_GridButtonP());
            addVariable("STnFPanel_InputP", initvarSTnF_STnFPanel_InputP());
            addVariable("STnFPanel_InputButtonP", initvarSTnF_STnFPanel_InputButtonP());
            addVariable("STnF_Environment", initvarSTnF_STnF_Environment());
        }

        public STnF_ObDat(ObApplication obapp)
        {
            super(obapp, ObVariableGroup.VT_LOCAL);
            addVariable("STnF_GridL", initvarSTnF_STnF_GridL());
            addVariable("STnF_Restrict", initvarSTnF_STnF_Restrict());
            addVariable("STnF_PositionGrid", initvarSTnF_STnF_PositionGrid());
            addVariable("STnFPanel_DetailButtonP", initvarSTnF_STnFPanel_DetailButtonP());
            addVariable("STnFPanel_GridDetailsP", initvarSTnF_STnFPanel_GridDetailsP());
            addVariable("STnFPanel_GridP", initvarSTnF_STnFPanel_GridP());
            addVariable("STnFPanel_GridButtonP", initvarSTnF_STnFPanel_GridButtonP());
            addVariable("STnFPanel_InputP", initvarSTnF_STnFPanel_InputP());
            addVariable("STnFPanel_InputButtonP", initvarSTnF_STnFPanel_InputButtonP());
            addVariable("STnF_Environment", initvarSTnF_STnF_Environment());
        }

        public STnF_ObDat()
        {
            super(ObVariableGroup.VT_LOCAL, null);
            addVariable("STnF_GridL", initvarSTnF_STnF_GridL());
            addVariable("STnF_Restrict", initvarSTnF_STnF_Restrict());
            addVariable("STnF_PositionGrid", initvarSTnF_STnF_PositionGrid());
            addVariable("STnFPanel_DetailButtonP", initvarSTnF_STnFPanel_DetailButtonP());
            addVariable("STnFPanel_GridDetailsP", initvarSTnF_STnFPanel_GridDetailsP());
            addVariable("STnFPanel_GridP", initvarSTnF_STnFPanel_GridP());
            addVariable("STnFPanel_GridButtonP", initvarSTnF_STnFPanel_GridButtonP());
            addVariable("STnFPanel_InputP", initvarSTnF_STnFPanel_InputP());
            addVariable("STnFPanel_InputButtonP", initvarSTnF_STnFPanel_InputButtonP());
            addVariable("STnF_Environment", initvarSTnF_STnF_Environment());
        }





        public int STfF_STfF_FetchedData = 0; /* FetchedData  Parm 1 */
        public int STfF_STfF_FetchedData_save = 0; /* Product2eFetch2eBlockFetch2fSTORAGE2fFetchedData_save */

        ////////////////////////////////////////////////////////////////
        // GridL Variable
        public ObVariableX initvarSTnF_STnF_GridL()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnF_GridL");

            var.addField("S5trh2n", new ObCharFld(ObField.LOCAL, 1, 'c', "S5trh2n", false, false, false, "", m_obapp, false)); /* Position */
            var.addField("S5trh47", new ObCharFld(ObField.LOCAL, 1, 'c', "S5trh47", false, false, false, "", m_obapp, false)); /* MoreData */
            var.addField("S5trh45", new ObLongFld(ObField.LOCAL, 9, 0, 'p', "S5trh45", "", m_obapp)); /* BufferedRows */
            var.addField("S5trh3x", new ObCharFld(ObField.LOCAL, 1, 'c', "S5trh3x", false, false, false, "", m_obapp, false)); /* UseRow */
            var.addField("S5trh3z", new ObIntFld(ObField.LOCAL, 4, 0, 'p', "S5trh3z", "", m_obapp)); /* GridRowCount */
            var.addField("S5trh34", new ObIntFld(ObField.LOCAL, 4, 0, 'p', "S5trh34", "", m_obapp)); /* Current */

            return var;
        } 

        // End of GridL Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // Restrict Variable
        public ObVariableX initvarSTnF_STnF_Restrict()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnF_Restrict");


            return var;
        } 

        // End of Restrict Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // PositionGrid Variable
        public ObVariableX initvarSTnF_STnF_PositionGrid()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnF_PositionGrid");

            var.addField("ProdID", new ObCharFld(ObField.LOCAL, 10, 'c', "ProdID", false, false, false, "", m_obapp, false)); /* ProductID */

            return var;
        } 

        // End of PositionGrid Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // DetailButtonP Variable
        public ObVariableX initvarSTnF_STnFPanel_DetailButtonP()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnFPanel_DetailButtonP");


            return var;
        } 

        // End of DetailButtonP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // GridDetailsP Variable
        public ObVariableX initvarSTnF_STnFPanel_GridDetailsP()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnFPanel_GridDetailsP");

            var.addField("ProdID", new ObCharFld(ObField.PANEL, 10, 'c', "ProdID", false, false, false, "", m_obapp, false)); /* ProductID */
            var.addField("ProdName", new ObCharFld(ObField.PANEL, 40, 'c', "ProdName", false, false, false, "", m_obapp, false)); /* ProductName */
            var.addField("ProdDesc", new ObCharFld(ObField.PANEL, 1024, 'c', "ProdDesc", true, true, false, "", m_obapp, false)); /* ProductDescription */
            var.addField("ProdPrice", new ObDblFld(ObField.PANEL, 9, 2, 'p', "ProdPrice", "", m_obapp)); /* ProductPrice */
            var.addField("QtyInStock", new ObIntFld(ObField.PANEL, 4, 0, 'p', "QtyInStock", "", m_obapp)); /* QtyInStock */

            return var;
        } 

        // End of GridDetailsP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // GridP Variable
        public ObVariableX initvarSTnF_STnFPanel_GridP()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnFPanel_GridP");

            var.addField("ProdID", new ObCharFld(ObField.PANEL, 10, 'c', "ProdID", false, false, false, "", m_obapp, false)); /* ProductID */
            var.addField("ProdName", new ObCharFld(ObField.PANEL, 40, 'c', "ProdName", false, false, false, "", m_obapp, false)); /* ProductName */
            var.addField("ProdDesc", new ObCharFld(ObField.PANEL, 1024, 'c', "ProdDesc", true, true, false, "", m_obapp, false)); /* ProductDescription */
            var.addField("ProdPrice", new ObDblFld(ObField.PANEL, 9, 2, 'p', "ProdPrice", "", m_obapp)); /* ProductPrice */
            var.addField("QtyInStock", new ObIntFld(ObField.PANEL, 4, 0, 'p', "QtyInStock", "", m_obapp)); /* QtyInStock */

            return var;
        } 

        // End of GridP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // GridButtonP Variable
        public ObVariableX initvarSTnF_STnFPanel_GridButtonP()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnFPanel_GridButtonP");


            return var;
        } 

        // End of GridButtonP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // InputP Variable
        public ObVariableX initvarSTnF_STnFPanel_InputP()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnFPanel_InputP");

            var.addField("ProdID", new ObCharFld(ObField.PANEL, 10, 'c', "ProdID", false, false, false, "", m_obapp, false)); /* ProductID */

            return var;
        } 

        // End of InputP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // InputButtonP Variable
        public ObVariableX initvarSTnF_STnFPanel_InputButtonP()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnFPanel_InputButtonP");


            return var;
        } 

        // End of InputButtonP Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // Environment Variable
        public ObVariableX initvarSTnF_STnF_Environment()
        {
            ObVariableX var = new ObVariableX(this, "varSTnF_STnF_Environment");

            var.addField("Sqmx1ac", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1ac", false, false, false, "", m_obapp, false)); /* *Focus set */
            var.addField("Sqmx1bm", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bm", false, false, false, "", m_obapp, false)); /* *Database */
            var.addField("Sqmx1bo", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bo", false, false, false, "", m_obapp, false)); /* *System */
            var.addField("Sqmx1c9", new ObCharFld(ObField.ENVIRONMENT, 512, 'c', "Sqmx1c9", false, false, false, "", m_obapp, false)); /* *Message */
            var.addField("Sqmx1e9", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx1e9", false, false, false, "", m_obapp, false)); /* *Validation */
            var.addField("Sqmx1ed", new ObCharFld(ObField.ENVIRONMENT, 256, 'c', "Sqmx1ed", false, true, false, "", m_obapp, false)); /* *Message text */
            var.addField("Sqmx1eq", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1eq", false, false, false, "", m_obapp, false)); /* *Message delivery */
            var.addField("Sqmx1eu", new ObCharFld(ObField.ENVIRONMENT, 128, 'c', "Sqmx1eu", false, true, false, "", m_obapp, false)); /* *Object */
            var.addField("Sqmx1g5", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1g5", false, false, false, "", m_obapp, false)); /* *Message ID */
            var.addField("Sqmx0r4", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r4", false, false, false, "", m_obapp, false)); /* *View status */
            var.addField("Sqmx0r6", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r6", false, false, false, "", m_obapp, false)); /* *Returned status */
            var.addField("Sqmx0r8", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r8", false, false, false, "", m_obapp, false)); /* *Returning status */
            var.addField("Sqmx0ra", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0ra", false, false, false, "", m_obapp, false)); /* *Report status */
            var.addField("Sqmx0rc", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rc", false, false, false, "", m_obapp, false)); /* *Panel status */
            var.addField("Sqmx0re", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0re", false, false, false, "", m_obapp, false)); /* *Error status */
            var.addField("Sqmx0rg", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rg", false, false, false, "", m_obapp, false)); /* *Call status */
            var.addField("Sqmx0s3", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx0s3", false, false, false, "", m_obapp, false)); /* *Boolean */
            var.addField("Sqmx0xh", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx0xh", false, false, false, "", m_obapp, false)); /* *Object name */

            return var;
        } 

        // End of Environment Variable
        ////////////////////////////////////////////////////////////////
    }
    // End Of Product.Selector Variable Group
    ////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Field Values:

        ObCharFld m_obvalfld_7 = new ObCharFld("Y", 1);
        ObIntFld m_obvalfld_8 = new ObIntFld(1);
        ObIntFld m_obvalfld_6 = new ObIntFld(0);
        ObCharFld m_obvalfld_3 = new ObCharFld("N", 1);
        ObCharFld m_obvalfld_11 = new ObCharFld(" ", 7);
        ObCharFld m_obvalfld_5 = new ObCharFld("", 256);
        ObCharFld m_obvalfld_1 = new ObCharFld("S", 1);
        ObCharFld m_obvalfld_0 = new ObCharFld("D", 1);
        ObLongFld m_obvalfld_9 = new ObLongFld(0L);
        ObLongFld m_obvalfld_10 = new ObLongFld(1L);
        ObCharFld m_obvalfld_4 = new ObCharFld(" ", 32);
        ObCharFld m_obvalfld_2 = new ObCharFld("L", 1);
    // End Of Field Values
    ////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Variable and Field Names:

        public final String m_strFldSqmx0rg = "Sqmx0rg";
        public final String m_strVarSTnFPanel_InputP = "STnFPanel_InputP";
        public final String m_strVarSTnFPanel_GridButtonP = "STnFPanel_GridButtonP";
        public final String m_strVarSqmx1eu = "Sqmx1eu";
        public final String m_strVarSTnF_Environment = "STnF_Environment";
        public final String m_strVarSTnF_PromptKey = "STnF_PromptKey";
        public final String m_strVarS5trh47 = "S5trh47";
        public final String m_strVarQtyInStock = "QtyInStock";
        public final String m_strVarProdPrice = "ProdPrice";
        public final String m_strFldSqmx0r8 = "Sqmx0r8";
        public final String m_strVarSqmx1ed = "Sqmx1ed";
        public final String m_strVarSqmx0r6 = "Sqmx0r6";
        public final String m_strVarS5trh45 = "S5trh45";
        public final String m_strVarS5trh34 = "S5trh34";
        public final String m_strVarSTnF_GridL = "STnF_GridL";
        public final String m_strVarSqmx1g5 = "Sqmx1g5";
        public final String m_strVarProdDesc = "ProdDesc";
        public final String m_strVarProdName = "ProdName";
        public final String m_strVarProdID = "ProdID";
        public final String m_strVarSTnFPanel_GridP = "STnFPanel_GridP";
        public final String m_strVarS5trh2n = "S5trh2n";
        public final String m_strVarS5trh30 = "S5trh30";
        public final String m_strVarSTnFPanel_GridDetailsP = "STnFPanel_GridDetailsP";
        public final String m_strVarSqmx0rg = "Sqmx0rg";
        public final String m_strVarSTfF_Position = "STfF_Position";
        public final String m_strVarS5trh3z = "S5trh3z";
        public final String m_strVarSTfF_Control = "STfF_Control";
        public final String m_strVarSTnFPanel_InputButtonP = "STnFPanel_InputButtonP";
        public final String m_strVarS5trh3x = "S5trh3x";
        public final String m_strVarSTnFPanel_DetailButtonP = "STnFPanel_DetailButtonP";
        public final String m_strFldSqmx0r6 = "Sqmx0r6";
        public final String m_strVarSqmx1eq = "Sqmx1eq";
        public final String m_strVarSTfF_FetchedData = "STfF_FetchedData";
    // End Of Variable and Field Names
    ////////////////////////////////////////////////////////////////////////////////
}
// ***************************************************************************
