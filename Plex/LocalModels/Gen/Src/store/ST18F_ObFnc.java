// ***************************************************************************
// 
// Order.CreateOrder : ST18F
// 
// ***************************************************************************
// 
// Generated by : CA Plex r7.2.1   (Build 24.004)
// Date - Time  : Sunday, April 16, 2023 - 2:35 PM
// Group Model  : C:\Development\Conferences\2023 Boca Raton\Web Tech Workshop\Plex\GroupModels\Store
// Local Model  : C:\Development\Conferences\2023 Boca Raton\Web Tech Workshop\Plex\LocalModels\store.mdl
// User         : Admin
// Version      : Base
// Level        : Base
// Variant      : Base
// Language     : Base
// 
// ***************************************************************************
// 
// Make Processing Support:
/*
@OBJ_SURROGATE=0xFFFFFFDF
@FUNCTION=Order.CreateOrder
@FNCLNGSYS=Java
@IMPLEMENTATION_NAME=ST18F
@TYPE=EXTERNAL
@GENVRL=721
*/

package store;

import ObRun.ObRTTypes.*;
import ObRun.ObComms.*;
import ObRun.ObFunction.*;
import ObRun.ObPanel.ObCtrlData.*;
import java.lang.reflect.*;
import java.util.*;
import java.awt.event.*;

// ***************************************************************************
// Order.CreateOrder Function Class
// ***************************************************************************

public final class ST18F_ObFnc extends ObFunction
{
    ////////////////////////////////////////////////////////////////////////////////
    // Construction Methods:

    //Default constructor - called by class loader
    //when class gets loaded and 'newInstance()' gets called
    public ST18F_ObFnc(ObCallMgr obcallmgr)
    {
        super(obcallmgr);
        ST18F_ObDat varObDat = new ST18F_ObDat( this);
        super.setLocalVariable( varObDat);
        setFunctionName("Order.CreateOrder");
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Variable Access Methods:

    public ObVariableGroup getInVariable()
    {
        if( m_in == null)
            m_in  = new ST18F_ObIn( this);
          return m_in;
    }
    public ObVariableGroup getOutVariable()
    {
        if( m_out == null)
            m_out  = new ST18F_ObOut( this);
          return m_out;
    }
    public ObVariableGroup getDatVariable()
    {
        if( m_locVariable == null)
            m_locVariable  = new ST18F_ObDat( this);
          return m_locVariable;
    }

    ////////////////////////////////////////////////////////////////////////////////
    // Environment variable access methods:

    public void setReturnedStatus(ObCharFld returned)
    {
        ((ST18F_ObDat)getDatVariable()).getVariable(m_strVarST18F_Environment).getField(m_strFldSqmx0r6).assign(returned);
    }

    public void setReturningStatus(ObCharFld returning)
    {
        ((ST18F_ObDat)getDatVariable()).getVariable(m_strVarST18F_Environment).getField(m_strFldSqmx0r8).assign(returning);
    }

    public ObCharFld getReturningStatus()
    {
        return (ObCharFld)(((ST18F_ObDat)getDatVariable()).getVariable(m_strVarST18F_Environment).getField(m_strFldSqmx0r8));
    }

    public void setCallStatus(ObCharFld status)
    {
        ((ST18F_ObDat)getDatVariable()).getVariable(m_strVarST18F_Environment).getField(m_strFldSqmx0rg).assign(status);
    }


// ***************************************************************************
// Function:	Order.CreateOrder
// ***************************************************************************

    public void ObRun()
    {
//  The standard set of context variables
        ST18F_ObDat	v;
        ST18F_ObIn	in;
        ST18F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST18F_ObDat)fnc.getDatVariable();
        in	= (ST18F_ObIn)fnc.getInVariable();
        out	= (ST18F_ObOut)fnc.getOutVariable();


// Comment  Copyright 2004 Computer Associates International, Inc. All Rights Reserved.

// ***************************************************************************
// Description
// ***************************************************************************

// Seq 
        {
// Pre Point Description
            {
            }
// Edit Point  Description
            {
            }
// Post Point Description
            {
            }

// ***************************************************************************
// Modification history
// ***************************************************************************

// Seq 
            {
// Comment  07-Apr-1999	AGS	Define User meta variable for use in the message meta.#10087644
// Comment  28-Oct-1999	AGS	Define +Terminate meta variable for use in the Terminate meta.#10140727
// Comment  13-Oct-2005	CDC	Edit Point 'Terminate Processing' added to Subroutine Terminate. #12668997;02  #14346413.
// Pre Point Modification history
                {
                }
// Edit Point  Modification history
                {
                }
// Post Point Modification history
                {
                }
            }
        }
// Go Sub  Initialize
        ObSbr_ST18F1();
        if(hasReturned())
            return;

// Pre Point Execute
        {
        }
// Edit Point  Execute
        {
        }
// Post Point Execute
        {
        }
// Sub  Initialize
// Sub  Terminate
// Sub  Send message
// Pre Point Subroutines
        {
// Set  Environment<*Returning status> = <*Returning status.*Successful>
            v.getVariable(m_strVarST18F_Environment).getAsObCharFldField(m_strVarSqmx0r8).assign(m_obvalfld_0);

// Go Sub  Validate Order
            ObSbr_ST18F4();
            if(hasReturned())
                return;

// If  Environment<*Validation> IS <State: OBJECTS/*Validation.*Abnormal>
            if( ((v.getVariable(m_strVarST18F_Environment).getAsObCharFldField(m_strVarSqmx1e9).isNotEqual(m_obvalfld_0))) )
            {
// Set  Environment<*Returning status> = <*Returning status.*Error>
                v.getVariable(m_strVarST18F_Environment).getAsObCharFldField(m_strVarSqmx0r8).assign(m_obvalfld_1);

            }
// Else
            else
            {
// Go Sub  Complete Order
                ObSbr_ST18F5();
                if(hasReturned())
                    return;

            }
        }
// Edit Point  Subroutines
        {
        }
// Post Point Subroutines
        {
// Sub  Validate Order
// Sub  Complete Order
        }

    }


// ***************************************************************************
// Subroutine:	Initialize
// ***************************************************************************

    void ObSbr_ST18F1()
    {
//  The standard set of context variables
        ST18F_ObDat	v;
        ST18F_ObIn	in;
        ST18F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST18F_ObDat)fnc.getDatVariable();
        in	= (ST18F_ObIn)fnc.getInVariable();
        out	= (ST18F_ObOut)fnc.getOutVariable();


// Sub  Initialize
// Pre Point Start initialize
        {
        }
// Edit Point  Start initialize
        {
        }
// Post Point Start initialize
        {
        }

// ***************************************************************************
// Message handling & termination setup
// ***************************************************************************

// Seq 
        {
        }
// Pre Point End initialize
        {
        }
// Edit Point  End initialize
        {
        }
// Post Point End initialize
        {
        }
    }

// ***************************************************************************
// Subroutine:	Terminate
// ***************************************************************************

    void ObSbr_ST18F2()
    {
//  The standard set of context variables
        ST18F_ObDat	v;
        ST18F_ObIn	in;
        ST18F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST18F_ObDat)fnc.getDatVariable();
        in	= (ST18F_ObIn)fnc.getInVariable();
        out	= (ST18F_ObOut)fnc.getOutVariable();


// Sub  Terminate
// Pre Point Start terminate
        {
        }
// Edit Point  Start terminate
        {
        }
// Post Point Start terminate
        {
        }
// Comment  Terminate if the option is specified, otherwise Return
// Return
        setReturn();
        if(true) return; /* solves unreachable code compilation errors */

    }

// ***************************************************************************
// Subroutine:	Send message
// ***************************************************************************

    void ObSbr_ST18F3()
    {
//  The standard set of context variables
        ST18F_ObDat	v;
        ST18F_ObIn	in;
        ST18F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST18F_ObDat)fnc.getDatVariable();
        in	= (ST18F_ObIn)fnc.getInVariable();
        out	= (ST18F_ObOut)fnc.getOutVariable();


// Sub  Send message
// Pre Point Start send message
        {
        }
// Edit Point  Start send message
        {
        }
// Post Point Start send message
        {
        }
// Pre Point End send message
        {
        }
// Edit Point  End send message
        {
        }
// Post Point End send message
        {
        }
    }

// ***************************************************************************
// Subroutine:	Validate Order
// ***************************************************************************

    void ObSbr_ST18F4()
    {
//  The standard set of context variables
        ST18F_ObDat	v;
        ST18F_ObIn	in;
        ST18F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST18F_ObDat)fnc.getDatVariable();
        in	= (ST18F_ObIn)fnc.getInVariable();
        out	= (ST18F_ObOut)fnc.getOutVariable();


// Sub  Validate Order
// Comment  Fetch the product and check that it exists and has enough stock to complete the order
// Set  Environment<*Validation> = <*Validation.*Normal>
        v.getVariable(m_strVarST18F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_0);

// If  Order<OrderQty> <= <OrderQty.*Zero>
        if( in.getVariable(m_strVarST18F_Order).getAsObIntFldField(m_strVarOrderQty).isLessThanOrEqual(m_obvalfld_2) )
        {
// Format Message  Message: Order.Qty must be a positive amount, Output/Output<*Message>
            {
                out.getVariable(m_strVarST18F_Output).getAsObCharFldField(m_strVarSqmx1c9).formatMessage("Quantity must be a positive amount");
            }

// Comment  Quantity must be a positive amount
// Set  Environment<*Validation> = <*Validation.*Error>
            v.getVariable(m_strVarST18F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_3);

// Exit Sub
            if(true)return;

        }
// Call  Product.Fetch.SingleFetch

        getObVariableGroupX("store.STgF_ObIn").getVariable(m_strVarSTgF_FetchKey).getAsObCharFldField(m_strVarProdID).assign(in.getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarProdID));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STgF_ObIn"), getObVariableGroupX("store.STgF_ObOut"), "store.STgF_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        in.getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarProdID).assign(getObVariableGroupX("store.STgF_ObIn").getVariable(m_strVarSTgF_FetchKey).getAsObCharFldField(m_strVarProdID));

// If  Environment<*Returned status> IS <State: OBJECTS/*Returned status.*Abnormal>
        if( ((v.getVariable(m_strVarST18F_Environment).getAsObCharFldField(m_strVarSqmx0r6).isNotEqual(m_obvalfld_0))) )
        {
// Format Message  Message: Order.Product not found, Output/Output<*Message>
            {
                Object[] msgParms = new Object[2];
                msgParms[0] = new String(in.getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarProdID).toString()) ; 
                                  
                out.getVariable(m_strVarST18F_Output).getAsObCharFldField(m_strVarSqmx1c9).formatMessage("Product {0} was not found.", msgParms);
            }

// Comment  Product &(1:) was not found.
// Set  Environment<*Validation> = <*Validation.*Error>
            v.getVariable(m_strVarST18F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_3);

        }
// Else
        else
        {
// Set  Local<QtyInStock> = FetchedData<QtyInStock> - Order<OrderQty>
            v.getVariable(m_strVarST18F_Local).getAsObIntFldField(m_strVarQtyInStock).assign(getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObIntFldField(m_strVarQtyInStock).subtract(in.getVariable(m_strVarST18F_Order).getAsObIntFldField(m_strVarOrderQty)));

// If  Local<QtyInStock> << <QtyInStock.*Zero>
            if( v.getVariable(m_strVarST18F_Local).getAsObIntFldField(m_strVarQtyInStock).isLessThan(m_obvalfld_2) )
            {
// Format Message  Message: Order.Quantity not available, Output/Output<*Message>
                {
                    Object[] msgParms = new Object[2];
                    msgParms[0] = new String(in.getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarProdID).toString()) ; 
                                  
                    out.getVariable(m_strVarST18F_Output).getAsObCharFldField(m_strVarSqmx1c9).formatMessage("Product {0} does not have that quantity in stock.", msgParms);
                }

// Comment  Product &(1:) does not have that quantity in stock.
// Set  Environment<*Validation> = <*Validation.*Error>
                v.getVariable(m_strVarST18F_Environment).getAsObCharFldField(m_strVarSqmx1e9).assign(m_obvalfld_3);

            }
        }
    }

// ***************************************************************************
// Subroutine:	Complete Order
// ***************************************************************************

    void ObSbr_ST18F5()
    {
//  The standard set of context variables
        ST18F_ObDat	v;
        ST18F_ObIn	in;
        ST18F_ObOut	out;

        ObFunction fnc = this;

//  Initialise the standard set of context variables
        v	= (ST18F_ObDat)fnc.getDatVariable();
        in	= (ST18F_ObIn)fnc.getInVariable();
        out	= (ST18F_ObOut)fnc.getOutVariable();


// Sub  Complete Order
// Call  Order.Update.InsertRow

        getObVariableGroupX("store.ST16F_ObIn").getVariable(m_strVarST16F_InsertData).getAsObCharFldField(m_strVarCustID).assign(in.getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarCustID));
        getObVariableGroupX("store.ST16F_ObIn").getVariable(m_strVarST16F_InsertData).getAsObIntFldField(m_strVarOrderQty).assign(in.getVariable(m_strVarST18F_Order).getAsObIntFldField(m_strVarOrderQty));
        getObVariableGroupX("store.ST16F_ObIn").getVariable(m_strVarST16F_InsertData).getAsObCharFldField(m_strVarProdID).assign(in.getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarProdID));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.ST16F_ObIn"), getObVariableGroupX("store.ST16F_ObOut"), "store.ST16F_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        in.getVariable(m_strVarST18F_Order).getAsObIntFldField(m_strVarOrderQty).assign(getObVariableGroupX("store.ST16F_ObIn").getVariable(m_strVarST16F_InsertData).getAsObIntFldField(m_strVarOrderQty));
        in.getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarProdID).assign(getObVariableGroupX("store.ST16F_ObIn").getVariable(m_strVarST16F_InsertData).getAsObCharFldField(m_strVarProdID));
        in.getVariable(m_strVarST18F_Order).getAsObCharFldField(m_strVarCustID).assign(getObVariableGroupX("store.ST16F_ObIn").getVariable(m_strVarST16F_InsertData).getAsObCharFldField(m_strVarCustID));

// Call  Product.Update.UpdateRow

        getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateKey).getAsObCharFldField(m_strVarProdID).assign(getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObCharFldField(m_strVarProdID));
        getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateData).getAsObDblFldField(m_strVarProdPrice).assign(getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObDblFldField(m_strVarProdPrice));
        getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateData).getAsObCharFldField(m_strVarProdDesc).assign(getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObCharFldField(m_strVarProdDesc));
        getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateData).getAsObCharFldField(m_strVarProdName).assign(getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObCharFldField(m_strVarProdName));
        getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateData).getAsObIntFldField(m_strVarQtyInStock).assign(v.getVariable(m_strVarST18F_Local).getAsObIntFldField(m_strVarQtyInStock));

        {
            ObRunnable obrun = getCallMgr().getObRunnable(fnc, getObVariableGroupX("store.STjF_ObIn"), getObVariableGroupX("store.STjF_ObOut"), "store.STjF_ObFnc","External", "Java", "DefaultServer" );
            if(obrun != null)
            {
                obrun.ObRun();
                obrun.ObPostRun();
            }
        }
        getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObCharFldField(m_strVarProdID).assign(getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateKey).getAsObCharFldField(m_strVarProdID));
        getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObCharFldField(m_strVarProdDesc).assign(getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateData).getAsObCharFldField(m_strVarProdDesc));
        getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObCharFldField(m_strVarProdName).assign(getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateData).getAsObCharFldField(m_strVarProdName));
        getObVariableGroupX("store.STgF_ObOut").getVariable(m_strVarSTgF_FetchedData).getAsObDblFldField(m_strVarProdPrice).assign(getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateData).getAsObDblFldField(m_strVarProdPrice));
        v.getVariable(m_strVarST18F_Local).getAsObIntFldField(m_strVarQtyInStock).assign(getObVariableGroupX("store.STjF_ObIn").getVariable(m_strVarSTjF_UpdateData).getAsObIntFldField(m_strVarQtyInStock));

    }

// ***************************************************************************
// The variables used by: Order.CreateOrder
// ***************************************************************************

    ////////////////////////////////////////////////////////////////
    // ObDat Variable Group
    final class ST18F_ObDat extends ObVariableGroupX
    {
        ////////////////////////////////////////////////////////////////
        // Members

        ////////////////////////////////////////////////////////////////
        // Constructors
        public ST18F_ObDat(ObFunction fnc)
        {
            super(ObVariableGroup.VT_LOCAL, fnc);
            addVariable("ST18F_Local", initvarST18F_ST18F_Local());
            addVariable("ST18F_Environment", initvarST18F_ST18F_Environment());
        }

        public ST18F_ObDat(ObApplication obapp)
        {
            super(obapp, ObVariableGroup.VT_LOCAL);
            addVariable("ST18F_Local", initvarST18F_ST18F_Local());
            addVariable("ST18F_Environment", initvarST18F_ST18F_Environment());
        }

        public ST18F_ObDat()
        {
            super(ObVariableGroup.VT_LOCAL, null);
            addVariable("ST18F_Local", initvarST18F_ST18F_Local());
            addVariable("ST18F_Environment", initvarST18F_ST18F_Environment());
        }






        ////////////////////////////////////////////////////////////////
        // Local Variable
        public ObVariableX initvarST18F_ST18F_Local()
        {
            ObVariableX var = new ObVariableX(this, "varST18F_ST18F_Local");

            var.addField("QtyInStock", new ObIntFld(ObField.LOCAL, 4, 0, 'p', "QtyInStock", "", m_obapp)); /* QtyInStock */

            return var;
        } 

        // End of Local Variable
        ////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////
        // Environment Variable
        public ObVariableX initvarST18F_ST18F_Environment()
        {
            ObVariableX var = new ObVariableX(this, "varST18F_ST18F_Environment");

            var.addField("Sqmx1ac", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1ac", false, false, false, "", m_obapp, false)); /* *Focus set */
            var.addField("Sqmx1bm", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bm", false, false, false, "", m_obapp, false)); /* *Database */
            var.addField("Sqmx1bo", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1bo", false, false, false, "", m_obapp, false)); /* *System */
            var.addField("Sqmx1c9", new ObCharFld(ObField.ENVIRONMENT, 512, 'c', "Sqmx1c9", false, false, false, "", m_obapp, false)); /* *Message */
            var.addField("Sqmx1e9", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx1e9", false, false, false, "", m_obapp, false)); /* *Validation */
            var.addField("Sqmx1ed", new ObCharFld(ObField.ENVIRONMENT, 256, 'c', "Sqmx1ed", false, true, false, "", m_obapp, false)); /* *Message text */
            var.addField("Sqmx1eq", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx1eq", false, false, false, "", m_obapp, false)); /* *Message delivery */
            var.addField("Sqmx1eu", new ObCharFld(ObField.ENVIRONMENT, 128, 'c', "Sqmx1eu", false, true, false, "", m_obapp, false)); /* *Object */
            var.addField("Sqmx1g5", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx1g5", false, false, false, "", m_obapp, false)); /* *Message ID */
            var.addField("Sqmx0r4", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r4", false, false, false, "", m_obapp, false)); /* *View status */
            var.addField("Sqmx0r6", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r6", false, false, false, "", m_obapp, false)); /* *Returned status */
            var.addField("Sqmx0r8", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0r8", false, false, false, "", m_obapp, false)); /* *Returning status */
            var.addField("Sqmx0ra", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0ra", false, false, false, "", m_obapp, false)); /* *Report status */
            var.addField("Sqmx0rc", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rc", false, false, false, "", m_obapp, false)); /* *Panel status */
            var.addField("Sqmx0re", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0re", false, false, false, "", m_obapp, false)); /* *Error status */
            var.addField("Sqmx0rg", new ObCharFld(ObField.ENVIRONMENT, 7, 'c', "Sqmx0rg", false, false, false, "", m_obapp, false)); /* *Call status */
            var.addField("Sqmx0s3", new ObCharFld(ObField.ENVIRONMENT, 1, 'c', "Sqmx0s3", false, false, false, "", m_obapp, false)); /* *Boolean */
            var.addField("Sqmx0xh", new ObCharFld(ObField.ENVIRONMENT, 32, 'c', "Sqmx0xh", false, false, false, "", m_obapp, false)); /* *Object name */

            return var;
        } 

        // End of Environment Variable
        ////////////////////////////////////////////////////////////////
    }
    // End Of Order.CreateOrder Variable Group
    ////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Field Values:

        ObIntFld m_obvalfld_2 = new ObIntFld(0);
        ObCharFld m_obvalfld_0 = new ObCharFld(" ", 7);
        ObCharFld m_obvalfld_3 = new ObCharFld("ERROR", 7);
        ObCharFld m_obvalfld_1 = new ObCharFld("ERR", 7);
    // End Of Field Values
    ////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////
    // Variable and Field Names:

        public final String m_strFldSqmx0rg = "Sqmx0rg";
        public final String m_strVarProdPrice = "ProdPrice";
        public final String m_strVarQtyInStock = "QtyInStock";
        public final String m_strVarSqmx0r8 = "Sqmx0r8";
        public final String m_strFldSqmx0r8 = "Sqmx0r8";
        public final String m_strVarSTjF_UpdateKey = "STjF_UpdateKey";
        public final String m_strVarSqmx0r6 = "Sqmx0r6";
        public final String m_strVarProdDesc = "ProdDesc";
        public final String m_strVarST16F_InsertData = "ST16F_InsertData";
        public final String m_strVarProdName = "ProdName";
        public final String m_strVarSTgF_FetchKey = "STgF_FetchKey";
        public final String m_strVarST18F_Environment = "ST18F_Environment";
        public final String m_strVarProdID = "ProdID";
        public final String m_strVarSTjF_UpdateData = "STjF_UpdateData";
        public final String m_strVarSqmx1c9 = "Sqmx1c9";
        public final String m_strVarSqmx1e9 = "Sqmx1e9";
        public final String m_strVarST18F_Local = "ST18F_Local";
        public final String m_strVarST18F_Order = "ST18F_Order";
        public final String m_strFldSqmx0r6 = "Sqmx0r6";
        public final String m_strVarST18F_Output = "ST18F_Output";
        public final String m_strVarOrderQty = "OrderQty";
        public final String m_strVarSTgF_FetchedData = "STgF_FetchedData";
        public final String m_strVarCustID = "CustID";
    // End Of Variable and Field Names
    ////////////////////////////////////////////////////////////////////////////////
}
// ***************************************************************************
